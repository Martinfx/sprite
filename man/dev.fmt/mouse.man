


MOUSE                        Devices                        MOUSE



_________________________________________________________________

NNAAMMEE
     mouse - Devices used to read mouse and keyboard  events  for
     window systems

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<ddeevv//mmoouussee..hh>>

_________________________________________________________________


DDEESSCCRRIIPPTTIIOONN
     Mouse devices are used by window systems to communicate with
     the  raw  keyboard  and  mouse.   Each rreeaadd kernel call on a
     mouse device returns one or more structures of the following
     format:

          typedef struct {
              int flags;
              int key;
              int deltaX;
              int deltaY;
              unsigned int time;
          } Mouse_Event;
     The buffer specified to a rreeaadd kernel  call  must  be  large
     enough to hold at least one MMoouussee__EEvveenntt.  The _f_l_a_g_s field is
     an OR-ed combination of the following bit masks:

     MMOOUUSSEE__EEVVEENNTT              Means  that  a  mouse  button   was
                              pressed  or  released, or the mouse
                              moved.

     KKEEYYBBOOAARRDD__EEVVEENNTT           Means that a  key  was  pressed  or
                              released on the keyboard.  Only one
                              of  MMOOUUSSEE__EEVVEENNTT  or  KKEEYYBBOOAARRDD__EEVVEENNTT
                              will   be  set  in  any  particular
                              event.

     KKEEYY__UUPP                   This bit is only relevant for  key-
                              board  events.   If set, it implies
                              that the key was released;   other-
                              wise, the key was pressed.

     For mouse events, the _k_e_y field contains a bit mask indicat-
     ing which mouse buttons are currently depressed.  The _d_e_l_t_a_X
     and _d_e_l_t_a_Y fields indicate how much the mouse has moved  (in
     pixels)  since the last mouse-related event.  The _t_i_m_e field
     gives the value of a free-running millisecond clock  at  the
     time  the  event  occurred.   The _t_i_m_e value has no absolute
     significance, but is useful in  comparing  times  from  dif-
     ferent events.

     For keyboard events, the _k_e_y field gives the number of a key



Sprite v.1.0         Printed:  June 25, 1989                    1






MOUSE                        Devices                        MOUSE



     on the keyboard.  The numbers are keyboard-specific, and are
     usually different than the ASCII values represented  by  the
     keys.   The  KKEEYY__UUPP mask bit indicates whether the given key
     just went up or down.  For ideal keyboards, such as those on
     most Sun workstations, separate up and down events occur for
     each key.  For  less-than-ideal  keyboards,  such  as  DEC's
     LK201,  down  events  occur for all keys, but up events only
     occur for a few keys such as shift.  The _d_e_l_t_a_X  and  _d_e_l_t_a_Y
     fields have no significance for keyboard events, and _t_i_m_e is
     the same as for mouse events.

     Writing to a mouse device has machine-specific effects.   On
     Suns,  characters  written to a mouse device are transmitted
     to the keyboard and perform the following special functions,
     depending on the value of the character:

     KKBBDD__RREESSEETT ((11))            Reset the keyboard.

     KKBBDD__BBEELLLL__OONN ((22))          Turn on the bell.  It will stay  on
                              until the KKBBDD__BBEELLLL__OOFFFF character is
                              transmitted.

     KKBBDD__BBEELLLL__OOFFFF ((33))         Turn off the bell.

     KKBBDD__CCLLIICCKK__OONN ((1100))        Generate a click on each keystroke.

     KKBBDD__CCLLIICCKK__OOFFFF ((1111))       Stop clicking on each keystroke.

     No device-specific IO-control  operations  are  defined  for
     mouse devices.


KKEEYYWWOORRDDSS
     event, keyboard, mouse, window system





















Sprite v.1.0         Printed:  June 25, 1989                    2



