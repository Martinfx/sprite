


SETBUF                C Library Procedures                 SETBUF



NNAAMMEE
     setbuf, setbuffer, setlinebuf, setvbuf - assign buffering to
     a stream

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<ssttddiioo..hh>>

     sseettbbuuff((ssttrreeaamm,, bbuuff))
     FFIILLEE **ssttrreeaamm;;
     cchhaarr **bbuuff;;

     sseettbbuuffffeerr((ssttrreeaamm,, bbuuff,, ssiizzee))
     FFIILLEE **ssttrreeaamm;;
     cchhaarr **bbuuff;;
     iinntt ssiizzee;;

     sseettlliinneebbuuff((ssttrreeaamm))
     FFIILLEE **ssttrreeaamm;;

     sseettvvbbuuff((ssttrreeaamm,, bbuuff,, mmooddee,, ssiizzee))
     FFIILLEE **ssttrreeaamm;;
     cchhaarr **bbuuff;;
     iinntt mmooddee;;
     iinntt ssiizzee;;


DDEESSCCRRIIPPTTIIOONN
     The three types of buffering available are unbuffered, block
     buffered, and line buffered.  When an output stream is
     unbuffered, information appears on the destination file or
     terminal as soon as written; when it is block buffered many
     characters are saved up and written as a block; when it is
     line buffered characters are saved up until a newline is
     encountered or input is read from stdin.  _F_f_l_u_s_h (see
     _f_c_l_o_s_e(3S)) may be used to force the block out early.  Nor-
     mally all files are block buffered.  A buffer is obtained
     from _m_a_l_l_o_c(3) upon the first _g_e_t_c or _p_u_t_c(3S) on the file.
     If the standard stream ssttddoouutt refers to a terminal it is
     line buffered.  The standard stream ssttddeerrrr is always unbuf-
     fered.

     _S_e_t_b_u_f is used after a stream has been opened but before it
     is read or written.  The character array _b_u_f is used instead
     of an automatically allocated buffer.  If _b_u_f is the con-
     stant pointer NNUULLLL,, input/output will be completely unbuf-
     fered.  A manifest constant BBUUFFSSIIZZ tells how big an array is
     needed:

          cchhaarr buf[BUFSIZ];

     _S_e_t_b_u_f_f_e_r, an alternate form of _s_e_t_b_u_f, is used after a
     stream has been opened but before it is read or written.



Sprite v1.0             October 16, 1987                        1






SETBUF                C Library Procedures                 SETBUF



     The character array _b_u_f whose size is determined by the _s_i_z_e
     argument is used instead of an automatically allocated
     buffer.  If _b_u_f is the constant pointer NNUULLLL, input/output
     will be completely unbuffered.

     _S_e_t_l_i_n_e_b_u_f is used to change _s_t_d_o_u_t or _s_t_d_e_r_r from block
     buffered or unbuffered to line buffered.  Unlike _s_e_t_b_u_f and
     _s_e_t_b_u_f_f_e_r it can be used at any time that the file descrip-
     tor is active.

     _S_e_t_v_b_u_f is the final form of _s_e_t_b_u_f;  as with _s_e_t_b_u_f, it
     must be invoked after a stream has been opened but before it
     is read or written.  The argument _m_o_d_e determines how _s_t_r_e_a_m
     will be buffered: __IIOOFFBBFF causes input/output to be fully
     buffered, __IIOOLLBBFF causes output to be line buffered, and
     __IIOONNBBFF causes input/output to be unbuffered.  The argument
     _s_i_z_e specifies how large a buffer to use.  If _b_u_f is NNUULLLL ,
     then _s_e_t_v_b_u_f will allocate the buffer space;  otherwise, it
     will use the space at _b_u_f (which must contain at least _s_i_z_e
     bytes).  _S_e_t_v_b_u_f returns zero on success, or nonzero if an
     invalid value is given for _m_o_d_e or if the request cannot be
     honored.

     A file can be changed from unbuffered or line buffered to
     block buffered by using _f_r_e_o_p_e_n (see _f_o_p_e_n(3S)).  A file can
     be changed from block buffered or line buffered to unbuf-
     fered by using _f_r_e_o_p_e_n followed by _s_e_t_b_u_f with a buffer
     argument of NNUULLLL.

SSEEEE AALLSSOO
     fopen(3S), getc(3S), putc(3S), malloc(3), fclose(3S),
     puts(3S), printf(3S), fread(3S)

BBUUGGSS
     The _s_e_t_b_u_f_f_e_r and _s_e_t_l_i_n_e_b_u_f functions are not portable to
     non-4.2BSD versions of UNIX.  On 4.2BSD and 4.3BSD systems,
     _s_e_t_b_u_f always uses a suboptimal buffer size and should be
     avoided.  _S_e_t_b_u_f_f_e_r is not usually needed as the default
     file I/O buffer sizes are optimal.
















Sprite v1.0             October 16, 1987                        2



