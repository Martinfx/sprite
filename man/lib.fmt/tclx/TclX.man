


TclX                 UNKNOWN MANUAL SECTION                  TclX



NNAAMMEE
     TclX - Extended Tcl - Extended command set for Tcl 6.1.

IINNTTRROODDUUCCTTIIOONN
     This man page contains the  documentation  for  all  of  the
     extensions that are added to Tcl 6.1 by Extended Tcl.  These
     extensions provide their capabilities by adding new commands
     to   Tcl  whitout  changing  the  syntax  of  standard  Tcl.
     Extended Tcl is a superset of standard Tcl and is built with
     the standard Tcl sources.

     The command descriptions are separated into several sections:

     o General Commands

     o Unix Access Commands

     o File I/O Commands

     o File Scanning Commands

     o Math Commands

     o List Manipulation Commands

     o Keyed Lists

     o String and Character Manipulation Commands

GGEENNEERRAALL CCOOMMMMAANNDDSS
     A set of general useful Tcl commands.  Includes  interactive
     inputting  of commands, a facility for tracing execution and
     a looping command.

     ccoommmmaannddlloooopp [[_p_r_o_m_p_t] [_p_r_o_m_p_t_2]
          Create an interactive command loop for the current  TCL
          interpreter.  This command receives commands from stdin
          and executes them.  This command  is  useful  for  non-
          interactive  TCL scripts that want to enter an interac-
          tive mode.  _P_r_o_m_p_t is a command string to set  the  top
          level prompt hook to
           to, the contents of which is executed to generate  the
          main  prompt.   _P_r_o_m_p_t_2  is a command string to set the
          down level prompt to, which  is  generates  the  prompt
          command  for continuation input.  When the command ter-
          minates, the variables for the prompt hooks will be set
          to  their old value.  If these arguments are not speci-
          fied, the prompt hooks use their current value.  Prompt
          hooks  are  TCL  code  that  return as their result the
          prompt to output.  The result of the last command  exe-
          cuted  in  the  command  string (which may be a rreettuurrnn)
          will be outputted as the prompt.



Tcl                                                             1






TclX                 UNKNOWN MANUAL SECTION                  TclX



     ccmmddttrraaccee _l_e_v_e_l|oonn [nnooeevvaall] [nnoottrruunnccaattee] [fflluusshh] [_f_i_l_e_h_a_n_d_l_e]
          Print a trace statement for all  commands  executed  at
          depth of _l_e_v_e_l or below (1 is the top level).  If oonn is
          specified, all commands at any level  are  traced.   If
          nnooeevvaall  is specified, arguments are printed unevaluated
          -- if it is not specified, the  arguments  are  printed
          after evaluation. If the command line is longer than 60
          characters, it is truncated to 60 and a "..." is  post-
          pended  to  indicate  that  there  was more.  If nnooeevvaall
          wasn't  specified,  the  arguments  are  printed  after
          evaluation.   In  this case, each argument is truncated
          to 40 characters (with "..." postpended if the argument
          was  longer  than  40  characters)  and  printed. If an
          evaluated argument contains a space, the  entire  argu-
          ment  will be enclosed inside of braces (`{}') to allow
          the reader to visually separate the arguments from each
          other.  If nnoottrruunnccaattee is specified, then the truncation
          of commands and evaluated arguments will  be  disabled.
          If  fflluusshh  is specified, then the output buffer will be
          flushed after each line is  printed.   This  is  useful
          when  tracing  code that cause an application to abort,
          making it easy to narrow the problem down to  the  com-
          mand that caused the abort. If _f_i_l_e_h_a_n_d_l_e is specified,
          then the trace output will be written to the file.

     ccmmddttrraaccee ooffff
          Turn off all tracing.

     ccmmddttrraaccee ddeepptthh
          Returns the current maximum trace  level,  or  zero  if
          trace is disabled.

     eecchhoo _s_t_r_1 [_s_t_r_2..]
          Print the strings to stdout followed by a newline.

     iinnffooxx _o_p_t_i_o_n
          Return information about extended Tcl  or  the  current
          application.  The  following  iinnffooxx command options are
          available.

          vveerrssiioonn
               Return the version number of  Extended  Tcl.   The
               version  number  for  extended Tcl is generated by
               combining the base version  of  the  standard  Tcl
               code  with  a  letter  indicating  the  version of
               Extended Tcl being used.  This is  the  documenta-
               tion for version ttccll66..11aa.

          ppaattcchhlleevveell
               Return the patchlevel for Extended Tcl.

          aappppnnaammee



Tcl                                                             2






TclX                 UNKNOWN MANUAL SECTION                  TclX



               Return  the  symbolic  application  name  of   the
               current  application  linked with the Extended Tcl
               library.  The C variable ttccllAAppppNNaammee must be set by
               the  application to return an application specific
               value for this variable.

          aapppplloonnggnnaammee
               Return a natural language  name  for  the  current
               application. The C variable ttccllLLoonnggAAppppNNaammee must be
               set by the application to  return  an  application
               specific value for this variable.

          aappppvveerrssiioonn
               Return the version number for the current applica-
               tion.  The C variable ttccllAAppppVVeerrssiioonn must be set by
               the application to return an application  specific
               value for this variable.

     lloooopp _v_a_r _f_i_r_s_t _l_a_s_t [_i_n_c_r_e_m_e_n_t] _b_o_d_y
          LLoooopp is a looping command, similar in behavior  to  the
          Tcl  ffoorr  statement,  except  that  the  lloooopp statement
          achieves substantially higher performance and is easier
          to  code when the beginning and ending values of a loop
          are known and the loop variable is to be incremented by
          a known, fixed amount every time through.

           The _v_a_r argument is the name of a  Tcl  variable  that
          will  contain  the loop index.  The loop index is first
          set to the value specified by _f_i_r_s_t.   The  Tcl  inter-
          preter  is  invoked upon _b_o_d_y zero or more times, where
          _v_a_r is incremented by _i_n_c_r_e_m_e_n_t every time through  the
          loop,  or by one if _i_n_c_r_e_m_e_n_t is not specified.  _I_n_c_r_e_-
          _m_e_n_t can be negative in which case the loop will  count
          downwards.

          When _v_a_r reaches _l_a_s_t, the loop  terminates  without  a
          subsequent  execution  of  _b_o_d_y.   For instance, if the
          original lloooopp parameters would cause lloooopp to terminate,
          say  _f_i_r_s_t was one, _l_a_s_t was zero and _i_n_c_r_e_m_e_n_t was not
          specified or was non-negative, _b_o_d_y is not executed  at
          all and lloooopp returns.

          If a ccoonnttiinnuuee command is invoked within _b_o_d_y  then  any
          remaining commands in the current execution of _b_o_d_y are
          skipped, as in the ffoorr command.  If a bbrreeaakk command  is
          invoked  within  _b_o_d_y then the lloooopp command will return
          immediately.  LLoooopp returns an empty string.

UUNNIIXX AACCCCEESSSS CCOOMMMMAANNDDSS
     These commands provide access to many basic Unix facilities,
     including  process handling, data and time, signal handling,
     linking  and  unlinking  files,  changing  file  attributes,



Tcl                                                             3






TclX                 UNKNOWN MANUAL SECTION                  TclX



     process  and  user attributes and the executing commands via
     the shell.

     aallaarrmm _s_e_c_o_n_d_s
          Instructs the system to send a SIGALRM  signal  in  the
          specified number of seconds.  If _s_e_c_o_n_d_s is 0, any pre-
          vious alarm request is canceled.  Only one alarm  at  a
          time  may  be active, the command returns the number of
          seconds left in the previous alarm.

     cchhggrrpp _g_r_o_u_p _f_i_l_e_l_i_s_t
          Set group of each file in the list _f_i_l_e_l_i_s_t  to  _g_r_o_u_p,
          which is a group name or numeric group id.

     cchhmmoodd [[--ii] _m_o_d_e _f_i_l_e_l_i_s_t
          Set permissions of each of the files in the list _f_i_l_e_l_-
          _i_s_t  to _m_o_d_e, which is an absolute numeric mode or sym-
          bolic permissions as  in  the  cchhmmoodd((CC))  UNIX  command.
          Normally  absolute modes are assumed to be specified in
          octal.   However  Tcl  stores  numbers  internally   as
          integers.   The --ii option causes an absolute mode to be
          treated as a standard Tcl integer (decimal unless  pre-
          fixed by "0" of "0x").

     cchhoowwnn _o_w_n_e_r|{_o_w_n_e_r _g_r_o_u_p} _f_i_l_e_l_i_s_t
          Set owner of each file in the list _f_i_l_e_l_i_s_t  to  _o_w_n_e_r,
          which  is  a  owner  name  or numeric owner id.  If the
          first parameter is a list, then the owner is set to the
          first  element  of the list and the group is set to the
          second element of the list. _G_r_o_u_p is a  group  name  or
          numeric  group id.  If _g_r_o_u_p is {}, then the file group
          will be set to the group for the associated the  speci-
          fied user.

     eexxeeccvvpp _p_r_o_g [_a_r_g_1..._a_r_g_N]
          Do an execvp, replacing the current program  with  _p_r_o_g
          and passing the arguments _a_r_g_1..._a_r_g_N.

     ffmmttcclloocckk _c_l_o_c_k_v_a_l [_f_o_r_m_a_t] [GGMMTT||{{}}]
          Convert a value returned by ggeettcclloocckk or ffiillee  to  human
          readable  form.   The  _f_o_r_m_a_t argument is a string that
          describes how to  format  the  date  and  time.   Field
          descriptors  consist  of  a  ``%''  followed by a field
          descriptor. All other characters are  copied  into  the
          result.  The available field descriptors are:

              %% - Insert a %.
              %a - Abbreviated weekday name.
              %A - Full weekday name
              %b - Abbreviated month name.
              %B - Full month name.
              %d - Day of month (01 - 31).



Tcl                                                             4






TclX                 UNKNOWN MANUAL SECTION                  TclX



              %D - Date as %m/%d/%y.
              %e - Day of month (1-31), no leading zeros.
              %h - Abbreviated month name.
              %H - Hour (00 - 23).
              %I - Hour (00 - 12).
              %j - Day number of year (001 - 366).
              %m - Month number (01 - 12).
              %M - Minute (00 - 59).
              %n - Insert a new line.
              %p - AM or PM.
              %r - Time as %I:%M:%S %p.
              %R - Time as %H:%M.
              %S - Seconds (00 - 59).
              %t - Insert a tab.
              %T - Time as %H:%M:%S.
              %U - Week number of year (01 - 52), Sunday is the first
                   day of the week.
              %w - Weekday number (Sunday = 0).
              %W - Week number of year (01 - 52), Monday is the first
                   day of the week.
              %x - Local specific date format.
              %X - Local specific time format.
              %y - Year within century (00 - 99).
              %Y - Year as ccyy (e.g. 1990)
              %Z - Time zone name.

          If format is not specified, "%a %b %d %H:%M:%S  %Z  %Y"
          is  used.   If  GGMMTT is specified, the time will be for-
          mated as Greenwich Mean Time. If the  argument  is  not
          specified  or is empty, then the local timezone will be
          used as defined by the timezone environment variable.

     ffoorrkk
          Fork the current TCL process.  Fork returns zero to the
          child  process  and  the process number of the child to
          the parent process.  If an eexxeeccvvpp is not  going  to  be
          performed before the forked process does output, then a
          fflluusshh should be issued against ssttddoouutt, ssttddeerrrr  and  any
          other  open  output file before doing the ffoorrkk.  Other-
          wise, output from the parent  process  pending  in  the
          buffers will also be outputted by the child process.

     ggeettcclloocckk
          Return the current date and time as a system  dependent
          integer  value.   The  unit  of  the  value is seconds,
          allowing it to be used for relative  time  calculations
          and so forth.

     iidd ooppttiioonnss
          This command provides a means of getting,  setting  and
          converting  user, group and process ids.  The following
          versions of the iidd command are available:



Tcl                                                             5






TclX                 UNKNOWN MANUAL SECTION                  TclX



          iidd uusseerr [_n_a_m_e]

          iidd uusseerriidd [_u_i_d]
               Set the real and effective user ID to _n_a_m_e or _u_i_d,
               if  the  name  (or  uid)  is valid and permissions
               allow it.  If the name (or uid) is not  specified,
               the current name (or uid) is returned.

          iidd ccoonnvveerrtt uusseerriidd _u_i_d

          iidd ccoonnvveerrtt uusseerr _n_a_m_e
               Convert a user ID number to a user name,  or  vice
               versa.

          iidd ggrroouupp [_n_a_m_e]

          iidd ggrroouuppiidd [_g_i_d]
               Set the real and effective group  ID  to  _n_a_m_e  or
               _g_i_d, if the name (or gid) is valid and permissions
               allow it.  If the  group  name  (or  gid)  is  not
               specified,  the  current  group  name  (or gid) is
               returned.

          iidd ccoonnvveerrtt ggrroouuppiidd _g_i_d

          iidd ccoonnvveerrtt ggrroouupp _n_a_m_e
               Convert a group ID number to a group name, or vice
               versa.

          iidd eeffffeeccttiivvee uusseerr

          iidd eeffffeeccttiivvee uusseerriidd
               Return the effective user name, or effective  user
               ID number, respectively.

          iidd eeffffeeccttiivvee ggrroouupp

          iidd eeffffeeccttiivvee ggrroouuppiidd
               Return the  effective  group  name,  or  effective
               group ID number, respectively.

          iidd pprroocceessss
               Return the process ID of the current process.

          iidd pprroocceessss ppaarreenntt
               Return the process ID of the parent of the current
               process.

          iidd pprroocceessss ggrroouupp
               Return the process group ID of  the  current  pro-
               cess.




Tcl                                                             6






TclX                 UNKNOWN MANUAL SECTION                  TclX



          iidd pprroocceessss ggrroouupp sseett
               Set the process group ID of the current process to
               its process ID.

     kkiillll [[_s_i_g_n_a_l] _p_r_o_c_e_s_s_l_i_s_t
          Send a signal to the each  process  in  the  list  _p_r_o_-
          _c_e_s_s_l_i_s_t,  if  permitted.   _S_i_g_n_a_l,  if present, is the
          signal number or the symbolic name of the  signal,  see
          the  signal system call manual page.  The leading "SIG"
          is optional when the signal is specified  by  its  sym-
          bolic name.

     The default for _s_i_g_n_o is 15, SIGTERM.

     lliinnkk _s_r_c_p_a_t_h _d_e_s_t_p_a_t_h
          Create a directory entry, _d_e_s_t_p_a_t_h, linking it  to  the
          existing file, _s_r_c_p_a_t_h.

     mmkkddiirr [[--ppaatthh]] _d_i_r_L_i_s_t
          Create each of the directories  in  the  list  _d_i_r_L_i_s_t.
          The mode on the new directories is 777, modified by the
          umask.  If --ppaatthh is specified,  then  any  non-existent
          parent  directories  in  the  specified  path  are also
          created.

     rrmmddiirr _d_i_r_L_i_s_t
          Remove each of the directories in the list _d_i_r_L_i_s_t.

     ssiiggnnaall _a_c_t_i_o_n _s_i_g_l_i_s_t [_c_o_m_m_a_n_d]
          Specify the action to take when a Unix  signal  occurs.
          _S_i_g_l_i_s_t  is  a  list  of either the symbolic or numeric
          Unix signal (the SIG prefix is  optional).   _A_c_t_i_o_n  is
          one of the following actions to be performed on receipt
          of the signal.

          ddeeffaauulltt - Terminate the process

          iiggnnoorree - Ignore the signal.

          eerrrroorr - Generate a catchable Tcl error.  It will be  as
          if the command that was running returned an error.  The
          error code will be in the form:
              {UUNNIIXX SSIIGG _s_i_g_n_a_m_e}
          For the death of child signal, _s_i_g_n_a_m_e will  always  be
          SIGCHLD, rather than SIGCLD, to allow writting protable
          code.

          ttrraapp - When the signal  occures,  execute  _c_o_m_m_a_n_d  and
          continue  execution if an error is not returned by _c_o_m_-
          _m_a_n_d.  If will be executed in the  global  context  and
          the symbolic signal name (e.g. SIGINT) will be supplied
          in a global variable ssiiggnnaallRReecciieevveedd.  If  an  error  is



Tcl                                                             7






TclX                 UNKNOWN MANUAL SECTION                  TclX



          returned, then follow the standard Tcl error mechanism.
          Often _c_o_m_m_a_n_d will just do an eexxiitt.

          ggeett - Retrieve the current settings  of  the  specified
          signals.   A  list  will  be returned with each element
          containing  one  of  `ddeeffaauulltt',  `iiggnnoorree',  `eerrrroorr'  or
          `ttrraapp' corresponding to each signal in _s_i_g_l_i_s_t.

          For all signals except SSIIGGCCLLDD, the signal  action  will
          remain  enabled after the specified signal has occured.
          For SSIIGGCCLLDD (also known as SSIIGGCCHHLLDD), the signal will not
          be  automatically  reenable.  A  wait must be performed
          before issuing another ssiiggnnaall command.  Signals are not
          processed until after the completion of the Tcl command
          that is executing when the signal is recieved.

     sslleeeepp _s_e_c_o_n_d_s
          Sleep the TCL process for _s_e_c_o_n_d_s.

     ssyysstteemm _c_o_m_m_a_n_d
          Executes _c_o_m_m_a_n_d via the system(3) call.  Differs  from
          eexxeecc because ssyysstteemm doesn't return stdout as the result
          or the command and ssyysstteemm goes  through  the  shell  to
          provide  wildcard  expansion,  redirection,  etc, as is
          normal from a sshh command line.  Returns the  exit  code
          of the command.

     ttiimmeess
          Return a list containing the process and  child  execu-
          tion times in the form:
              _u_t_i_m_e _s_t_i_m_e _c_u_t_i_m_e _c_s_t_i_m_e
          See times system call manual page.  The values  are  in
          milliseconds.

     uummaasskk [[_o_c_t_a_l_m_a_s_k]
          Sets file-creation mode mask  to  the  octal  value  of
          _o_c_t_a_l_m_a_s_k.   If  _o_c_t_a_l_m_a_s_k is omitted, the current mask
          is returned.

     uunnlliinnkk _f_i_l_e_l_i_s_t
          Delete (unlink) the files whose names are in  the  list
          _f_i_l_e_l_i_s_t.

     wwaaiitt _p_r_o_c_l_i_s_t
          Waits for an  any  of  the  immediate  child  processes
          specified in the list _p_r_o_c_l_i_s_t to terminate or a signal
          to be received.  WWaaiitt returns a list of three elements:
          The first element is process id of the terminating pro-
          cess. If the process exited normally, the  second  ele-
          ment  is  `EXIT',  followed  by the error code.  If the
          process terminated because of a signal, the second ele-
          ment  is  `SIG',  followed  by the signal name.  If the



Tcl                                                             8






TclX                 UNKNOWN MANUAL SECTION                  TclX



          process is currently stopped,  the  second  element  is
          `STOP', followed by the signal name.

FFIILLEE II//OO CCOOMMMMAANNDDSS
     The commands extend the stdio-style  file  I/O  capabilities
     present  in  Tcl  6.1.   These  extensions include searching
     ASCII-sorted data files,  copying  files,  duplicating  file
     descriptors, control of file access options, retrieving open
     file status, and creating pipes with the ppiippee system call. A
     interface  to  the  sseelleecctt  system call is also available on
     Unix systems that support it.

     It should be noted that Tcl file I/O is implemented  on  top
     of  the  stdio  library.   By default, the file is buffered,
     when communicating to a process through a pipe, a fflluusshh com-
     mand should be issued to force the data out.  Alternatively,
     the ffccnnttll command may be used to set the buffering  mode  to
     line buffered or unbuffered.

     bbsseeaarrcchh _f_i_l_e_h_a_n_d_l_e _k_e_y [_r_e_t_v_a_r] [_c_o_m_p_a_r_e__p_r_o_c]
          Search an opened sorted data file,  _f_i_l_e_h_a_n_d_l_e,  for  a
          line  matching  _k_e_y.  If  _r_e_t_v_a_r is specified, then the
          line from the file is returned in _r_e_t_v_a_r and  the  com-
          mand  returns  11  if _k_e_y was found, and 00 if it was not
          found.  If _r_e_t_v_a_r is not specified or is a  null  name,
          then the command returns the line that was found, or an
          empty string if _k_e_y is not found.

          By default,  the  key  is  matched  against  the  first
          white-space seperated field in each line.  The field is
          treated as an ASCII string.  If _c_o_m_p_a_r_e__p_r_o_c is  speci-
          fied,  then it is the name of a Tcl procedure to evalu-
          ate  against  each  line  read  from  the  file.   This
          _c_o_m_p_a_r_e__p_r_o_c  takes  two  arguments, the key and a line
          extracted from the file.  The  compare  routine  should
          return  a number less than zero if the key is less than
          the line, zero if the key matches the line  or  greater
          than  zero  if  the  key is greater than the line.  The
          file must be sorted in assending order by whatever cri-
          teria  _c_o_m_p_a_r_e__p_r_o_c  uses  to  compare the key with the
          line.

     ccooppyyffiillee _h_a_n_d_l_e_1 _h_a_n_d_l_e_2
          Copies the rest of file specified by _h_a_n_d_l_e_1  from  its
          current position to the file specified by _h_a_n_d_l_e_2.

     dduupp _f_i_l_e_h_a_n_d_l_e [_s_t_d_h_a_n_d_l_e]
          Duplicate an open file.  A file handle is created  that
          addresses the same file as _f_i_l_e_h_a_n_d_l_e.

          A special case is allowed for dup-ing files  to  stdin,
          stdout  or  stderr.  If _s_t_d_h_a_n_d_l_e is specified, then it



Tcl                                                             9






TclX                 UNKNOWN MANUAL SECTION                  TclX



          must be one of the standard handles to  dup  _f_i_l_e_h_a_n_d_l_e
          to.

              proc ChildProcess {cmd inPipe outPipe} {
                  if {[set childPid [fork]] == 0} {
                      close stdin
                      dup $inPipe stdin
                      close $inPipe

                      close stdout
                      dup $outPipe stdout
                      close $outPipe

                      execvp $cmd
                      # will never make it here...
                  }
                  return $childPid
              }

     ffccnnttll _h_a_n_d_l_e [_a_t_t_r_i_b_u_t_e _v_a_l_u_e]
          This command either returns a list of  various  boolean
          attributes  controlling  access  to  a  file  or set or
          clears one of the boolean attributes.  If _a_t_t_r_i_b_u_t_e and
          _v_a_l_u_e  are  not  specified, then the list of the attri-
          butes that are set are return. If an attribute  is  not
          set,  then  it  will  not be included in the list.  The
          following attributes maybe returned:

          RRDDOONNLLYY - The file is opened for reading only.

          WWRROONNLLYY - The file is opened for writing only.

          RRDDWWRR - The file is opened for reading and writing.

          AAPPPPEENNDD - The file is opened  for  append  only  writes.
          All writes will be forced to the end of the file.

          NNDDEELLAAYY - The file is to be accessed  with  non-blocking
          I/O.  See the rreeaadd system call for a description of how
          it affects the behaviour of file reads

          CCLLEEXXEECC - Close the file on an  process  exec.   If  the
          eexxeeccvvpp  command or some other mechanism causes the pro-
          cess to exec, the file will be closed.

          NNOOBBUUFF - The file is not buffered. If set, then there no
          stdio buffering for the file.

          LLIINNEEBBUUFF - Output the file will be  line  buffered.  The
          buffer  will be flushed when a newline is written, when
          the buffer is full, or when input is requested.




Tcl                                                            10






TclX                 UNKNOWN MANUAL SECTION                  TclX



          The AAPPPPEENNDD, NNDDEELLAAYY, and CCLLEEXXEECC attributes may be set or
          cleared  by specifying the attribute name and a value 11
          to set the attribute and 00 to clear it.

          The NNOOBBUUFF and LLIINNEEBBUUFF attributes may  only  be  set  (a
          value  of  11)  and  only one of the options may be set.
          Once set, they may not be cleared. Thees option  should
          be  set before any I/O operations have been done on the
          file.

     ffssttaatt _h_a_n_d_l_e [_a_r_r_a_y_v_a_r]
          Obtain the status of an open file.  This  differs  from
          the  ffiillee  ssttaatt  command in that it takes a file handle
          rather than a file name.  If _a_r_r_a_y_v_a_r is specified, the
          status  information  is  returned in the following ele-
          ments of this array variable: aattiimmee, ccttiimmee,  ddeevv,  ggiidd,
          iinnoo,  mmooddee, mmttiimmee, nnlliinnkk, ssiizzee, uuiidd.  Each element is a
          decimal string with  the  value  of  the  corresponding
          field  from  the  ssttaatt return structure; see the manual
          entry for ssttaatt for  details  on  the  meanings  of  the
          values.   If _a_r_r_a_y_v_a_r is not specified, then the infor-
          mation is returned as a keyed list.   Each  element  of
          the  list  is  itself a list with the status value name
          paired with its  value,  in  alphabetical  order.   For
          example:


          {atime 683617279} {ctime 683617310} {dev 298}  {gid 50}
          {ino 6317}   {mode 33152}  {mtime 683617310}  {nlink 1}
          {size 924} {uid 200}

     ppiippee [[_h_a_n_d_l_e__v_a_r__r _h_a_n_d_l_e__v_a_r__w]
          Create a pipe (see the pipe system call  manual  page).
          If  _h_a_n_d_l_e__v_a_r__r  and  _h_a_n_d_l_e__v_a_r__r are specified, then
          variable _h_a_n_d_l_e__v_a_r__r will contain  the  handle  opened
          for  reading  and  _h_a_n_d_l_e__v_a_r__w will contain the handle
          opened for writing.  If the handle  variables  are  not
          specified,  then a list containing the read followed by
          the write handle is returned as the result of the  com-
          mand.

     sseelleecctt _r_e_a_d_h_a_n_d_l_e_s [_w_r_i_t_e_h_a_n_d_l_e_s] [_e_x_c_e_p_t_h_a_n_d_l_e_s] [_t_i_m_e_o_u_t]
          This command allows polling  or  blocking  on  multiple
          files  being ready for for reading, are ready for writ-
          ing,  or  have  an   exceptional   condition   pending.
          _r_e_a_d_h_a_n_d_l_e_s, _w_r_i_t_e_h_a_n_d_l_e_s, _e_x_c_e_p_t_h_a_n_d_l_e_s are each lists
          of file handles (as returned from ooppeenn) to  query.   An
          empty  list  ({}) may be specified if a category is not
          used.

          The _r_e_a_d_h_a_n_d_l_e_s files are checked to  set  if  data  is
          available  for reading. The _w_r_i_t_e_h_a_n_d_l_e_s are checked if



Tcl                                                            11






TclX                 UNKNOWN MANUAL SECTION                  TclX



          they  are  clear  for  writing  The  _e_x_c_e_p_t_h_a_n_d_l_e_s  are
          checked to see if an exceptional condition has occured.
          The write and exception checking is most useful on dev-
          ices,  however, the read checking is also very valuable
          when  communicating  with  multiple  processes  through
          pipes.

          _T_i_m_e_o_u_t is a floating point timeout number of  seconds.
          If an empty list is supplied (or the parameter is omit-
          ted), then no timeout is set.  If the  value  is  zero,
          then  the  sseelleecctt  command  functions  as a poll of the
          files.

          If the _t_i_m_e_o_u_t period expires with none  of  the  files
          becomming  ready,  then  the  command  returns an empty
          list.  Otherwise the command returns a  list  of  three
          elements,  each of those elements is a list of the file
          handles that are ready in the read, write and exception
          classes.   If none are ready in a class, then that ele-
          ment will be the null list.  For example:
              select {file3 file4 file5} {file6 file7} {} 10.5

          could return
             {file3 file4} {file6} {}
          or perhaps
             file3 {} {}


FFIILLEE SSCCAANNNNIINNGG CCOOMMMMAANNDDSS
     These commands provide a facility to  scan  files,  matching
     lines  of the file against regular expressions and executing
     Tcl code on a match.  With this facility you can use Tcl  to
     do  the  sort of file processing that are traditionally done
     with aawwkk.  And since Tcl's  approach  is  more  declarative,
     some of the scripts that are really hard to write in awk are
     a snap in Tcl.

     File scanning in Tcl centers around the concept  of  a  _s_c_a_n
     _c_o_n_t_e_x_t.   A  scan context contains one or more match state-
     ments, which associate regular expressions to scan for  with
     Tcl code to be executed when the expressions are matched.

     ssccaannccoonntteexxtt [[_o_p_t_i_o_n]
          This command manages file scan contexts.  A  scan  con-
          text  is  a  collection of regular expressions and com-
          mands to execute when that regular expression matches a
          line  of  the  file.   A context may also have a single
          default match, to be applied against lines that do  not
          match  any  of  the regular expressions.  Multiple scan
          contexts may be defined and the may be reused on multi-
          ple  files.   A scan context is identified by a context
          handle.  The ssccaannccoonntteexxtt command  takes  the  following



Tcl                                                            12






TclX                 UNKNOWN MANUAL SECTION                  TclX



          forms:

     ssccaannccoonntteexxtt ccrreeaattee
          Create a new scan context.  The  ssccaannmmaattcchh  command  is
          used to define patterns in the context.

     ssccaannccoonntteexxtt ddeelleettee _c_o_n_t_e_x_t_h_a_n_d_l_e
          Delete the scan context identified by _c_o_n_t_e_x_t_h_a_n_d_l_e and
          free  all  the  match  statements  and compiled regular
          expressions associated with the specified context.

     ssccaannffiillee _c_o_n_t_e_x_t_h_a_n_d_l_e _f_i_l_e_h_a_n_d_l_e
          Scan the file specified by _f_i_l_e_h_a_n_d_l_e, starting at  the
          current  file position.  Check all patterns in the scan
          context specified by _c_o_n_t_e_x_t_h_a_n_d_l_e against it,  execut-
          ing   the  match  commands  corresponding  to  patterns
          matched.

     ssccaannmmaattcchh [[--nnooccaassee] _c_o_n_t_e_x_t_h_a_n_d_l_e [_r_e_g_e_x_p] _c_o_m_m_a_n_d_s
          Specify Tcl _c_o_m_m_a_n_d_s, to be evaluated  when  _r_e_g_e_x_p  is
          matched  by  a ssccaannffiillee command.  The match is added to
          the scan context specified by  _c_o_n_t_e_x_t_h_a_n_d_l_e.   Several
          match  statements  may be specified for a give context.
          _R_e_g_e_x_p is a regular expression  (see  the  rreeggeexxpp  com-
          mand).   If --nnooccaassee is specified as the first argument,
          the pattern is matched regardless of alphabetic case.

          If _r_e_g_e_x_p is not specified, then  a  default  match  is
          specified for the scan context.  The default match will
          be executed when a line of the file does not match  any
          of the specified regular expressions.

          The array, mmaattcchhIInnffoo, is available when the Tcl code is
          executed  and contains information about the file being
          scanned.  It is local to the top  level  of  the  match
          command unless declared global at that level.  If it is
          to be used as a  global  it  _m_u_s_t  be  declared  global
          before  ssccaannffiillee  is  called  (since  ssccaannffiillee sets the
          mmaattcchhIInnffoo before the match code is executed,  a  subse-
          quent  gglloobbaall  will  override the local variable).  The
          text  of  the  file  line  that  was  matched   is   in
          mmaattcchhIInnffoo((lliinnee)).   The byte offset into the file of the
          line that was matched  is  in  mmaattcchhIInnffoo((ooffffsseett)).   The
          line  number  of  the  line  that  was  matched  is  in
          mmaattcchhIInnffoo((lliinneennuumm)). This is relative to the first  line
          scanned,  not  the  first  line of the file.  The first
          line is line number one.  The file handle of  the  file
          being scanned is in mmaattcchhIInnffoo((hhaannddllee)).

     All ssccaannmmaattcchh patterns that match a line will  be  processed
     in  the order that the specifications were added to the scan
     context.  The remainder  of  the  ssccaannmmaattcchh  pattern-command



Tcl                                                            13






TclX                 UNKNOWN MANUAL SECTION                  TclX



     pairs  may  be skipped for a file line if a ccoonnttiinnuuee is exe-
     cuted in the match command.  If a rreettuurrnn is executed in  the
     body  of the match command, the ssccaannffiillee command in progress
     returns with the value passed to rreettuurrnn as it's value.

MMAATTHH CCOOMMMMAANNDDSS
     These commands make many additonal math functions  available
     in  Tcl, including min, max, trig functions, exponent, loga-
     rithm, square root, and more.  An integer random number gen-
     erator is provided as well.

     aaccooss _n_u_m
          Returns the arccosine of _n_u_m.  _n_u_m is in radians.

     aassiinn _n_u_m
          Returns the arcsin of _n_u_m.  _n_u_m is in radians.

     aattaann _n_u_m
          Returns the arctangent of _n_u_m.  _n_u_m is in radians.

     cceeiill _n_u_m
          Returns the smallest integer not less than _n_u_m  (float-
          ing point).

     ccooss _n_u_m
          Returns the cosine of _n_u_m.  _n_u_m is in radians.

     ccoosshh _n_u_m
          Returns the hyperbolic cosine of _n_u_m.

     eexxpp _n_u_m
          Returns _e to the power of _n_u_m.

     ffaabbss _n_u_m
          Returns the absolute value of _n_u_m (floating point).

     fflloooorr _n_u_m
          Returns  the  largest  integer  not  greater  than  _n_u_m
          (floating point).

     ffmmoodd _n_u_m_1 _n_u_m_2
          Returns _n_u_m_1 modulo _n_u_m_2.

     mmaaxx _n_u_m_1 _n_u_m_2 [.._n_u_m_N]
          Returns the  argument  that  has  the  highest  numeric
          value.  The  arguments,  _n_u_m_N  may  be  any interger or
          floating point values.

     mmiinn _n_u_m_1 _n_u_m_2 [.._n_u_m_N]
          Returns the argument that has the lowest numeric value.
          The  arguments,  _n_u_m_N  may  be any interger or floating
          point values.



Tcl                                                            14






TclX                 UNKNOWN MANUAL SECTION                  TclX



     lloogg _n_u_m
          Returns the natural logarithm of _n_u_m.

     lloogg1100 _n_u_m
          Returns the logarithm base 10 of _n_u_m.

     ppooww _n_u_m_1 _n_u_m_2
          Returns _n_u_m_1 to the power of _n_u_m_2.

     rraannddoomm lliimmiitt | sseeeedd [_s_e_e_d_v_a_l]
          Generate a pseudorandom integer number greater than  or
          equal  to  zero and less than _l_i_m_i_t.  If sseeeedd is speci-
          fied, then the command resets the random number genera-
          tor  to a starting point derived from the sseeeeddvvaall. This
          allows one to reproduce a random  number  sequence  for
          testing purposes.  If _s_e_e_d_v_a_l is omitted, then the seed
          is set to a value based on current system state and the
          current  time,  providing  a reasonably interesting and
          ever-changing seed.

     ssiinn _n_u_m
          Returns the sin of _n_u_m.  _n_u_m is in radians.

     ttaann _n_u_m
          Returns the tangent of _n_u_m.  _n_u_m is in radians.

     ssiinnhh _n_u_m
          Returns the hyperbolic sin of _n_u_m.

     ssqqrrtt _n_u_m
          Returns the square root of _n_u_m.

     ttaannhh _n_u_m
          Returns the hyperbolic tangent of _n_u_m.

LLIISSTT MMAANNIINNIIPPUULLAATTIIOONN CCOOMMMMAANNDDSS
     Extended Tcl provides two additional list manipulation  com-
     mands.

     lleemmppttyy _l_i_s_t
          Determine if the specified list is empty.  If empty,  1
          is returned, otherwise, 0 is returned.  This command is
          an alternative to comparing a list to an empty string.

     llvvaarrppoopp _v_a_r [_i_n_d_e_x [_s_t_r_i_n_g]]
          The llvvaarrppoopp command pops (deletes) the element  indexed
          by  _i_n_d_e_x  from the list in the variable _v_a_r.  If _i_n_d_e_x
          is omitted, then 0 is assumed.  If  _s_t_r_i_n_g,  is  speci-
          fied,  then  the deleted element is replaced by _s_t_r_i_n_g.
          The replaced or  deleted  element  is  returned.   Thus
          ``lvarpop  argv  0'' returns the first element and sets
          argv to contain the remainder of the string.



Tcl                                                            15






TclX                 UNKNOWN MANUAL SECTION                  TclX



KKEEYYEEDD LLIISSTTSS
     Extended Tcl defines a special type of list referred  to  as
     _k_e_y_e_d  _l_i_s_t_s.   These  lists provided a structured data type
     built upon standard Tcl lists.  This provides a  functional-
     ity  similar  to  ssttrruucctts  in the C programming language.  A
     keyed list is a list in which each  element  is  a  key  and
     value  pair  field.  These elements are actually lists them-
     selves, were the key is the first element of the  list,  and
     the value is the second.  The key-value pairs are refered to
     as _f_i_e_l_d_s.  This is an example of a keyed list:

              {{NAME {Frank Zappa}} {JOB {musician and composer}}

     By convention, `.' is a field name separator, allowing nest-
     ing  of  fields,  even  though keyed list are only one level
     deep.  Currently none of the commands explictly function  on
     nested field names, but they may in a future release, so `.'
     should not be used for other than a  field  separator  in  a
     name.  For example:

              {{ID 106} {NAME.FIRST Frank} {NAME.LAST Zappa}}

     All key list functions take the name of  the  variable  con-
     taining the keyed list as an argument (i.e. passed by refer-
     ence) rather than the value.

     kkeeyyllddeell _l_i_s_t_v_a_r _k_e_y
          Delete the field specified by _k_e_y from the  keyed  list
          in the variable _l_i_s_t_v_a_r.  This removes both the key and
          the value from the keyed list.

     kkeeyyllggeett _l_i_s_t_v_a_r _k_e_y [_r_e_t_v_a_r | {}]
          Return the value associated with the _k_e_y out  of  keyed
          list  in the variable _l_i_s_t_v_a_r.  If _r_e_t_v_a_r is not speci-
          fied, then the value will be returned as the result  of
          the command.  If _k_e_y is not found in the list, an error
          will result.  If _r_e_t_v_a_r is specified and _k_e_y is in  the
          list, then the value is returned in the variable _r_e_t_v_a_r
          and the command returns one. If _k_e_y is not in the list,
          the command will return 00 and _r_e_t_v_a_r will be unchanged.
          If {{}}  is  specified  for  _r_e_t_v_a_r,  the  value  is  not
          returned, only the presence of the key is determined.

     kkeeyyllsseett _l_i_s_t_v_a_r _k_e_y _v_a_l_u_e
          Set the value associated with the _k_e_y in the keyed list
          in the variable _l_i_s_t_v_a_r  to _v_a_l_u_e.  If listvar does not
          exists, it is created.  If _k_e_y is not currently in  the
          list,  it  will  be added.  If it already exists, _v_a_l_u_e
          overrides the existing value.

SSTTRRIINNGG AANNDD CCHHAARRAACCTTEERR MMAANNIIPPUULLAATTIIOONN CCOOMMMMAANNDDSS
     The commands provide additional  functionality  to  classify



Tcl                                                            16






TclX                 UNKNOWN MANUAL SECTION                  TclX



     characters, convert characters between character and numeric
     values, and index into a string, determine the length  of  a
     string,  extract  a range of character from a string, repli-
     cate a string a number of times, and transliterate a  string
     (similar to the _t_r command).

     cciinnddeexx _s_t_r_i_n_g _i_n_d_e_x
          Returns the character indexed  by  _i_n_d_e_x  (zero  based)
          from _s_t_r_i_n_g.  This command is a shortcut for:
              ssttrriinngg iinnddeexx _s_t_r_i_n_g _i_n_d_e_x

     cclleennggtthh _s_t_r_i_n_g
          Returns the length of _s_t_r_i_n_g in characters.  This  com-
          mand is a shortcut for:
              ssttrriinngg lleennggtthh _s_t_r_i_n_g

     ccrraannggee _s_t_r_i_n_g _f_i_r_s_t _l_a_s_t
          Returns a range of characters from _s_t_r_i_n_g  starting  at
          _f_i_r_s_t (zero-based) until _l_a_s_t.  The special keyword eenndd
          may  be  specified  for  _l_a_s_t  to  indicate  that   the
          remainder  of the string is to be extracted.  This com-
          mand is a short cut for:
              ssttrriinngg rraannggee _s_t_r_i_n_g _f_i_r_s_t _l_a_s_t

     ccssuubbssttrr _s_t_r_i_n_g _f_i_r_s_t _l_e_n_g_t_h
          Returns a range of characters from _s_t_r_i_n_g  starting  at
          _f_i_r_s_t  (zero-based) for _l_e_n_g_t_h characters.  The special
          keyword eenndd may be specified  for  _l_e_n_g_t_h  to  indicate
          that  the  remainder  of the string is to be extracted.
          This command is a short cut for:
              ssttrriinngg rraannggee _s_t_r_i_n_g _f_i_r_s_t [eexxpprr _l_e_n_g_t_h--11]

     ccttyyppee _c_l_a_s_s _s_t_r_i_n_g
          Determine if all characters in _s_t_r_i_n_g  are  in  of  the
          specified  _c_l_a_s_s.   Returns  11 if they are all of _c_l_a_s_s
          and 00 if they are not or if the string  is  null.  This
          command  also  provides  another method (besides ffoorrmmaatt
          and ssccaann) of converting between an ASCII character  and
          its  numeric  value.   The following ccttyyppee commands are
          available.

          ccttyyppee aallnnuumm _s_t_r_i_n_g
               Tests  that  all  characters  are  alphabetic   or
               numeric  characters  as  defined  by the character
               set.

          ccttyyppee aallpphhaa _s_t_r_i_n_g
               Tests that all characters are  alphabetic  charac-
               ters as defined by the character set.

          ccttyyppee aasscciiii _s_t_r_i_n_g
               Tests that all characters are an  ASCII  character



Tcl                                                            17






TclX                 UNKNOWN MANUAL SECTION                  TclX



               (a non-negative number less than 0200).

          ccttyyppee cchhaarr _n_u_m_b_e_r
               Converts the numeric value, _s_t_r_i_n_g,  to  an  ASCII
               character.   Number must be in the range 0 through
               255.

          ccttyyppee ccnnttrrll _s_t_r_i_n_g
               Tests that all characters  are  ``control  charac-
               ters'' as defined by the character set.

          ccttyyppee ddiiggiitt _s_t_r_i_n_g
               Tests  that  all  characters  are  valid   decimal
               digits, i.e. 0 through 9.

          ccttyyppee ggrraapphh _s_t_r_i_n_g
               Tests that all characters within are any character
               for  which  _c_t_y_p_e  _p_r_i_n_t is true, except for space
               characters.

          ccttyyppee lloowweerr _s_t_r_i_n_g
               Tests that all characters are lowercase letters as
               defined by the character set.

          ccttyyppee oorrdd _c_h_a_r_a_c_t_e_r
               Convert  a  character  into  its  decimal  numeric
               value.  The string must be one character long.

          ccttyyppee ssppaaccee _s_t_r_i_n_g
               Tests that all  characters  are  either  a  space,
               horizontal-tab,    carriage    return,    newline,
               vertical-tab, or form-feed.

          ccttyyppee pprriinntt _s_t_r_i_n_g
               Tests that all characters are a space or any char-
               acter for which _c_t_y_p_e _a_l_n_u_m or _c_t_y_p_e _p_u_n_c_t is true
               or other ``printing character'' as defined by  the
               character set.

          ccttyyppee ppuunncctt _s_t_r_i_n_g
               Tests that all characters are made up  of  any  of
               the  characters  other  than  the  ones  for which
               aallnnuumm, ccnnttrrll, or ssppaaccee is true.

          ccttyyppee uuppppeerr _s_t_r_i_n_g
               Tests that all characters are uppercase letters as
               defined by the character set.

          ccttyyppee xxddiiggiitt _s_t_r_i_n_g
               Tests that all characters  are  valid  hexadecimal
               digits,  that  is  _0  through  _9, a through _f or _A
               through _F.



Tcl                                                            18






TclX                 UNKNOWN MANUAL SECTION                  TclX



     rreepplliiccaattee _s_t_r_i_n_g _c_o_u_n_t
          Returns _s_t_r_i_n_g replicated _c_o_u_n_t times.

     ttrraannsslliitt _i_n_r_a_n_g_e _o_u_t_r_a_n_g_e _s_t_r_i_n_g
          Translate characters in _s_t_r_i_n_g matching  characters  in
          _i_n_r_a_n_g_e  to  the  corresponding  character in _o_u_t_r_a_n_g_e.
          _I_n_r_a_n_g_e and _o_u_t_r_a_n_g_e may be list  of  characters  or  a
          range in the form `A-M'.
              Example:
                  translit a-z A-Z foobar
              returns
                  FOOBAR











































Tcl                                                            19



