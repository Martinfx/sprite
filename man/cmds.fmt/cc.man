


CC                        User Commands                        CC



NNAAMMEE
     cc - GNU project C Compiler

SSYYNNOOPPSSIISS
     cccc [ option ] ... file ...

WWAARRNNIINNGG
     This man page is an extract of the documentation of the
     _G_N_U _C _c_o_m_p_i_l_e_r and is limited to the meaning of the options.
     It is updated only occasionally, because the GNU project
     does not use nroff.  For complete, current documentation,
     refer to the Info file ggcccc or the DVI file ggcccc..ddvvii which are
     made from the Texinfo source file ggcccc..tteexxiinnffoo

DDEESSCCRRIIPPTTIIOONN
     The _G_N_U _C _c_o_m_p_i_l_e_r uses a command syntax much like the Unix
     C compiler. The _c_c program accepts options and file names as
     operands. Multiple single-letter options may _n_o_t be grouped:
     `--ddrr' is very different from `--dd --rr'.  When you invoke
     _G_N_U _C_C, it normally does preprocessing, compilation, assem-
     bly and linking. File names which end in `..cc' are taken as C
     source to be preprocessed and compiled; compiler output
     files plus any input files with names ending in `..ss' are
     assembled; then the resulting object files, plus any other
     input files, are linked together to produce an executable.
     Command options allow you to stop this process at an inter-
     mediate stage.  For example, the `--cc' option says not to run
     the linker.  Then the output consists of object files output
     by the assembler.  Other command options are passed on to
     one stage.  Some options control the preprocessor and others
     the compiler itself.

OOPPTTIIOONNSS
     Here are the options to control the overall compilation pro-
     cess, including those that say whether to link, whether to
     assemble, and so on.

     --oo  _f_i_l_e
          Place linker output in file _f_i_l_e.  This applies regard-
          less to whatever sort of output is being produced,
          whether it be an executable file, an object file, an
          assembler file or preprocessed C code.  If `--oo' is not
          specified, the default is to put an executable file in
          `aa..oouutt', the object file `_s_o_u_r_c_e..cc' in `_s_o_u_r_c_e..oo', an
          assembler file in `_s_o_u_r_c_e..ss', and preprocessed C on
          standard output.

     --mm_t_m Compile code for the target machine given by _t_m.  If
          this switch is not given, then the default is to com-
          pile for the machine given by the MMAACCHHIINNEE environment
          variable.  The following machine types are currently
          defined:  6688000000, 6688001100, and ssuunn22 (all of which compile



Version 1.33             19 January 1989                        1






CC                        User Commands                        CC



          for the 68000 instruction set);  6688002200 and ssuunn33 (both
          of which compile for the 68020 instruction set); and
          ssppuurr.  See below for additional --mm switches to control
          other machine-dependent features.

     --cc   Compile or assemble the source files, but do not link.
          Produce object files with names made by replacing `..cc'
          or `..ss' with `..oo' at the end of the input file names.
          Do nothing at all for object files specified as input.

     --SS   Compile into assembler code but do not assemble.  The
          assembler output file name is made by replacing `..cc'
          with `..ss' at the end of the input file name.  Do noth-
          ing at all for assembler source files or object files
          specified as input.

     --EE   Run only the C preprocessor.  Preprocess all the C
          source files specified and output the results to stan-
          dard output.

     --vv   Compiler driver program prints the commands it executes
          as it runs the preprocessor, compiler proper, assembler
          and linker.  Some of these are directed to print their
          own version numbers.

     --BB_p_r_e_f_i_x
          Compiler driver program tries _p_r_e_f_i_x as a prefix for
          each program it tries to run. These programs are `ccpppp',
          `cccc11..IIttmm' (where _t_m is the target machine for which
          code is being generated, such as given in the --mm
          switch), `aass' and `lldd'.  For each subprogram to be run,
          the compiler driver first tries the `--BB' prefix, if
          any.  If that name is not found, or if `--BB' was not
          Specified, the driver tries standard prefixes
          corresponding to system directories.  If neither of
          those results in a file name that is found, the unmodi-
          fied program name is searched for using the directories
          specified in your `PPAATTHH' environment variable.  The
          run-time support file `ggnnuulliibb' is also searched for
          using the `--BB' prefix, if needed.  If it is not found
          there, the two standard prefixes above are tried, and
          that is all. The file is left out of the link if it is
          not found by those means.  Most of the time, on most
          machines, you can do without it.

     These options control the C preprocessor, which is run on
     each C source file before actual compilation.  If you use
     the `--EE' option, nothing is done except C preprocessing.
     Some of these options make sense only together with `--EE'
     because they request preprocessor output that is not suit-
     able for actual compilation.




Version 1.33             19 January 1989                        2






CC                        User Commands                        CC



     --CC   Tell the preprocessor not to discard comments. Used
          with the `--EE' option.

     --II_d_i_r
          Search directory _d_i_r for include files.

     --II--  Any directories specified with `--II' options before the
          `--II--' option are searched only for the case of
          `##iinncclluuddee ""_f_i_l_e""'; they are not searched for `##iinncclluuddee
          <<_f_i_l_e>>'.  If additional directories are specified with
          `--II' options after the `--II--', these directories are
          searched for all `##iinncclluuddee' directives. (Ordinally _a_l_l
          `--II' directories are used this way.) In addition, the
          `--II--' option inhibits the use of the current directory
          as the first search directory for `##iinncclluuddee ""_f_i_l_e""'.
          Therefore, the current directory is searched only if it
          is requested explicitly with `--II..'.  Specifying both
          `--II--' and `--II..' allows you to control precisely which
          directories are searched before the current one and
          which are searched after.

     --nnoossttddiinncc
          Do not search the standard system directories for
          header files.  Only the directories you have specified
          with `--II' options (and the current directory, if
          appropriate) are searched.  Between `--nnoossttddiinncc' and
          `--II--', you can eliminate all directories from the
          search path except those you specify.

     --MM   Tell the preprocessor to output a rule suitable for
          mmaakkee describing the dependencies of each source file.
          For each source file, the preprocessor outputs one
          mmaakkee-rule whose target is the object file name for that
          source file and whose dependencies are all the files
          `##iinncclluuddee'd in it.  This rule may be a single line or
          may be continued `\\'-newline if it is long.`--MM' implies
          `--EE'.

     --MMMM  Like `--MM' but the output mentions only the user-header
          files included with `##iinncclluuddee ""_f_i_l_e""'.  System header
          files included with `##iinncclluuddee <<_f_i_l_e>>' are omitted.`--MMMM'
          implies `--EE'.

     --DD_m_a_c_r_o
          Define macro _m_a_c_r_o with the empty string as its defini-
          tion.

     --DD_m_a_c_r_o=_d_e_f_n
          Define macro _m_a_c_r_o as _d_e_f_n.

     --UU_m_a_c_r_o
          Undefine macro _m_a_c_r_o.



Version 1.33             19 January 1989                        3






CC                        User Commands                        CC



     --TT   Support ANSI C trigraphs.  You don't want to know about
          this brain-damage.  The `--aannssii' option also has this
          effect.

     These options control the details of C compilation itself.

     --aannssii
          Support all ANSI standard C programs.  This turns off
          certain features of GNU C that are incompatible with
          ANSI C, such as the aassmm, iinnlliinnee and ttyyppeeooff keywords,
          and predefined macros such as uunniixx and vvaaxx that iden-
          tify the type of system you are using.  It also enables
          the undesirable and rarely used ANSI trigraph feature.
          The `--aannssii' option does not cause non-ANSI programs to
          be rejected gratuitously.  For that, `--ppeeddaannttiicc' is
          required in addition to `--aannssii'.  The macro
          ____SSTTRRIICCTT__AANNSSII____ is predefined when the `-ansi' option
          is used.  Some header files may notice this macro and
          refrain from declaring certain functions or defining
          certain macros that the ANSI standard doesn't call for;
          this is to avoid interfering with any programs that
          might use these names for other things.

     --ttrraaddiittiioonnaall
          Attempt to support some aspects of traditional C com-
          pilers.  Specifically:
          * All eexxtteerrnn declarations take effect globally even if
          they are written inside of a function definition.  This
          includes implicit declarations of functions.
          * The keywords ttyyppeeooff, iinnlliinnee, ssiiggnneedd, ccoonnsstt and vvoollaa--
          ttiillee are not recognized.
          * Comparisons between pointers and integers are always
          allowed.
          * Integer types uunnssiiggnneedd sshhoorrtt and uunnssiiggnneedd cchhaarr pro-
          mote to uunnssiiggnneedd iinntt.
          * Out-of-range floating point literals are not an
          error.
          * All automatic variables not declared rreeggiisstteerr are
          preserved by lloonnggjjmmpp.  Ordinarily, GNU C follows ANSI
          C: automatic variables not declared vvoollaattiillee may be
          clobbered.
          * In the preprocessor, comments convert to nothing at
          all, rather than to a space.  This allows traditional
          token concatenation.
          * In the preprocessor, macro arguments are recognized
          within string constants in a macro definition (and
          their values are stringified, though without additional
          quote marks, when they appear in such a context).  The
          preprocessor also considers a string constant to end at
          a newline.
          * The predefined macro ____SSTTDDCC____ is not defined when you
          use `--ttrraaddiittiioonnaall', but ____GGNNUUCC____ is (since the GNU



Version 1.33             19 January 1989                        4






CC                        User Commands                        CC



          extensions which ____GGNNUUCC____ indicates are not affected by
          `--ttrraaddiittiioonnaall').  If you need to write header files
          that work differently depending on whether `--ttrraaddii--
          ttiioonnaall' is in use, by testing both of these predefined
          macros you can distinguish four situations: GNU C,
          traditional GNU C, other ANSI C compilers, and other
          old C compilers.

     --OO   Optimize.  Optimizing compilation takes somewhat more
          time, and a lot more memory for a large function.
          Without `--OO', the compiler's goal is to reduce the cost
          of compilation and to make debugging produce the
          expected results.  Statements are independent: if you
          stop the program with a breakpoint between statements,
          you can then assign a new value to any variable or
          change the program counter to any other statement in
          the function and get exactly the results you would
          expect from the source code.  Without `--OO', only vari-
          ables declared rreeggiisstteerr are allocated in registers.
          The resulting compiled code is a little worse than pro-
          duced by PCC without `--OO'.
          With `--OO', the compiler tries to reduce code size and
          execution time.  Some of the `--ff' options described
          below turn specific kinds of optimization on or off.

     --gg   Produce debugging information in the operating system's
          native format (for DBX or SDB).  GDB also can work with
          this debugging information.  Unlike most other C com-
          pilers, GNU CC allows you to use `--gg' with`--OO'.
          The short cuts taken by optimized code may occasionally
          produce surprising results: some variables you declared
          may not exist at all; flow of control may briefly move
          where you did not expect it; some statements may not be
          executed because they compute constant results or their
          values were already at hand; some statements may exe-
          cute in different places because they were moved out of
          loops.  Nevertheless it proves possible to debug optim-
          ized output.  This makes it reasonable to use the
          optimizer for programs that might have bugs.

     --gggg  Produce debugging information in GDB's (the GNU
          Debugger's) own format.  This requires the GNU assem-
          bler and linker in order to work.  This feature will
          probably be eliminated.  It was intended to enable GDB
          to read the symbol table faster, but it doesn't result
          in enough of a speedup to be worth the larger object
          files and executables.  We are working on other ways of
          making GDB start even faster, which work with DBX for-
          mat debugging information and could be made to work
          with SDB format.

     --ww   Inhibit all warning messages.



Version 1.33             19 January 1989                        5






CC                        User Commands                        CC



     --WW   Print extra warning messages for these events:
          * An automatic variable is used without first being
          initialized.  These warnings are possible only in
          optimizing compilation, because they require data flow
          information that is computed only when optimizing. They
          occur only for variables that are candidates for regis-
          ter allocation. Therefore, they do not occur for a
          variable that is declared vvoollaattiillee,, or whose address is
          taken, or whose size is other than 1,2,4 or 8 bytes.
          Also, they do not occur for structures, unions or
          arrays, even when they are in registers.  Note that
          there may be no warning about a variable that is used
          only to compute a value that itself is never used,
          because such computations may be deleted by the flow
          analysis pass before the warnings are printed.  These
          warnings are made optional because GNU CC is not smart
          enough to see all the reasons why the code might be
          correct despite appearing to have an error.
          * A nonvolatile automatic variable might be changed by
          a call to lloonnggjjmmpp.  These warnings as well are possible
          only in optimizing compilation.  The compiler sees only
          the calls to sseettjjmmpp.  It cannot know where lloonnggjjmmpp will
          be called; in fact, a signal handler could call it at
          any point in the code. As a result, you may get a warn-
          ing even when there is in fact no problem because
          lloonnggjjmmpp cannot in fact be called at the place which
          would cause a problem.
          * A function can return either with or without a value.
          (Falling off the end of the function body is considered
          returning without a value.) Spurious warning can occur
          because GNU CC does not realize that certain functions
          (including aabboorrtt and lloonnggjjmmpp) will never return.
          * An expression-statement contains no side effects.

     --WWiimmpplliicciitt
          Warn whenever a function is implicitly declared.

     --WWrreettuurrnn--ttyyppee
          Warn whenever a function is defined with a return-type
          that defaults to iinntt. Also warn about any rreettuurrnn state-
          ment with no return-value in a function whose return-
          type is not vvooiidd.

     --WWuunnuusseedd
          Warn whenever a local variable is unused aside from its
          declaration.

     --WWccoommmmeenntt
          Warn whenever a comment-start sequence `/*' appears in
          a comment.

     --WWaallll



Version 1.33             19 January 1989                        6






CC                        User Commands                        CC



          All of the above --WW options combined.

     --WWwwrriittee--ssttrriinnggss
          Give string constants the type ccoonnsstt cchhaarr[[_l_e_n_g_t_h]] so
          that copying the address of one into a non-ccoonnsstt cchhaarr **
          pointer will get a warning.  These warnings will help
          you find at compile time code that can try to write
          into a string constant, but only if you have been very
          careful about using ccoonnsstt in declarations and proto-
          types.  Otherwise, it will just be a nuisance; this is
          why we did not make --WWaallll request these warnings.

     --pp   Generate extra code to write profile information suit-
          able for the analysis program pprrooff.

     --ppgg  Generate extra code to write profile information suit-
          able for the analysis program ggpprrooff.

     --ll_l_i_b_r_a_r_y
          Search a standard list of directories for a library
          named _l_i_b_r_a_r_y, which is actually a file named
          `lliibb_l_i_b_r_a_r_y..aa'.  The linker uses this file as if it had
          been specified precisely by name.  The directories
          searched include several standard system directories
          plus any that you specify with `--LL'.  Normally the
          files found this way are library files - archive files
          whose members are object files. The linker handles an
          archive file by scanning through it for members which
          define symbols that have so far been referenced but not
          defined. But if the file that is found is an ordinary
          object file, it is linked in the usual fashion. The
          only difference between an `--ll' option and specifying a
          file name is that `--ll' searches several directories.

     --LL_d_i_r
          Add directory _d_i_r to the list of directories to be
          searched for `--ll'.

     --nnoossttddlliibb
          Don't use the standard system libraries and startup
          files when linking. Only the files you specify (plus
          `ggnnuulliibb') will be passed to the linker.

     --mm_m_a_c_h_i_n_e_s_p_e_c
          Machine-dependent option specifying something about the
          type of target machine.

          These are the `--mm' options defined for 68000-class
          machines:

             --mm6688888811
               Generate output containing 68881 instructions for



Version 1.33             19 January 1989                        7






CC                        User Commands                        CC



               floating point.  This is the default if you use
               the unmodified sources.

             --mmffppaa
               Generate output containing Sun FPA instructions
               for floating point.

             --mmssoofftt--ffllooaatt
               Generate output containing library calls for
               floating point.

             --mmsshhoorrtt
               Consider type iinntt to be 16 bits wide, like sshhoorrtt
               iinntt.

             --mmnnoobbiittffiieelldd
               Do not use the bit-field instructions. ``--mm6688000000''
               implies ``--mmnnoobbiittffiieelldd''..

             --mmbbiittffiieelldd
               Do use the bit-field instructions. ``--mm6688002200''
               implies ``--mmbbiittffiieelldd''.. This is the default if you
               use the unmodified sources.

             --mmrrttdd
               Use a different function-calling convention, in
               which functions that take a fixed number of argu-
               ments return with the rrttdd instruction, which pops
               their arguments while returning.  This saves one
               instruction in the caller since there is no need
               to pop the arguments there.  This calling conven-
               tion is incompatible with the one normally used on
               Unix, so you cannot use it if you need to call
               libraries compiled with the Unix compiler.  Also,
               you must provide function prototypes for all func-
               tions that take variable numbers of arguments
               (including pprriinnttff); otherwise incorrect code will
               be generated for calls to those functions.  In
               addition, seriously incorrect code will result if
               you call a function with too many arguments.
               (Normally, extra arguments are harmlessly
               ignored.) The rrttdd instruction is supported by the
               68010 and 68020 processors, but not by the 68000.

               These are the `--mm' options defined in the VAX
               machine description:

             --mmuunniixx
               Do not output certain jump instructions (aaoobblleeqq
               and so on) that the Unix assembler for the VAX
               cannot handle across long ranges.




Version 1.33             19 January 1989                        8






CC                        User Commands                        CC



             --mmggnnuu
               Do output those jump instructions, on the assump-
               tion that you will assemble with the GNU assem-
               bler.

             --mmgg
               Output code for g-format floating point numbers
               instead of d-format.

     --ff_f_l_a_g
          Specify machine-independent flags.  Most flags have
          both positive and negative forms; the negative form of
          `--ffffoooo' would be `--ffnnoo--ffoooo'.  In the table below, only
          one of the forms is listed---the one which is not the
          default.  You can figure out the other form by either
          removing `nnoo--' or adding it.

             --ffffllooaatt--ssttoorree
               Do not store floating-point variables in regis-
               ters.  This prevents undesirable excess precision
               on machines such as the 68000 where the floating
               registers (of the 68881) keep more precision than
               a ddoouubbllee is supposed to have.  For most programs,
               the excess precision does only good, but a few
               programs rely on the precise definition of IEEE
               floating point.  Use `--ffffllooaatt--ssttoorree' for such pro-
               grams.

             --ffnnoo--aassmm
               Do not recognize aassmm, iinnlliinnee or ttyyppeeooff as a key-
               word. These words may then be used as identifiers.

             --ffnnoo--ddeeffeerr--ppoopp
               Always pop the arguments to each function call as
               soon as that function returns.  Normally the com-
               piler (when optimizing) lets arguments accumulate
               on the stack for several function calls and pops
               them all at once.

             --ffssttrreennggtthh--rreedduuccee
               Perform the optimizations of loop strength reduc-
               tion and elimination of iteration variables.

             --ffccoommbbiinnee--rreeggss
               Allow the combine pass to combine an instruction
               that copies one register into another.  This might
               or might not produce better code when used in
               addition to `--OO'.

             --ffffoorrccee--mmeemm
               Force memory operands to be copied into registers
               before doing arithmetic on them.  This may produce



Version 1.33             19 January 1989                        9






CC                        User Commands                        CC



               better code by making all memory references poten-
               tial common subexpressions.  When they are not
               common subexpressions, instruction combination
               should eliminate the separate register-load.

             --ffffoorrccee--aaddddrr
               Force memory address constants to be copied into
               registers before doing arithmetic on them.  This
               may produce better code just as `--ffffoorrccee--mmeemm' may.

             --ffoommiitt--ffrraammee--ppooiinntteerr
               Don't keep the frame pointer in a register for
               functions that don't need one.  This avoids the
               instructions to save, set up and restore frame
               pointers; it also makes an extra register avail-
               able in many functions.
               IItt aallssoo mmaakkeess ddeebbuuggggiinngg iimmppoossssiibbllee..  On some
               machines, such as the VAX, this flag has no
               effect, because the standard calling sequence
               automatically handles the frame pointer and noth-
               ing is saved by pretending it doesn't exist.  The
               machine-description macro FFRRAAMMEE__PPOOIINNTTEERR__RREEQQUUIIRREEDD
               controls whether a target machine supports this
               flag.

             --ffiinnlliinnee--ffuunnccttiioonnss
               Integrate all simple functions into their callers.
               The compiler heuristically decides which functions
               are simple enough to be worth integrating in this
               way.  If all calls to a given function are
               integrated, and the function is declared ssttaattiicc,
               then the function is normally not output as assem-
               bler code in its own right.

             --ffkkeeeepp--iinnlliinnee--ffuunnccttiioonnss
               Even if all calls to a given function are
               integrated, and the function is declared ssttaattiicc,
               nevertheless output a separate run-time callable
               version of the function.

             --ffwwrriittaabbllee--ssttrriinnggss
               Store string constants in the writable data seg-
               ment and don't uniquize them.  This is for compa-
               tibility with old programs which assume they can
               write into string constants.  Writing into string
               constants is a very bad idea; ``constants'' should
               be constant.

             --ffccoonndd--mmiissmmaattcchh
               Allow conditional expressions with mismatched
               types in the second and third arguments.  The
               value of such an expression is void.



Version 1.33             19 January 1989                       10






CC                        User Commands                        CC



             --ffnnoo--ffuunnccttiioonn--ccssee
               Do not put function addresses in registers; make
               each instruction that calls a constant function
               contain the function's address explicitly.  This
               option results in less efficient code, but some
               strange hacks that alter the assembler output may
               be confused by the optimizations performed when
               this option is not used.

             --ffvvoollaattiillee
               Consider all memory references through pointers to
               be volatile.

             --ffsshhaarreedd--ddaattaa
               Requests that the data and non-ccoonnsstt variables of
               this compilation be shared data rather than
               private data.  The distinction makes sense only on
               certain operating systems, where shared data is
               shared between processes running the same program,
               while private data exists in one copy per process.

             --ffuunnssiiggnneedd--cchhaarr
               Let the type cchhaarr be the unsigned, like uunnssiiggnneedd
               cchhaarr.  Each kind of machine has a default for what
               cchhaarr should be. It is either like uunnssiiggnneedd cchhaarr by
               default of like ssiiggnneedd cchhaarr by default. (Actually,
               at present, the default is always signed.) The
               type cchhaarr is always a distinct type from either
               ssiiggnneedd cchhaarr or uunnssiiggnneedd cchhaarr, even though its
               behavior is always just like one of those two.
               Note that this is equivalent to `--ffnnoo--ssiiggnneedd--
               cchhaarr', which is the negative form of `--ffssiiggnneedd--
               cchhaarr'.

             --ffssiiggnneedd--cchhaarr
               Let the type cchhaarr be the same as ssiiggnneedd cchhaarr.
               Note that this is equivalent to `--ffnnoo--uunnssiiggnneedd--
               cchhaarr', which is the negative form of `--ffuunnssiiggnneedd--
               cchhaarr'.

             --ffffiixxeedd--_r_e_g
               Treat the register named _r_e_g as a fixed register;
               generated code should never refer to it (except
               perhaps as a stack pointer, frame pointer or in
               some other fixed role). _r_e_g must be the name of a
               register.  The register names accepted are
               machine-specific and are defined in the
               RREEGGIISSTTEERR__NNAAMMEESS macro in the machine description
               macro file.  This flag does not have a negative
               form, because it specifies a three-way choice.

             --ffccaallll--uusseedd--_r_e_g



Version 1.33             19 January 1989                       11






CC                        User Commands                        CC



               Treat the register named _r_e_g as an allocatable
               register that is clobbered by function calls.  It
               may be allocated for temporaries or variables that
               do not live across a call.  Functions compiled
               this way will not save and restore the register
               _r_e_g.  Use of this flag for a register that has a
               fixed pervasive role in the machine's execution
               model, such as the stack pointer or frame pointer,
               will produce disastrous results.  This flag does
               not have a negative form, because it specifies a
               three-way choice.

             --ffccaallll--ssaavveedd--_r_e_g
               Treat the register named _r_e_g as an allocatable
               register saved by functions.  It may be allocated
               even for temporaries or variables that live across
               a call.  Functions compiled this way will save and
               restore the register _r_e_g if they use it.  Use of
               this flag for a register that has a fixed per-
               vasive role in the machine's execution model, such
               as the stack pointer or frame pointer, will pro-
               duce disastrous results.  A different sort of
               disaster will result from the use of this flag for
               a register in which function values may be
               returned.  This flag does not have a negative
               form, because it specifies a three-way choice.

     --dd_l_e_t_t_e_r_s Says to make debugging dumps at times specified by
               _l_e_t_t_e_r_s.  Here are the possible letters:

             rr Dump after RTL generation.

             jj Dump after first jump optimization.

             JJ Dump after last jump optimization.

             ss Dump after CSE (including the jump optimization
               that sometimes follows CSE).

             LL Dump after loop optimization.

             ff Dump after flow analysis.

             cc Dump after instruction combination.

             ll Dump after local register allocation.

             gg Dump after global register allocation.

             mm Print statistics on memory usage, at the end of
               the run.




Version 1.33             19 January 1989                       12






CC                        User Commands                        CC



     --ppeeddaannttiicc Issue all the warnings demanded by strict ANSI
               standard C; reject all programs that use forbidden
               extensions.  Valid ANSI standard C programs should
               compile properly with or without this option
               (though a rare few will require `--aannssii'.  However,
               without this option, certain GNU extensions and
               traditional C features are supported as well.
               With this option, they are rejected.  There is no
               reason to _u_s_e this option; it exists only to
               satisfy pedants.

FFIILLEESS
     file.c                    input file
     file.o                    object file
     a.out                     loaded output
     /tmp/cc?                  temporary
     /sprite/cmds/cpp          preprocessor
      /sprite/cmds/cc1._t_m      compiler
     /usr/local/lib/gcc-gnulib library need by GCC on some
     machines
     /sprite/lib/include/_t_m.md standard directory for machine-
     dependent `#include' files
     /sprite/lib/_t_m.md/libc.a  standard library
     /sprite/lib/include       standard directory for `#include'
     files

SSEEEE AALLSSOO
     adb(1), ld(1), dbx(1), as(1)

BBUUGGSS
     Bugs should be reported to bug-gcc@prep.ai.mit.edu. Bugs
     tend actually to be fixed if they can be isolated, so it is
     in your interest to report them in such a way that they can
     be easily reproduced.

CCOOPPYYIINNGG
     Copyright (c) 1988 Free Software Foundation, Inc.
     Permission is granted to make and distribute verbatim copies
     of this manual provided the copyright notice and this per-
     mission notice are preserved on all copies.
     Permission is granted to copy and distribute modified ver-
     sions of this manual under the conditions for verbatim copy-
     ing, provided that the entire resulting derived work is dis-
     tributed under the terms of a permission notice identical to
     this one.
     Permission is granted to copy and distribute translations of
     this manual into another language, under the above condi-
     tions for modified versions, except that this permission
     notice may be included in translations approved by the Free
     Software Foundation instead of in the original English.





Version 1.33             19 January 1989                       13






CC                        User Commands                        CC



AAUUTTHHOORRSS
     See the GNU CC Manual for the contributors to GNU CC.





















































Version 1.33             19 January 1989                       14



