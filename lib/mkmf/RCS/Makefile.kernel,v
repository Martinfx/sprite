head     1.21;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @@;


1.21
date     92.06.10.13.04.32;  author jhh;  state Exp;
branches ;
next     1.20;

1.20
date     92.01.06.12.40.53;  author kupfer;  state Exp;
branches ;
next     1.19;

1.19
date     91.12.13.13.32.27;  author jhh;  state Exp;
branches ;
next     1.18;

1.18
date     91.04.11.12.55.14;  author kupfer;  state Exp;
branches ;
next     1.17;

1.17
date     90.03.12.23.28.19;  author jhh;  state Exp;
branches ;
next     1.16;

1.16
date     89.10.09.21.27.42;  author rab;  state Exp;
branches ;
next     1.15;

1.15
date     89.08.21.16.23.40;  author mendel;  state Exp;
branches ;
next     1.14;

1.14
date     89.08.18.11.21.27;  author douglis;  state Exp;
branches ;
next     1.13;

1.13
date     89.08.17.11.14.42;  author douglis;  state Exp;
branches ;
next     1.12;

1.12
date     89.04.06.21.40.14;  author jhh;  state Exp;
branches ;
next     1.11;

1.11
date     88.12.04.12.36.44;  author ouster;  state Exp;
branches ;
next     1.10;

1.10
date     88.07.20.14.33.18;  author douglis;  state Exp;
branches ;
next     1.9;

1.9
date     88.06.27.10.20.58;  author douglis;  state Exp;
branches ;
next     1.8;

1.8
date     88.06.15.15.18.35;  author ouster;  state Exp;
branches ;
next     1.7;

1.7
date     88.06.06.08.49.44;  author ouster;  state Exp;
branches ;
next     1.6;

1.6
date     88.06.05.17.42.21;  author ouster;  state Exp;
branches ;
next     1.5;

1.5
date     88.05.01.16.45.39;  author deboor;  state Exp;
branches ;
next     1.4;

1.4
date     88.04.29.18.29.00;  author deboor;  state Exp;
branches ;
next     1.3;

1.3
date     88.03.31.17.14.09;  author deboor;  state Exp;
branches ;
next     1.2;

1.2
date     88.03.24.20.23.15;  author deboor;  state Exp;
branches ;
next     1.1;

1.1
date     88.03.18.15.04.45;  author deboor;  state Exp;
branches ;
next     ;


desc
@Makefile template for kernel source directories
@


1.21
log
@make sure all makefiles include TYPE
@
text
@#
# Prototype Makefile for kernel modules.
#
# This Makefile is automatically generated.
# DO NOT EDIT IT OR YOU MAY LOSE YOUR CHANGES.
#
# Generated from @@(TEMPLATE)
# @@(DATE)
#
# For more information, refer to the mkmf manual page.
#
# $Header: /sprite/lib/mkmf/RCS/Makefile.kernel,v 1.20 92/01/06 12:40:53 kupfer Exp $ SPRITE (Berkeley)
#
# Allow mkmf

ALLSRCS		= @@(ALLSRCS)

ALLHDRS		= @@(ALLHDRS)

LINTLIBS	= dbg.ln dev.ln fs.ln fscache.ln fsconsist.ln fsdm.ln fsio.ln \
		  fslcl.ln fspdev.ln fsprefix.ln fsrmt.ln fsutil.ln libc.ln \
		  lfs.ln main.ln mem.ln net.ln ofs.ln proc.ln prof.ln mach.ln \
		  raid.ln raid.null.ln recov.ln rpc.ln \
		  sched.ln sig.ln sys.ln sync.ln timer.ln utils.ln vm.ln 

MACHINES	= @@(MACHINES)
MAKEFILE	= @@(MAKEFILE)
NAME		= @@(NAME)
PUBHDRS		= @@(PUBHDRS)
SYSMAKEFILE	= kernel.mk
DISTDIR         ?= @@(DISTDIR)
TYPE		= @@(TYPE)
#include	<settm.mk>

#if exists($(HOME)/kernel.mk)
#include "$(HOME)/kernel.mk"
#endif

#if exists($(TM).md/md.mk)
#include	"$(TM).md/md.mk"
#endif

#if exists(local.mk)
#include 	"local.mk"
#else
#include	<$(SYSMAKEFILE)>
#endif

#if exists($(DEPFILE))
#include	"$(DEPFILE)"
#endif
@


1.20
log
@Add sig.ln to LINTLIBS.
@
text
@d12 1
a12 1
# $Header: /sprite/lib/mkmf/RCS/Makefile.kernel,v 1.19 91/12/13 13:32:27 jhh Exp Locker: kupfer $ SPRITE (Berkeley)
d31 2
a33 1
DISTDIR         ?= @@(DISTDIR)
@


1.19
log
@added ALLHDRS variable.  Updated LINTLIBS.
@
text
@d12 1
a12 1
# $Header: /sprite/lib/mkmf/RCS/Makefile.kernel,v 1.18 91/04/11 12:55:14 kupfer Exp $ SPRITE (Berkeley)
d24 1
a24 1
		  sched.ln sys.ln sync.ln timer.ln utils.ln vm.ln 
@


1.18
log
@Flush DEFTARGET: the default target is now determined by a pmake
library file.
@
text
@d12 1
a12 1
# $Header: /sprite/lib/mkmf/RCS/Makefile.kernel,v 1.17 90/03/12 23:28:19 jhh Exp Locker: kupfer $ SPRITE (Berkeley)
d17 3
d22 2
a23 1
		  main.ln mem.ln net.ln proc.ln prof.ln mach.ln rpc.ln \
@


1.17
log
@added the libc module
@
text
@d12 1
a12 1
# $Header: /sprite/lib/mkmf/RCS/Makefile.kernel,v 1.16 89/10/09 21:27:42 rab Exp Locker: jhh $ SPRITE (Berkeley)
d27 1
a27 1
TM     	        ?= @@(DEFTARGET)
@


1.16
log
@Modifications for distribution.
@
text
@d12 1
a12 1
# $Header: /sprite/lib/mkmf/RCS/Makefile.kernel,v 1.15 89/08/21 16:23:40 mendel Exp Locker: rab $ SPRITE (Berkeley)
d18 3
a20 3
		  fslcl.ln fspdev.ln fsprefix.ln fsrmt.ln fsutil.ln main.ln \
		  mem.ln net.ln proc.ln prof.ln mach.ln rpc.ln sched.ln \
		  sys.ln sync.ln timer.ln utils.ln vm.ln libc.ln
@


1.15
log
@Added new fs* modules
@
text
@d12 1
a12 1
# $Header: /sprite/lib/mkmf/RCS/Makefile.kernel,v 1.14 89/08/18 11:21:27 douglis Exp Locker: mendel $ SPRITE (Berkeley)
d28 1
@


1.14
log
@another change for TM -- use single machine if it exists, else \ds3100
@
text
@d12 1
a12 1
# $Header: /sprite/lib/mkmf/RCS/Makefile.kernel,v 1.12 89/04/06 21:40:14 jhh Exp Locker: douglis $ SPRITE (Berkeley)
d17 5
a21 3
LINTLIBS	= dbg.ln dev.ln fs.ln main.ln mem.ln net.ln proc.ln prof.ln \
		  mach.ln rpc.ln sched.ln sys.ln sync.ln timer.ln utils.ln  \
		  vm.ln libc.ln
@


1.13
log
@removed DEFTARGET -- we use $MACHINE now
@
text
@d25 1
a25 1
TM     	        ?= $(MACHINE)
@


1.12
log
@added abilty to make specific machine types
@
text
@d12 1
a12 1
# $Header: /sprite/lib/mkmf/RCS/Makefile.kernel,v 1.11 88/12/04 12:36:44 ouster Exp $ SPRITE (Berkeley)
d25 1
a25 1
TM     	        ?= @@(DEFTARGET)
@


1.11
log
@Final (?) upgrades to kick in new C library.
@
text
@d12 1
a12 1
# $Header: /sprite/lib/mkmf/RCS/Makefile.kernel,v 1.10 88/07/20 14:33:18 douglis Exp Locker: ouster $ SPRITE (Berkeley)
d26 4
@


1.10
log
@put in a couple of spaces in front of mach.ln and vm.ln in
order to get sed to match the " $module.ln" pattern when removing the
current module from the list of lintlibs.
@
text
@a3 3
# The default operation is to make the object file for the machine-type
# named in the TM variable.
#
d12 1
a12 1
# $Header: Makefile.kernel,v 1.9 88/06/27 10:20:58 douglis Exp $ SPRITE (Berkeley)
a15 3
MODULE		= @@(MODULE)
MACHINES	= @@(MACHINES)
TM     	        ?= @@(DEFTARGET)
a16 7
SRCS		=
HDRS		=
OBJS		=
CLEANOBJS	=
PUBHDRS		= @@(PUBHDRS)
MAKEFILE	= @@(MAKEFILE)

d20 4
a23 3
CFLAGS		= -g
CTFLAGS		= -wt

d25 1
@


1.9
log
@changed sun.ln to mach.ln.
@
text
@d15 1
a15 1
# $Header: Makefile.kernel,v 1.8 88/06/15 15:18:35 ouster Exp $ SPRITE (Berkeley)
d31 2
a32 2
		mach.ln rpc.ln sched.ln sys.ln sync.ln timer.ln utils.ln  \
		vm.ln libc.ln
@


1.8
log
@Typo.
@
text
@d15 1
a15 1
# $Header: Makefile.kernel,v 1.7 88/06/06 08:49:44 ouster Exp $ SPRITE (Berkeley)
d31 2
a32 2
		rpc.ln sched.ln sun.ln sys.ln sync.ln timer.ln utils.ln vm.ln \
		libc.ln
@


1.7
log
@Trivial typo.
@
text
@d15 1
a15 1
# $Header: Makefile.kernel,v 1.6 88/06/05 17:42:21 ouster Exp $ SPRITE (Berkeley)
d43 1
a43 1
#include 	"kernel.mk"
@


1.6
log
@Changed kernel stuff to parallel commands and library.
@
text
@d2 1
a2 1
# Pprototype Makefile for kernel modules.
d15 1
a15 1
# $Header: Makefile.kernel,v 1.5 88/05/01 16:45:39 deboor Exp $ SPRITE (Berkeley)
@


1.5
log
@Fixed to correspond to new *.md syntax
@
text
@d2 1
a2 4
# This is the prototype Makefile for kernel modules. The resulting
# Makefile is used both in the module's top-level directory and in the
# various machine-specific object directories. When included by the
# machine-specific makefile, IS_OBJECT must be defined.
d5 1
a5 9
# named in the DEFAULT variable.  For each operation in
# "make {,install,lint,instlint,profile}", only the $(DEFAULT).md subdirectory
# is touched.  Use "make all{,-install,-lint,-instlint,-profile}" to perform
# makes in each machine-dependent directory, or
#	make {,install,lint,instlint,profile}<x>
# to perform these operations for machine-type <x>
# Only one copy of the source is maintained, so "make install" or
# "make all-install" will copy the source (both machine-dependent and
# machine-independent) into the installed areas.
d15 1
a15 1
# $Header: Makefile.kernel,v 1.4 88/04/29 18:29:00 deboor Exp $ SPRITE (Berkeley)
d21 9
a29 3
CSRCS		= @@(CSRCS)
SSRCS		= @@(SSRCS)
SRCS		= ${SSRCS} ${CSRCS}
d33 2
a34 3
HDRS 		= @@(HDRS)
PUBHDRS 	= @@(PUBHDRS)
DEFAULT		= sun2
d36 1
a36 7
#
# If not being included by an object directory, include the kernel makefile
# to define all our targets, etc.
#
#ifndef IS_OBJECT
#include	<kernel.mk>
#endif  IS_OBJECT
d38 13
@


1.4
log
@Added MACHINES variable.
@
text
@d7 10
a16 6
# The default operation is to make the object file for sun2's.  Foreach
# operation in "make {,install,lint,instlint}", only the Object.sun2 
# subdirectory is touched.  Use "make all{,-install,-lint,-instlint}" to
# perform makes in each machine-dependent object directory.  Only one copy
# of the source is maintained, so "make install" or "make all-install" will 
# copy the source into the installed areas.
d26 1
a26 1
# $Header: Makefile.kernel,v 1.3 88/03/31 17:14:09 deboor Exp $ SPRITE (Berkeley)
@


1.3
log
@*** empty log message ***
@
text
@d22 1
a22 1
# $Header: Makefile.kernel,v 1.2 88/03/24 20:23:15 deboor Exp $ SPRITE (Berkeley)
d27 1
@


1.2
log
@Adapted to mkmf
@
text
@d22 1
a22 1
# $Header: Makefile.kernel,v 1.1 88/03/18 15:04:45 deboor Exp $ SPRITE (Berkeley)
d29 1
a29 1
SRCS		= ${CSRCS} ${SSRCS}
@


1.1
log
@Initial revision
@
text
@d2 4
a5 1
# This is the prototype Makefile for kernel modules.
d10 1
a10 1
# perform makes in each machine dependent object directory.  Only one copy
d17 2
a18 1
# It was generated from @@(TEMPLATE) on @@(DATE)
d22 1
a22 1
# $Header: Makefile.kernel,v 2.3 87/10/16 10:43:24 brent Exp $ SPRITE (Berkeley)
d26 10
a35 9
MODULE = module-name
ROOT = /sprite
SPRITESRC = ..
SPRITEHOME = /sprite
LIB = ${SPRITESRC}/Object
H =	  ${SPRITESRC}/Include
LINT =	  ${SPRITESRC}/Lint
INSTALLED=${SPRITESRC}/Installed/${MODULE}
UPDATE = update
d37 7
a43 106
CSRCS = C-file.c
ASMSRCS = assembler-file.s

SRCS = ${CSRCS} ${ASMSRCS}

HDRS = header-file.h

PUBHDRS = header-file.h

default! sun2 .PRECIOUS

# "Make install" installs the source before the object.  This is because
# make depend may get confused and have files depend on Include files rather
# than header files in this directory, and doing an installhdrs after
# making the object files might result in remaking all the object files a
# second time.  
install! installsrc installsun2 .EXPORT .PRECIOUS

lint: lintsun2 .PRECIOUS

profile! profilesun2 .PRECIOUS

instlint! instlintsun2 .PRECIOUS

all! sun2 sun3 .PRECIOUS

all-lint! lintsun2 lintsun3 .EXPORT .PRECIOUS

all-prof! profilesun2 profilesun3 .EXPORT .PRECIOUS

sun2 sun3! .EXPORT .PRECIOUS
	cd Object.$@@; ${MAKE} ${MFLAGS} -l

lintsun2! .PRECIOUS
	cd Object.sun2; ${MAKE} ${MFLAGS} -l lint

lintsun3! .PRECIOUS
	cd Object.sun3; ${MAKE} ${MFLAGS} -l lint

profilesun2! .PRECIOUS
	cd Object.sun2; ${MAKE} ${MFLAGS} -l profile

profilesun3! .PRECIOUS
	cd Object.sun3; ${MAKE} ${MFLAGS} -l profile

tags: ${HDRS} ${CSRCS}
	rm -f tags
	ctags ${CTFLAGS} ${HDRS} ${CSRCS}

all-install! installsun2 installsun3 installsrc .PRECIOUS

all-instlint! instlintsun2 instlintsun3 .PRECIOUS

installhdrs! .PRECIOUS
	@@${UPDATE} ${PUBHDRS} ${H}
	@@${UPDATE} ${HDRS} ${INSTALLED}

installsrc! installhdrs .PRECIOUS
	@@${UPDATE} ${SRCS} ${INSTALLED}

installobj! installsun2 installsun3 .PRECIOUS

installsun2! installsun2obj instlintsun2 .PRECIOUS
installsun3! installsun3obj instlintsun3 .PRECIOUS

installsun2obj! sun2 .PRECIOUS
	(cd Object.sun2; ${MAKE} ${MFLAGS} -l installobj)

installsun3obj! sun3 .PRECIOUS
	(cd Object.sun3; ${MAKE} ${MFLAGS} -l installobj)

instlintsun2! ${LINT}/sun2/${MODULE}.ln .PRECIOUS

instlintsun3! ${LINT}/sun3/${MODULE}.ln .PRECIOUS

${LINT}/sun2/${MODULE}.ln: ${CSRCS}
	(cd Object.sun2; ${MAKE} ${MFLAGS} -l instlint)

${LINT}/sun3/${MODULE}.ln: ${CSRCS}
	(cd Object.sun3; ${MAKE} ${MFLAGS} -l instlint)

calls: ${CSRCS}
	/sprite/local/cmds/calls ${IFLAGS} ${CSRCS} > calls

clean depend! .EXPORT .PRECIOUS
	(cd Object.sun2; ${MAKE} ${MFLAGS} -l $@@)
	(cd Object.sun3; ${MAKE} ${MFLAGS} -l $@@)

makemake! makemake2 makemake3 .EXPORT .PRECIOUS

makemake2! .PRECIOUS
	(cd Object.sun2; makemake)

makemake3! .PRECIOUS
	(cd Object.sun3; makemake)

# For rdist, take the standard kernel makefile.
# Allow the user to specify extra flags (like -v) for the rdist via
# the DISTFLAGS variable.

DISTFILE = /sprite/lib/misc/distfile.kernel
DISTFLAGS = 

rdist! .PRECIOUS
	rdist ${DISTFLAGS} -f ${DISTFILE} -d DIR=`pwd`

@
