if (!defined &_sparc_reg_h) {
    eval 'sub _sparc_reg_h {1;}';
    eval 'sub PSR {(0);}';
    eval 'sub PC {(1);}';
    eval 'sub nPC {(2);}';
    eval 'sub Y {(3);}';
    eval 'sub G1 {(4);}';
    eval 'sub G2 {(5);}';
    eval 'sub G3 {(6);}';
    eval 'sub G4 {(7);}';
    eval 'sub G5 {(8);}';
    eval 'sub G6 {(9);}';
    eval 'sub G7 {(10);}';
    eval 'sub O0 {(11);}';
    eval 'sub O1 {(12);}';
    eval 'sub O2 {(13);}';
    eval 'sub O3 {(14);}';
    eval 'sub O4 {(15);}';
    eval 'sub O5 {(16);}';
    eval 'sub O6 {(17);}';
    eval 'sub O7 {(18);}';
    eval 'sub PS { &PSR;}';
    eval 'sub SP { &O6;}';
    eval 'sub R0 { &O0;}';
    eval 'sub R1 { &O1;}';
    if (!defined &LOCORE) {
	eval 'sub r_ps { &r_psr;}';
	eval 'sub r_r0 { &r_o0;}';
	eval 'sub r_sp { &r_o6;}';
    }
    eval 'sub FPU {1;}';
    if (!defined &LOCORE) {
	eval 'sub FQ_DEPTH {16;}';
	eval 'sub FPU_REGS_TYPE { &unsigned;}';
	eval 'sub FPU_FSR_TYPE { &unsigned;}';
	eval 'sub fpu_regs { &f_fpstatus. &fpu_fr. &Fpu_regs;}';
	eval 'sub fpu_dregs { &f_fpstatus. &fpu_fr. &Fpu_dregs;}';
	eval 'sub fpu_fsr { &f_fpstatus. &Fpu_fsr;}';
	eval 'sub fpu_flags { &f_fpstatus. &Fpu_flags;}';
	eval 'sub fpu_extra { &f_fpstatus. &Fpu_extra;}';
	eval 'sub fpu_q { &f_fpstatus. &Fpu_q;}';
	eval 'sub fpu_qcnt { &f_fpstatus. &Fpu_qcnt;}';
    }
    eval 'sub FSR_CEXC {0x0000001f;}';
    eval 'sub FSR_AEXC {0x000003e0;}';
    eval 'sub FSR_FCC {0x00000c00;}';
    eval 'sub FSR_PR {0x00001000;}';
    eval 'sub FSR_QNE {0x00002000;}';
    eval 'sub FSR_FTT {0x0001c000;}';
    eval 'sub FSR_RESV {0x007e0000;}';
    eval 'sub FSR_TEM {0x0f100000;}';
    eval 'sub FSR_RP {0x30000000;}';
    eval 'sub FSR_RD {0xc0000000;}';
    eval 'sub FSR_CEXC_NX {0x00000001;}';
    eval 'sub FSR_CEXC_DZ {0x00000002;}';
    eval 'sub FSR_CEXC_UF {0x00000004 .;}';
    eval 'sub FSR_CEXC_OF {0x00000008;}';
    eval 'sub FSR_CEXC_NV {0x00000010;}';
    eval 'sub FSR_AEXC_NX {(0x1 << 5);}';
    eval 'sub FSR_AEXC_DZ {(0x2 << 5);}';
    eval 'sub FSR_AEXC_UF {(0x4 << 5) .;}';
    eval 'sub FSR_AEXC_OF {(0x8 << 5);}';
    eval 'sub FSR_AEXC_NV {(0x10 << 5);}';
    eval 'sub FTT_NONE {0;}';
    eval 'sub FTT_IEEE {1;}';
    eval 'sub FTT_UNFIN {2;}';
    eval 'sub FTT_UNIMP {3;}';
    eval 'sub FTT_SEQ {4;}';
    eval 'sub FTT_ALIGN {5;}';
    eval 'sub FTT_DFAULT {6;}';
    eval 'sub FSR_FTT_SHIFT {14;}';
    eval 'sub FSR_FTT_IEEE {( &FTT_IEEE <<  &FSR_FTT_SHIFT);}';
    eval 'sub FSR_FTT_UNFIN {( &FTT_UNFIN <<  &FSR_FTT_SHIFT);}';
    eval 'sub FSR_FTT_UNIMP {( &FTT_UNIMP <<  &FSR_FTT_SHIFT);}';
    eval 'sub FSR_FTT_SEQ {( &FTT_SEQ <<  &FSR_FTT_SHIFT);}';
    eval 'sub FSR_FTT_ALIGN {( &FTT_ALIGN <<  &FSR_FTT_SHIFT);}';
    eval 'sub FSR_FTT_DFAULT {( &FTT_DFAULT <<  &FSR_FTT_SHIFT);}';
    eval 'sub FSR_TEM_NX {(0x1 << 23);}';
    eval 'sub FSR_TEM_DZ {(0x2 << 23);}';
    eval 'sub FSR_TEM_UF {(0x4 << 23) .;}';
    eval 'sub FSR_TEM_OF {(0x8 << 23);}';
    eval 'sub FSR_TEM_NV {(0x10 << 23);}';
    eval 'sub RP_DBLEXT {0;}';
    eval 'sub RP_SINGLE {1;}';
    eval 'sub RP_DOUBLE {2;}';
    eval 'sub RP_RESERVED {3;}';
    eval 'sub RD_NEAR {0;}';
    eval 'sub RD_ZER0 {1;}';
    eval 'sub RD_POSINF {2;}';
    eval 'sub RD_NEGINF {3;}';
    eval 'sub FP_UNINITIALIZED {1;}';
    eval 'sub FP_STARTSIG {2;}';
    eval 'sub FP_DISABLE {4;}';
    eval 'sub FP_ENABLE {8;}';
    if (!defined &LOCORE) {
	eval 'sub rw_fp { &rw_in[6];}';
	eval 'sub rw_rtn { &rw_in[7];}';
    }
}
1;
