head     1.2;
branch   ;
access   ;
symbols  srv030:1.2 srv027:1.2 srv026:1.2 srv024:1.2 srv021:1.2 srv019:1.2 srv018:1.2 srv016:1.2 srv014:1.2 srv010:1.2 srv008:1.2 srv007:1.2 srv006:1.2 srv005:1.2 srv004:1.2 srv003:1.2 srv002:1.2 srv001:1.2;
locks    ; strict;
comment  @ * @;


1.2
date     91.11.19.17.04.41;  author kupfer;  state Exp;
branches ;
next     1.1;

1.1
date     91.11.15.16.11.47;  author kupfer;  state Exp;
branches ;
next     ;


desc
@@


1.2
log
@First cut at sprited support.
@
text
@/*
 * fslcl.h --
 *
 *	Definitions of the parameters required for Local Domain operations.
 *
 * Copyright 1990 Regents of the University of California
 * Permission to use, copy, modify, and distribute this
 * software and its documentation for any purpose and without
 * fee is hereby granted, provided that the above copyright
 * notice appear in all copies.  The University of California
 * makes no representations about the suitability of this
 * software for any purpose.  It is provided "as is" without
 * express or implied warranty.
 *
 * $Header: /r3/kupfer/spriteserver/src/sprited/fslcl/RCS/fslcl.h,v 1.1 91/11/15 16:11:47 kupfer Exp Locker: kupfer $ SPRITE (Berkeley)
 */

#ifndef _FSLCL
#define _FSLCL

#if defined(KERNEL) || defined(SPRITED)
#include <fscache.h>
#include <fsio.h>
#include <fsconsist.h>
#include <fsioFile.h>
#else
#include <fs.h>
#endif

/*
 * A directory entry:  Note that this is compatible with 4.3BSD 'struct direct'
 */
typedef struct Fslcl_DirEntry {
    int fileNumber;		/* Index of the file descriptor for the file. */
    short recordLength;		/* How many bytes this directory entry is */
    short nameLength;		/* The length of the name in bytes */
    char fileName[FS_MAX_NAME_LENGTH+1];	/* The name itself */
} Fslcl_DirEntry;
/*
 *	FSLCL_DIR_BLOCK_SIZE	Directory's grow in multiples of this constant,
 *		and records within a directory don't cross directory blocks.
 *	FSLCL_DIR_ENTRY_HEADER	The size of the header of a FslclDirEntry;
 *	FSLCL_REC_LEN_GRAIN	The number of bytes in a directory record
 *				are rounded up to a multiple of this constant.
 */
#define FSLCL_DIR_BLOCK_SIZE	512
#define FSLCL_DIR_ENTRY_HEADER	(sizeof(int) + 2 * sizeof(short))
#define FSLCL_REC_LEN_GRAIN	4

/*
 * Fslcl_DirRecLength --
 *	This computes the number of bytes needed for a directory entry.
 *	The argument should be the return of the String_Length function,
 *	ie, not include the terminating null in the count.
 */
#define Fslcl_DirRecLength(stringLength) \
    (FSLCL_DIR_ENTRY_HEADER + \
    ((stringLength / FSLCL_REC_LEN_GRAIN) + 1) * FSLCL_REC_LEN_GRAIN)

#if defined(KERNEL) || defined(SPRITED)
/*
 * Misc. routines.
 */
extern void Fslcl_DomainInit _ARGS_((void));
extern ReturnStatus Fslcl_DeleteFileDesc _ARGS_((Fsio_FileIOHandle *handlePtr));
extern void Fslcl_NameInitializeOps _ARGS_((void));
extern void Fslcl_NameHashInit _ARGS_((void));

#endif /* KERNEL || SPRITED */

#endif /* _FSLCL */
@


1.1
log
@Initial revision
@
text
@d15 1
a15 1
 * $Header: /sprite/src/kernel/fslcl/RCS/fslcl.h,v 9.5 90/10/19 15:46:15 mendel Exp $ SPRITE (Berkeley)
d21 1
a21 1
#ifdef KERNEL
d60 1
a60 1
#ifdef KERNEL
d69 1
a69 1
#endif /* KERNEL */
@
