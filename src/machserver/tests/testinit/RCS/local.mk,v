head     1.6;
branch   ;
access   ;
symbols  srv030:1.6 srv027:1.6 srv026:1.6 srv024:1.6 srv021:1.6 srv018:1.6 srv014:1.6 srv010:1.6 srv008:1.6 srv007:1.6 srv006:1.6 srv004:1.6;
locks    ; strict;
comment  @@;


1.6
date     92.01.22.13.23.12;  author kupfer;  state Exp;
branches ;
next     1.5;

1.5
date     91.10.04.12.25.49;  author kupfer;  state Exp;
branches ;
next     1.4;

1.4
date     91.09.25.23.45.45;  author kupfer;  state Exp;
branches ;
next     1.3;

1.3
date     91.09.03.12.20.57;  author kupfer;  state Exp;
branches ;
next     1.2;

1.2
date     91.09.01.21.17.30;  author kupfer;  state Exp;
branches ;
next     1.1;

1.1
date     91.08.30.16.06.53;  author kupfer;  state Exp;
branches ;
next     ;


desc
@@


1.6
log
@Specify INSTALLDIR.
@
text
@#
# This file is included by Makefile.  Makefile is generated automatically
# by mkmf, and this file provides additional local personalization.  The
# variable SYSMAKEFILE is provided by Makefile;  it's a system Makefile
# that must be included to set up various compilation stuff.
#

MAKE_USER_PROGRAM	= testinit
INSTALLDIR		= /boot/cmds.sprited

#include "/users/kupfer/lib/pmake/spriteClient.mk"
@


1.5
log
@Name change.
@
text
@d9 1
@


1.4
log
@*** empty log message ***
@
text
@d8 1
a8 1
MAKE_USER_PROGRAM	= emulator
@


1.3
log
@Changes for new source org.
@
text
@d8 1
a8 1
LIBS		+= -lmach
d10 1
a10 15
CFLAGS		+= -Wall 

# XXX Would be better to share the definition of this with sprited.

SPRITEDINCLUDE	?= /users/kupfer/spriteserver/include

# Define the search path for Sprite include files.  The server include
# files are in the search path because spriteSrv.h and spriteTypes.h
# are shared between the server and the emulator.

APPLINCLUDE	= $(TM).md . $(SPRITEDINCLUDE)/$(TM).md $(SPRITEDINCLUDE) \
  $(SPRITEDINCLUDE)/user/$(TM).md $(SPRITEDINCLUDE)/user

# Get all that good Mach support stuff...
#include "/users/kupfer/lib/pmake/mach.mk"
@


1.2
log
@Track change to organization of makefile libraries.
@
text
@d10 1
a10 6
# At least for the time being, use the same compilation environment as
# the Sprite server.  It probably makes more sense to use the server's
# environment than the Sprite "user" environment, because (a) the
# emulation code is closely tied to the server and (b) the emulation
# code needs to know about Mach.
#include "/users/kupfer/lib/pmake/sprited.mk"
d12 13
@


1.1
log
@Initial revision
@
text
@d10 6
a15 1
#include "/users/kupfer/lib/pmake/mach.mk"
@
