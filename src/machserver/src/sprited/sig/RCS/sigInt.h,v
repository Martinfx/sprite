head     1.3;
branch   ;
access   ;
symbols  srv030:1.3 srv028:1.3 srv027:1.3 srv026:1.3 srv024:1.3 srv022:1.3 srv021:1.3 srv019:1.3 srv018:1.3 srv016:1.3 srv015:1.3 srv014:1.3 srv012:1.3 srv011:1.3 srv010:1.3 srv008:1.3 srv007:1.3 srv006:1.3 srv005:1.3 srv004:1.3 srv003:1.3 srv002:1.3 srv001:1.3;
locks    ; strict;
comment  @ * @;


1.3
date     92.03.12.17.46.35;  author kupfer;  state Exp;
branches ;
next     1.2;

1.2
date     92.02.27.16.38.13;  author kupfer;  state Exp;
branches ;
next     1.1;

1.1
date     92.01.31.14.20.52;  author kupfer;  state Exp;
branches ;
next     ;


desc
@@


1.3
log
@Add sigDebug.
@
text
@/*
 * sigInt.h --
 *
 *     Data structures and procedure headers exported by the
 *     the signal module.
 *
 * Copyright (C) 1985 Regents of the University of California
 * All rights reserved.
 *
 *
 * $Header: /user5/kupfer/spriteserver/src/sprited/sig/RCS/sigInt.h,v 1.2 92/02/27 16:38:13 kupfer Exp Locker: kupfer $ SPRITE (Berkeley)
 */

#ifndef _SIGINT
#define _SIGINT

#include <sprite.h>
#include <sig.h>

/*
 * Flags for the sigFlags field in the proc table.
 *
 * SIG_PAUSE_IN_PROGRESS	A Sig_Pause is currently being executed.
 *
 */

#define	SIG_PAUSE_IN_PROGRESS	0x01

/*
 * Signals that can be blocked.
 */
extern	int	sigCanHoldMask;

/*
 * Array of bit masks, one for each signal.  The bit mask for a particular
 * signal is equal to 1 << signal.  This is to allow particular bits be
 * extracted and set in the signal masks.
 */

extern	unsigned int	sigBitMasks[];

/*
 * Array of default actions for signals.
 */

extern	int	sigDefActions[];

extern Boolean sigDebug;


extern void SigClearPendingMask _ARGS_((Proc_LockedPCB *procPtr, int sigNum));
extern ReturnStatus SigSendRemoteSignal _ARGS_((int hostID, int sigNum, 
		int code, Proc_PID id, Boolean familyID, Address addr));
extern void SigUpdateHoldMask _ARGS_((Proc_LockedPCB *procPtr, int newMask));

extern ReturnStatus SigMigSend _ARGS_((Proc_ControlBlock *procPtr, int sigNum,
			int code, Address addr));

#endif /* _SIGINT */
@


1.2
log
@Snapshot.  Can kill, suspend, and resume processes.
@
text
@d11 1
a11 1
 * $Header: /user5/kupfer/spriteserver/src/sprited/sig/RCS/sigInt.h,v 1.1 92/01/31 14:20:52 kupfer Exp Locker: kupfer $ SPRITE (Berkeley)
d48 3
d54 1
@


1.1
log
@Initial revision
@
text
@d11 1
a11 1
 * $Header: /sprite/src/kernel/sig/RCS/sigInt.h,v 9.2 90/10/05 16:15:45 mendel Exp $ SPRITE (Berkeley)
d48 1
a48 4
extern	Sync_Lock	sigLock;
#define LOCKPTR &sigLock

extern void SigClearPendingMask _ARGS_((Proc_ControlBlock *procPtr,int sigNum));
@
