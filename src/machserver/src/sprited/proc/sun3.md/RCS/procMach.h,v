head     1.4;
branch   ;
access   ;
symbols  srv030:1.4 srv028:1.4 srv027:1.4 srv026:1.4 srv024:1.4 srv022:1.4 srv021:1.4 srv019:1.4 srv018:1.4 srv016:1.4 srv015:1.4 srv014:1.4 srv012:1.4 srv011:1.4 srv010:1.4 srv008:1.4 srv007:1.4 srv006:1.4 srv005:1.4 srv004:1.4 srv003:1.4 srv002:1.4 srv001:1.4;
locks    ; strict;
comment  @ * @;


1.4
date     91.11.14.10.11.18;  author kupfer;  state Exp;
branches ;
next     1.3;

1.3
date     91.10.04.11.41.25;  author kupfer;  state Exp;
branches ;
next     1.2;

1.2
date     91.09.04.15.31.06;  author kupfer;  state Exp;
branches ;
next     1.1;

1.1
date     91.09.02.16.18.21;  author kupfer;  state Exp;
branches ;
next     ;


desc
@Machine-dependent declarations for process management.
@


1.4
log
@Snapshot.  net, rpc, recov modules added.
@
text
@/*
 * procMach.h --
 *
 *	The a.out format for an object file, plus other 
 *	machine-dependent information for process management. 
 *	XXX Probably would be cleaner to put the a.out stuff into a 
 *	different file.
 *
 * Copyright (C) 1985, 1988 Regents of the University of California
 * Permission to use, copy, modify, and distribute this
 * software and its documentation for any purpose and without
 * fee is hereby granted, provided that the above copyright
 * notice appear in all copies.  The University of California
 * makes no representations about the suitability of this
 * software for any purpose.  It is provided "as is" without
 * express or implied warranty.
 *
 *
 * $Header: /r3/kupfer/spriteserver/src/sprited/proc/sun3.md/RCS/procMach.h,v 1.3 91/10/04 11:41:25 kupfer Exp Locker: kupfer $ SPRITE (Berkeley)
 */

#ifndef _PROCMACH
#define _PROCMACH

#include <sprite.h>

/* 
 * The sun3 stack grows from high addresses to low addresses.
 */

#define PROCMACH_STACK_GROWS_DOWN	TRUE

extern Address procMach_MaxUserStackAddr;
extern Address procMach_MaxUserAddr;


/* 
 * a.out definitions.
 */

#define	NEW_PAGE_SIZE		0x2000
#ifdef sun4
#define	NEW_SEG_SIZE		0x40000
#define SUN_SEG_SIZE		NEW_PAGE_SIZE
#else
#define	NEW_SEG_SIZE		0x20000
#define SUN_SEG_SIZE		NEW_SEG_SIZE
#endif

/*
 * Header prepended to each a.out file.
 */

typedef struct {
    unsigned int	dynamic:1;	/* indicated dynamically-loaded */
    unsigned int	toolversion:7;	/* tool version */
    unsigned char 	machineType;	/* machine type */
    unsigned short 	magic;		/* magic number */
    unsigned long	code;		/* Size of code segment */
    unsigned long	data;		/* Size of initialized data */
    unsigned long	bss;		/* Size of uninitialized data */
    unsigned long	syms;		/* Size of symbol table */
    unsigned long	entry;		/* Entry point */
    unsigned long	trsize;		/* Size of text relocation */
    unsigned long	drsize;		/* Size of data relocation */
} ProcExecHeader;

#define	PROC_OMAGIC	0407		/* Old impure format */
#define	PROC_NMAGIC	0410		/* Read-only text */
#define	PROC_ZMAGIC	0413		/* Demand load format */
#define	SPRITE_ZMAGIC	0414		/* Demand load format */
#define	UNIX_ZMAGIC	0415		/* Demand load format */
#define PROC_MC68010	1		/* runs on '10 or '20 */
#define PROC_MC68020	2		/* runs on '20 only */
#define	PROC_SPARC	3		/* runs on SPARC only */

/*
 * Macros which take exec structures as arguments and tell whether
 * the file has a reasonable magic number or offsets to text|symbols|strings.
 */
#define	PROC_BAD_MAGIC_NUMBER(x) \
    ((x).magic!=PROC_ZMAGIC || (x).magic!=UNIX_ZMAGIC)

#define	PROC_CODE_FILE_OFFSET(x) \
	(((x).magic==PROC_ZMAGIC || (x).magic==UNIX_ZMAGIC) \
	    ? 0 : sizeof (ProcExecHeader))

#define	PROC_DATA_FILE_OFFSET(x) \
	(PROC_CODE_FILE_OFFSET(x) + (x).code)

#define PROC_BASEADDR(x) \
	(((x).magic==PROC_ZMAGIC) && ((x).entry < NEW_PAGE_SIZE) ?\
	0 : NEW_PAGE_SIZE)

/*
 * Macros which take exec structures as arguments and tell where the
 * various pieces will be loaded.
 */
#define PROC_CODE_LOAD_ADDR(x) NEW_PAGE_SIZE
#define PROC_DATA_LOAD_ADDR(x) \
	(((x).magic==PROC_OMAGIC)? (PROC_CODE_LOAD_ADDR(x)+(x).code) \
	: (NEW_SEG_SIZE+((PROC_CODE_LOAD_ADDR(x)+(x).code-1) & ~(NEW_SEG_SIZE-1))))
#define PROC_BSS_LOAD_ADDR(x)  (PROC_DATA_LOAD_ADDR(x)+(x).data)

#define PROC_SUN_DATA_LOAD_ADDR(x) \
	(((x).magic==PROC_OMAGIC)? (PROC_CODE_LOAD_ADDR(x)+(x).code) \
	: (SUN_SEG_SIZE+((PROC_CODE_LOAD_ADDR(x)+(x).code-1) & ~(SUN_SEG_SIZE-1))))


#endif /* _PROCMACH */
@


1.3
log
@Snapshot.  fork/exec work.
@
text
@d19 1
a19 1
 * $Header: /r3/kupfer/spriteserver/src/sprited/proc/sun3.md/RCS/procMach.h,v 1.2 91/09/04 15:31:06 kupfer Exp Locker: kupfer $ SPRITE (Berkeley)
d33 2
a34 2
extern Address procMach_HighestStackAddr;
extern Address procMach_HighestUserAddr;
@


1.2
log
@Add some stuff unrelated to the a.out format.
@
text
@d19 1
a19 1
 * $Header: /user6/kupfer/spriteserver/src/sprited/proc/sun3.md/RCS/procMach.h,v 1.1 91/09/02 16:18:21 kupfer Exp Locker: kupfer $ SPRITE (Berkeley)
d32 3
@


1.1
log
@Initial revision
@
text
@d4 4
a7 1
 *	The a.out format for an object file.
d19 1
a19 1
 * $Header: /sprite/src/kernel/proc/sun3.md/RCS/procMach.h,v 9.6 91/07/31 18:20:17 shirriff Exp $ SPRITE (Berkeley)
d26 11
@
