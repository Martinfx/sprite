head     1.3;
branch   ;
access   ;
symbols  srv030:1.3 srv028:1.3 srv027:1.3 srv026:1.3 srv024:1.3 srv022:1.3 srv021:1.3 srv019:1.3 srv018:1.3 srv016:1.3 srv014:1.3 srv010:1.3 srv008:1.3 srv007:1.3 srv006:1.3 srv005:1.3 srv004:1.3 srv003:1.3 srv002:1.3 srv001:1.3;
locks    ; strict;
comment  @ * @;


1.3
date     91.12.12.21.51.17;  author kupfer;  state Exp;
branches ;
next     1.2;

1.2
date     91.10.04.12.19.01;  author kupfer;  state Exp;
branches ;
next     1.1;

1.1
date     91.10.01.19.51.10;  author kupfer;  state Exp;
branches ;
next     ;


desc
@@


1.3
log
@Re-enable stdio stuff.
@
text
@/* 
 * exit.c --
 *
 *	This file contains the source code for the "exit" library
 *	procedure.
 *
 * Copyright 1988 Regents of the University of California
 * Permission to use, copy, modify, and distribute this
 * software and its documentation for any purpose and without
 * fee is hereby granted, provided that the above copyright
 * notice appear in all copies.  The University of California
 * makes no representations about the suitability of this
 * software for any purpose.  It is provided "as is" without
 * express or implied warranty.
 */

#ifndef lint
static char rcsid[] = "$Header: /r3/kupfer/spriteserver/src/lib/c/stdlib/RCS/exit.c,v 1.2 91/10/04 12:19:01 kupfer Exp Locker: kupfer $ SPRITE (Berkeley)";
#endif not lint

#include <stdio.h>
#include <stdlib.h>
#include <sprite.h>
#include <proc.h>
#include <unistd.h>

/*
 * Variables shared from atexit.c:
 */

extern void (*_exitHandlers[])();	/* Function table. */
extern int _exitNumHandlers;		/* Number of functions currently
					 * registered in table. */
extern int _exitTableSize;		/* Number of entries in table. */

/*
 *----------------------------------------------------------------------
 *
 * exit --
 *
 *	Terminate the process.
 *
 * Results:
 *	Never returns.
 *
 * Side effects:
 *	Any procedures registered by calls to "atexit" are invoked,
 *	and any open I/O streams are flushed and closed.
 *
 *----------------------------------------------------------------------
 */

void
exit(status)
    int status;			/* Status to return to parent process.  0 is
				 * the normal value for "success". */
{
    while (_exitNumHandlers > 0) {
	_exitNumHandlers -= 1;
	(*_exitHandlers[_exitNumHandlers])();
    }
    _cleanup();
    _exit(status);
}
@


1.2
log
@Printf isn't supported yet.  Lint.
@
text
@d18 1
a18 1
static char rcsid[] = "$Header: /r3/kupfer/spriteserver/src/lib/c/stdlib/RCS/exit.c,v 1.1 91/10/01 19:51:10 kupfer Exp Locker: kupfer $ SPRITE (Berkeley)";
a61 1
#ifdef LIBC_PRINTF
a62 1
#endif
@


1.1
log
@Initial revision
@
text
@d18 1
a18 1
static char rcsid[] = "$Header: /sprite/src/lib/c/stdlib/RCS/exit.c,v 1.8 90/09/22 20:32:46 rab Exp $ SPRITE (Berkeley)";
d25 1
d53 1
a53 1
int
d62 1
d64 1
@
