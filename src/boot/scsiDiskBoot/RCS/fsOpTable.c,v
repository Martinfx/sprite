head     1.7;
branch   ;
access   ;
symbols  ;
locks    mendel:1.7; strict;
comment  @ * @;


1.7
date     89.01.06.08.14.44;  author brent;  state Exp;
branches ;
next     1.6;

1.6
date     87.05.19.12.15.22;  author brent;  state Exp;
branches ;
next     1.5;

1.5
date     87.05.12.12.45.13;  author brent;  state Exp;
branches ;
next     1.4;

1.4
date     87.05.11.11.25.09;  author brent;  state Exp;
branches ;
next     1.3;

1.3
date     87.05.08.17.47.45;  author brent;  state Exp;
branches ;
next     1.2;

1.2
date     86.07.21.09.37.02;  author brent;  state Exp;
branches ;
next     1.1;

1.1
date     86.07.18.09.33.36;  author brent;  state Exp;
branches ;
next     ;


desc
@Boot device operation switches.
@


1.7
log
@New include files and constants due to source reorganization
@
text
@/* 
 * fsOpTable.c --
 *
 *	The operation tables for the file system.  There are three types
 *	tables: domain specific, file type specific, and device specific.
 *
 * Copyright 1986 Regents of the University of California
 * All rights reserved.
 */

#ifndef lint
static char rcsid[] = "$Header: fsOpTable.c,v 1.6 87/05/19 12:15:22 brent Exp $ SPRITE (Berkeley)";
#endif not lint


#include "sprite.h"
#include "boot.h"
#include "fs.h"
#include "fsOpTable.h"
#include "fsDisk.h"

#ifdef SCSI_DISK_BOOT
#include "devSCSIDisk.h"
#endif
#ifdef SCSI_TAPE_BOOT
#include "devSCSITape.h"
#endif
#ifdef XYLOGICS_BOOT
#include "devXylogicsDisk.h"
#endif
/*
 * Raw, (ie. no understanding of an underlying filesystem block structure)
 * device operations.  This interface is used when booting from tape.
 *	FsRawDeviceRead
 *	FsRawDeviceWrite
 */
FsRawDeviceOps fsRawDeviceOpsTable[] = {
    /* dev type,	readWriteProc */

#ifdef SCSI_DISK_BOOT
    {FS_DEV_SCSI_DISK, Dev_SCSIDiskIO},
#else
    {FS_DEV_SCSI_DISK, FsNoProc},
#endif

#ifdef SCSI_TAPE_BOOT
    {FS_DEV_SCSI_TAPE, Dev_SCSIRawTapeIO},
#else
    {FS_DEV_SCSI_TAPE, FsNoProc},
#endif SCSI_TAPE_BOOT

#ifdef XYLOGICS_BOOT
    {FS_DEV_XYLOGICS, Dev_XylogicsDiskIO},
#else
    {FS_DEV_XYLOGICS, FsNoProc},
#endif XYLOGICS_BOOT

};

/*
 * Device Block I/O operation table.  This is used when booting from disk.
 *	FsBlockIOInit
 *	FsBlockIO
 */
FsBlockOps fsBlockOpsTable[] = {
    /* dev type,	initProc, readWriteProc */
#ifdef SCSI_DISK_BOOT
    { FS_DEV_SCSI_DISK, FsNoProc, Dev_SCSIDiskBlockIO },
#else
    { FS_DEV_SCSI_DISK, FsNoProc, FsNoProc },
#endif

    { FS_DEV_SCSI_TAPE, FsNoProc, FsNoProc },

#ifdef XYLOGICS_BOOT
    { FS_DEV_XYLOGICS, FsNoProc, Dev_XylogicsDiskBlockIO },
#else
    { FS_DEV_XYLOGICS, FsNoProc, FsNoProc },
#endif

};

FsNoProc()
{
    return(FAILURE);
}

NullProc()
{
    return(SUCCESS);
}
@


1.6
log
@Set it up for Xylogics
@
text
@d12 1
a12 1
static char rcsid[] = "$Header: fsOpTable.c,v 1.5 87/05/12 12:45:13 brent Exp $ SPRITE (Berkeley)";
a18 1
#include "fsInt.h"
@


1.5
log
@Working version for scsi disk and tape
@
text
@d12 1
a12 1
static char rcsid[] = "$Header: fsOpTable.c,v 1.4 87/05/11 11:25:09 brent Exp $ SPRITE (Berkeley)";
d23 1
d25 2
d28 4
a31 1

d54 1
a54 1
    {FS_DEV_XYLOGICS, Dev_XylogicsIO},
@


1.4
log
@Version for SCSI Disk, SCSI Tape, and Xylogics Disk
@
text
@d12 1
a12 1
static char rcsid[] = "$Header: fsOpTable.c,v 1.3 87/05/08 17:47:45 brent Exp $ SPRITE (Berkeley)";
d42 1
a42 1
    {FS_DEV_SCSI_TAPE, Dev_SCSITapeIO},
@


1.3
log
@Added ifdefs to trim it down
@
text
@d12 1
a12 1
static char rcsid[] = "$Header: fsOpTable.c,v 1.2 86/07/21 09:37:02 brent Exp $ SPRITE (Berkeley)";
d35 1
d37 3
d47 6
d69 7
@


1.2
log
@No more blockIO initilaization routine
@
text
@d12 1
a12 1
static char rcsid[] = "$Header: fsOpTable.c,v 1.1 86/07/18 09:33:36 brent Exp $ SPRITE (Berkeley)";
d17 1
d24 1
d27 4
a30 2
 *      Raw, (ie. no understanding of an underlying filesystem block structure)
 *      device operations.
d32 2
d35 8
a42 2
FsRawDeviceOps fsRawDeviceOpsTable[] = {
    {FS_DEV_SCSI_DISK, Dev_SCSIIO},
d46 1
a46 2
 * Device Block I/O operation table.  This table is sparse because not
 * all devices support block I/O.
d51 2
d54 5
@


1.1
log
@Initial revision
@
text
@d12 1
a12 1
static char rcsid[] = "$Header: fsOpTable.c,v 1.20 86/07/11 13:56:05 brent Exp $ SPRITE (Berkeley)";
d40 1
a40 1
    { FS_DEV_SCSI_DISK, Dev_SCSIDiskBlockIOInit, Dev_SCSIDiskBlockIO },
@
