head     1.1;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


1.1
date     90.01.31.13.54.14;  author shirriff;  state Exp;
branches ;
next     ;


desc
@File as of 1-31-90, before replaced by symbolic link.
@



1.1
log
@Initial revision
@
text
@/*
 * fsDisk.h --
 *
 *	Definitions for utilities that examine a filesystem through
 *	a raw disk interface.
 */

#ifndef _FSUSERDISK
#define _FSUSERDISK

#include "kernel/fs.h"
#include "kernel/dev.h"
#include "kernel/fsdm.h"
#include "kernel/devDiskLabel.h"

/*
 * These should be here.  They should be in some machine dependent header
 * file.  But for now ...
 */
#define BITS_PER_BYTE           8
#define BITS_PER_INT            32

/*
 * DISK_SECTORS_PER_BLOCK	Number of disk sectors per file system block.
 * DISK_KBYTES_PER_BLOCK	Number of kbyte chunks per file system block.
 */
#define DISK_SECTORS_PER_BLOCK       (FS_BLOCK_SIZE / DEV_BYTES_PER_SECTOR)
#define DISK_KBYTES_PER_BLOCK        (FS_BLOCK_SIZE / 1024)

typedef struct Disk_Info {
    int firstCylinder;
    int numCylinders;
    int numHeads;
    int numSectors;
    int domainSector;
    int numDomainSectors;
    int bootSector;
    int numBootSectors;
    int summarySector;
    char asciiLabel[128];
} Disk_Info;

/*
 * Forward Declarations.
 */
Disk_Info		*Disk_ReadDiskInfo();
Sun_DiskLabel		*Disk_ReadSunLabel();
Fsdm_DiskHeader		*Disk_ReadDiskHeader();
void			Disk_PrintDomainHeader();
int			Disk_BlockWrite();
int			Disk_SectorWrite();
int			Disk_BlockRead();
int			Disk_SectorRead();
int			Disk_BadBlockRead();

#endif FILESYSTEM
@
