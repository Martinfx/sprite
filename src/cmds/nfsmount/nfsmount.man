' $Header: /sprite/src/cmds/nfsmount/RCS/nfsmount.man,v 1.5 91/10/20 12:38:30 mottsmth Exp $ SPRITE (Berkeley)
.so \*(]ltmac.sprite
.HS NFSMOUNT cmds
.BS
.SH NAME
nfsmount \- a Sprite-to-NFS filesystem gateway
.SH SYNOPSIS
\fBnfsmount\fR  [\fB\-t\fR] \fIhost:/filesystem /prefix\fR
.SH OPTIONS
.IP "\fB\-t\fR" 14
Trace each access to the remote file system.
.IP "\fB\-m \fIlocal-name remote-name\fR" 14
Specify logical mount points within the namespace.  See commentary
below. \fIlocal-name\fR is the sub-mount point relative to \fI/prefix\fR.
\fIremote-name\fR is an absolute path specifying the Sprite remote link.
.BE
.SH INTRODUCTION
.PP
\fBNfsmount\fP is a pseudo-filesystem server that provides access
to a remote NFS file system.  The first argument is a host name,
a separating colon (`:'), and a file system on that host.
The second argument is a Sprite prefix under which the remote
file system will be visible.  The server is still very simple,
although quite functional.  Each operation
causes an RPC to the remote host;  there is no caching yet.
.PP
Real NFS allows one filesystem to be mounted onto another NFS filesystem.
This doesn't work in Sprite because Sprite requires a remote link
(see ln command) for each NFS filesystem and it is not possible to create
one of these within the parent NFS filesystem. Consequently, the subsidiary
filesystem must be mounted elsewhere in the Sprite tree. Then the
parent nfsmount program must be told that there is a logical mount
point within its namespace using the -m option.  The first argument is
the name (relative to the root of the parent tree) where the mount point
logically exists. The second parameter is the absolute path of the
remote link where the child NFS tree is really mounted in Sprite.
.SH BUGS
The \fBgetpwd()\fR library call doesn't work yet because it can't find
the ``inode'' number of the prefix correctly.  This is fixable
but may not happen right away.  A related problem is that the
\fBdf\fP command won't report disk space.
.SH KEYWORDS
NFS
