Conflict in state 30 between rule 224 and token LEFT_RIGHT resolved as shift.
Conflict in state 30 between rule 224 and token '(' resolved as shift.
Conflict in state 49 between rule 277 and token IDENTIFIER resolved as shift.
Conflict in state 49 between rule 277 and token TYPENAME resolved as shift.
Conflict in state 49 between rule 277 and token SCSPEC resolved as shift.
Conflict in state 49 between rule 277 and token TYPESPEC resolved as shift.
Conflict in state 49 between rule 277 and token TYPE_QUAL resolved as shift.
Conflict in state 49 between rule 277 and token AGGR resolved as shift.
Conflict in state 49 between rule 277 and token TYPENAME_COLON resolved as shift.
Conflict in state 50 between rule 265 and token '{' resolved as shift.
Conflict in state 100 between rule 262 and token '{' resolved as shift.
Conflict in state 132 between rule 340 and token LEFT_RIGHT resolved as shift.
Conflict in state 132 between rule 340 and token '&' resolved as shift.
Conflict in state 132 between rule 340 and token '*' resolved as shift.
Conflict in state 132 between rule 340 and token '(' resolved as shift.
Conflict in state 132 between rule 340 and token '[' resolved as shift.
Conflict in state 152 between rule 67 and token ':' resolved as shift.
Conflict in state 157 between rule 280 and token IDENTIFIER resolved as shift.
Conflict in state 157 between rule 280 and token TYPENAME resolved as shift.
Conflict in state 157 between rule 280 and token SCSPEC resolved as shift.
Conflict in state 222 between rule 176 and token DYNAMIC resolved as shift.
Conflict in state 247 between rule 340 and token '&' resolved as shift.
Conflict in state 247 between rule 340 and token '*' resolved as shift.
Conflict in state 248 between rule 208 and token LEFT_RIGHT resolved as shift.
Conflict in state 248 between rule 208 and token '(' resolved as shift.
Conflict in state 250 between rule 340 and token '&' resolved as shift.
Conflict in state 250 between rule 340 and token '*' resolved as shift.
Conflict in state 269 between rule 341 and token LEFT_RIGHT resolved as shift.
Conflict in state 269 between rule 341 and token '(' resolved as shift.
Conflict in state 269 between rule 341 and token '[' resolved as shift.
Conflict in state 278 between rule 397 and token LEFT_RIGHT resolved as reduce.
Conflict in state 278 between rule 397 and token '(' resolved as reduce.
Conflict in state 278 between rule 397 and token '[' resolved as reduce.
Conflict in state 279 between rule 381 and token LEFT_RIGHT resolved as shift.
Conflict in state 279 between rule 381 and token '(' resolved as shift.
Conflict in state 279 between rule 381 and token '[' resolved as shift.
Conflict in state 280 between rule 380 and token LEFT_RIGHT resolved as shift.
Conflict in state 280 between rule 380 and token '(' resolved as shift.
Conflict in state 280 between rule 380 and token '[' resolved as shift.
Conflict in state 282 between rule 391 and token LEFT_RIGHT resolved as reduce.
Conflict in state 282 between rule 391 and token '(' resolved as reduce.
Conflict in state 282 between rule 391 and token '[' resolved as reduce.
Conflict in state 292 between rule 281 and token ',' resolved as shift.
Conflict in state 313 between rule 534 and token SCOPE resolved as shift.
Conflict in state 319 between rule 532 and token ',' resolved as shift.
Conflict in state 332 between rule 251 and token ASSIGN resolved as shift.
Conflict in state 332 between rule 251 and token '=' resolved as shift.
Conflict in state 332 between rule 251 and token '?' resolved as shift.
Conflict in state 332 between rule 251 and token OROR resolved as shift.
Conflict in state 332 between rule 251 and token ANDAND resolved as shift.
Conflict in state 332 between rule 251 and token '|' resolved as shift.
Conflict in state 332 between rule 251 and token '^' resolved as shift.
Conflict in state 332 between rule 251 and token '&' resolved as shift.
Conflict in state 332 between rule 251 and token MIN_MAX resolved as shift.
Conflict in state 332 between rule 251 and token EQCOMPARE resolved as shift.
Conflict in state 332 between rule 251 and token ARITHCOMPARE resolved as shift.
Conflict in state 332 between rule 251 and token LSHIFT resolved as shift.
Conflict in state 332 between rule 251 and token RSHIFT resolved as shift.
Conflict in state 332 between rule 251 and token '+' resolved as shift.
Conflict in state 332 between rule 251 and token '-' resolved as shift.
Conflict in state 332 between rule 251 and token '*' resolved as shift.
Conflict in state 332 between rule 251 and token '/' resolved as shift.
Conflict in state 332 between rule 251 and token '%' resolved as shift.
Conflict in state 343 between rule 361 and token LEFT_RIGHT resolved as shift.
Conflict in state 343 between rule 361 and token '(' resolved as shift.
Conflict in state 343 between rule 361 and token '[' resolved as shift.
Conflict in state 344 between rule 360 and token LEFT_RIGHT resolved as shift.
Conflict in state 344 between rule 360 and token '(' resolved as shift.
Conflict in state 344 between rule 360 and token '[' resolved as shift.
Conflict in state 384 between rule 178 and token '(' resolved as shift.
Conflict in state 398 between rule 342 and token '(' resolved as shift.
Conflict in state 429 between rule 208 and token LEFT_RIGHT resolved as shift.
Conflict in state 429 between rule 208 and token '(' resolved as shift.
Conflict in state 430 between rule 102 and token '=' resolved as shift.
Conflict in state 441 between rule 148 and token LEFT_RIGHT resolved as shift.
Conflict in state 441 between rule 148 and token '(' resolved as shift.
Conflict in state 454 between rule 158 and token LEFT_RIGHT resolved as shift.
Conflict in state 454 between rule 158 and token '(' resolved as shift.
Conflict in state 457 between rule 408 and token LEFT_RIGHT resolved as shift.
Conflict in state 457 between rule 408 and token '&' resolved as shift.
Conflict in state 457 between rule 408 and token '*' resolved as shift.
Conflict in state 457 between rule 408 and token '(' resolved as shift.
Conflict in state 457 between rule 408 and token '[' resolved as shift.
Conflict in state 458 between rule 403 and token LEFT_RIGHT resolved as shift.
Conflict in state 458 between rule 403 and token '&' resolved as shift.
Conflict in state 458 between rule 403 and token '*' resolved as shift.
Conflict in state 458 between rule 403 and token '(' resolved as shift.
Conflict in state 458 between rule 403 and token '[' resolved as shift.
Conflict in state 463 between rule 419 and token LEFT_RIGHT resolved as shift.
Conflict in state 463 between rule 419 and token '&' resolved as shift.
Conflict in state 463 between rule 419 and token '*' resolved as shift.
Conflict in state 463 between rule 419 and token '(' resolved as shift.
Conflict in state 463 between rule 419 and token '[' resolved as shift.
Conflict in state 473 between rule 279 and token ',' resolved as shift.
Conflict in state 483 between rule 384 and token ':' resolved as shift.
Conflict in state 502 between rule 204 and token '(' resolved as shift.
Conflict in state 551 between rule 438 and token ELSE resolved as shift.
Conflict in state 603 between rule 131 and token ASSIGN resolved as shift.
Conflict in state 603 between rule 131 and token '=' resolved as shift.
Conflict in state 603 between rule 131 and token '?' resolved as shift.
Conflict in state 603 between rule 131 and token OROR resolved as shift.
Conflict in state 603 between rule 131 and token ANDAND resolved as shift.
Conflict in state 603 between rule 131 and token '|' resolved as shift.
Conflict in state 603 between rule 131 and token '^' resolved as shift.
Conflict in state 603 between rule 131 and token '&' resolved as shift.
Conflict in state 603 between rule 131 and token MIN_MAX resolved as shift.
Conflict in state 603 between rule 131 and token EQCOMPARE resolved as shift.
Conflict in state 603 between rule 131 and token ARITHCOMPARE resolved as shift.
Conflict in state 603 between rule 131 and token LSHIFT resolved as shift.
Conflict in state 603 between rule 131 and token RSHIFT resolved as shift.
Conflict in state 603 between rule 131 and token '+' resolved as shift.
Conflict in state 603 between rule 131 and token '-' resolved as shift.
Conflict in state 603 between rule 131 and token '*' resolved as shift.
Conflict in state 603 between rule 131 and token '/' resolved as shift.
Conflict in state 603 between rule 131 and token '%' resolved as shift.
Conflict in state 604 between rule 130 and token ASSIGN resolved as shift.
Conflict in state 604 between rule 130 and token '=' resolved as shift.
Conflict in state 604 between rule 130 and token '?' resolved as shift.
Conflict in state 604 between rule 130 and token OROR resolved as shift.
Conflict in state 604 between rule 130 and token ANDAND resolved as shift.
Conflict in state 604 between rule 130 and token '|' resolved as shift.
Conflict in state 604 between rule 130 and token '^' resolved as shift.
Conflict in state 604 between rule 130 and token '&' resolved as shift.
Conflict in state 604 between rule 130 and token MIN_MAX resolved as shift.
Conflict in state 604 between rule 130 and token EQCOMPARE resolved as shift.
Conflict in state 604 between rule 130 and token ARITHCOMPARE resolved as shift.
Conflict in state 604 between rule 130 and token LSHIFT resolved as shift.
Conflict in state 604 between rule 130 and token RSHIFT resolved as shift.
Conflict in state 604 between rule 130 and token '+' resolved as shift.
Conflict in state 604 between rule 130 and token '-' resolved as shift.
Conflict in state 604 between rule 130 and token '*' resolved as shift.
Conflict in state 604 between rule 130 and token '/' resolved as shift.
Conflict in state 604 between rule 130 and token '%' resolved as shift.
Conflict in state 608 between rule 128 and token ASSIGN resolved as reduce.
Conflict in state 608 between rule 128 and token '=' resolved as reduce.
Conflict in state 608 between rule 128 and token '?' resolved as reduce.
Conflict in state 608 between rule 128 and token OROR resolved as reduce.
Conflict in state 608 between rule 128 and token ANDAND resolved as shift.
Conflict in state 608 between rule 128 and token '|' resolved as shift.
Conflict in state 608 between rule 128 and token '^' resolved as shift.
Conflict in state 608 between rule 128 and token '&' resolved as shift.
Conflict in state 608 between rule 128 and token MIN_MAX resolved as shift.
Conflict in state 608 between rule 128 and token EQCOMPARE resolved as shift.
Conflict in state 608 between rule 128 and token ARITHCOMPARE resolved as shift.
Conflict in state 608 between rule 128 and token LSHIFT resolved as shift.
Conflict in state 608 between rule 128 and token RSHIFT resolved as shift.
Conflict in state 608 between rule 128 and token '+' resolved as shift.
Conflict in state 608 between rule 128 and token '-' resolved as shift.
Conflict in state 608 between rule 128 and token '*' resolved as shift.
Conflict in state 608 between rule 128 and token '/' resolved as shift.
Conflict in state 608 between rule 128 and token '%' resolved as shift.
Conflict in state 609 between rule 127 and token ASSIGN resolved as reduce.
Conflict in state 609 between rule 127 and token '=' resolved as reduce.
Conflict in state 609 between rule 127 and token '?' resolved as reduce.
Conflict in state 609 between rule 127 and token OROR resolved as reduce.
Conflict in state 609 between rule 127 and token ANDAND resolved as reduce.
Conflict in state 609 between rule 127 and token '|' resolved as shift.
Conflict in state 609 between rule 127 and token '^' resolved as shift.
Conflict in state 609 between rule 127 and token '&' resolved as shift.
Conflict in state 609 between rule 127 and token MIN_MAX resolved as shift.
Conflict in state 609 between rule 127 and token EQCOMPARE resolved as shift.
Conflict in state 609 between rule 127 and token ARITHCOMPARE resolved as shift.
Conflict in state 609 between rule 127 and token LSHIFT resolved as shift.
Conflict in state 609 between rule 127 and token RSHIFT resolved as shift.
Conflict in state 609 between rule 127 and token '+' resolved as shift.
Conflict in state 609 between rule 127 and token '-' resolved as shift.
Conflict in state 609 between rule 127 and token '*' resolved as shift.
Conflict in state 609 between rule 127 and token '/' resolved as shift.
Conflict in state 609 between rule 127 and token '%' resolved as shift.
Conflict in state 610 between rule 125 and token ASSIGN resolved as reduce.
Conflict in state 610 between rule 125 and token '=' resolved as reduce.
Conflict in state 610 between rule 125 and token '?' resolved as reduce.
Conflict in state 610 between rule 125 and token OROR resolved as reduce.
Conflict in state 610 between rule 125 and token ANDAND resolved as reduce.
Conflict in state 610 between rule 125 and token '|' resolved as reduce.
Conflict in state 610 between rule 125 and token '^' resolved as shift.
Conflict in state 610 between rule 125 and token '&' resolved as shift.
Conflict in state 610 between rule 125 and token MIN_MAX resolved as shift.
Conflict in state 610 between rule 125 and token EQCOMPARE resolved as shift.
Conflict in state 610 between rule 125 and token ARITHCOMPARE resolved as shift.
Conflict in state 610 between rule 125 and token LSHIFT resolved as shift.
Conflict in state 610 between rule 125 and token RSHIFT resolved as shift.
Conflict in state 610 between rule 125 and token '+' resolved as shift.
Conflict in state 610 between rule 125 and token '-' resolved as shift.
Conflict in state 610 between rule 125 and token '*' resolved as shift.
Conflict in state 610 between rule 125 and token '/' resolved as shift.
Conflict in state 610 between rule 125 and token '%' resolved as shift.
Conflict in state 611 between rule 126 and token ASSIGN resolved as reduce.
Conflict in state 611 between rule 126 and token '=' resolved as reduce.
Conflict in state 611 between rule 126 and token '?' resolved as reduce.
Conflict in state 611 between rule 126 and token OROR resolved as reduce.
Conflict in state 611 between rule 126 and token ANDAND resolved as reduce.
Conflict in state 611 between rule 126 and token '|' resolved as reduce.
Conflict in state 611 between rule 126 and token '^' resolved as reduce.
Conflict in state 611 between rule 126 and token '&' resolved as shift.
Conflict in state 611 between rule 126 and token MIN_MAX resolved as shift.
Conflict in state 611 between rule 126 and token EQCOMPARE resolved as shift.
Conflict in state 611 between rule 126 and token ARITHCOMPARE resolved as shift.
Conflict in state 611 between rule 126 and token LSHIFT resolved as shift.
Conflict in state 611 between rule 126 and token RSHIFT resolved as shift.
Conflict in state 611 between rule 126 and token '+' resolved as shift.
Conflict in state 611 between rule 126 and token '-' resolved as shift.
Conflict in state 611 between rule 126 and token '*' resolved as shift.
Conflict in state 611 between rule 126 and token '/' resolved as shift.
Conflict in state 611 between rule 126 and token '%' resolved as shift.
Conflict in state 612 between rule 124 and token ASSIGN resolved as reduce.
Conflict in state 612 between rule 124 and token '=' resolved as reduce.
Conflict in state 612 between rule 124 and token '?' resolved as reduce.
Conflict in state 612 between rule 124 and token OROR resolved as reduce.
Conflict in state 612 between rule 124 and token ANDAND resolved as reduce.
Conflict in state 612 between rule 124 and token '|' resolved as reduce.
Conflict in state 612 between rule 124 and token '^' resolved as reduce.
Conflict in state 612 between rule 124 and token '&' resolved as reduce.
Conflict in state 612 between rule 124 and token MIN_MAX resolved as shift.
Conflict in state 612 between rule 124 and token EQCOMPARE resolved as shift.
Conflict in state 612 between rule 124 and token ARITHCOMPARE resolved as shift.
Conflict in state 612 between rule 124 and token LSHIFT resolved as shift.
Conflict in state 612 between rule 124 and token RSHIFT resolved as shift.
Conflict in state 612 between rule 124 and token '+' resolved as shift.
Conflict in state 612 between rule 124 and token '-' resolved as shift.
Conflict in state 612 between rule 124 and token '*' resolved as shift.
Conflict in state 612 between rule 124 and token '/' resolved as shift.
Conflict in state 612 between rule 124 and token '%' resolved as shift.
Conflict in state 613 between rule 123 and token ASSIGN resolved as reduce.
Conflict in state 613 between rule 123 and token '=' resolved as reduce.
Conflict in state 613 between rule 123 and token '?' resolved as reduce.
Conflict in state 613 between rule 123 and token OROR resolved as reduce.
Conflict in state 613 between rule 123 and token ANDAND resolved as reduce.
Conflict in state 613 between rule 123 and token '|' resolved as reduce.
Conflict in state 613 between rule 123 and token '^' resolved as reduce.
Conflict in state 613 between rule 123 and token '&' resolved as reduce.
Conflict in state 613 between rule 123 and token MIN_MAX resolved as reduce.
Conflict in state 613 between rule 123 and token EQCOMPARE resolved as shift.
Conflict in state 613 between rule 123 and token ARITHCOMPARE resolved as shift.
Conflict in state 613 between rule 123 and token LSHIFT resolved as shift.
Conflict in state 613 between rule 123 and token RSHIFT resolved as shift.
Conflict in state 613 between rule 123 and token '+' resolved as shift.
Conflict in state 613 between rule 123 and token '-' resolved as shift.
Conflict in state 613 between rule 123 and token '*' resolved as shift.
Conflict in state 613 between rule 123 and token '/' resolved as shift.
Conflict in state 613 between rule 123 and token '%' resolved as shift.
Conflict in state 614 between rule 122 and token ASSIGN resolved as reduce.
Conflict in state 614 between rule 122 and token '=' resolved as reduce.
Conflict in state 614 between rule 122 and token '?' resolved as reduce.
Conflict in state 614 between rule 122 and token OROR resolved as reduce.
Conflict in state 614 between rule 122 and token ANDAND resolved as reduce.
Conflict in state 614 between rule 122 and token '|' resolved as reduce.
Conflict in state 614 between rule 122 and token '^' resolved as reduce.
Conflict in state 614 between rule 122 and token '&' resolved as reduce.
Conflict in state 614 between rule 122 and token MIN_MAX resolved as reduce.
Conflict in state 614 between rule 122 and token EQCOMPARE resolved as reduce.
Conflict in state 614 between rule 122 and token ARITHCOMPARE resolved as shift.
Conflict in state 614 between rule 122 and token LSHIFT resolved as shift.
Conflict in state 614 between rule 122 and token RSHIFT resolved as shift.
Conflict in state 614 between rule 122 and token '+' resolved as shift.
Conflict in state 614 between rule 122 and token '-' resolved as shift.
Conflict in state 614 between rule 122 and token '*' resolved as shift.
Conflict in state 614 between rule 122 and token '/' resolved as shift.
Conflict in state 614 between rule 122 and token '%' resolved as shift.
Conflict in state 615 between rule 121 and token ASSIGN resolved as reduce.
Conflict in state 615 between rule 121 and token '=' resolved as reduce.
Conflict in state 615 between rule 121 and token '?' resolved as reduce.
Conflict in state 615 between rule 121 and token OROR resolved as reduce.
Conflict in state 615 between rule 121 and token ANDAND resolved as reduce.
Conflict in state 615 between rule 121 and token '|' resolved as reduce.
Conflict in state 615 between rule 121 and token '^' resolved as reduce.
Conflict in state 615 between rule 121 and token '&' resolved as reduce.
Conflict in state 615 between rule 121 and token MIN_MAX resolved as reduce.
Conflict in state 615 between rule 121 and token EQCOMPARE resolved as reduce.
Conflict in state 615 between rule 121 and token ARITHCOMPARE resolved as reduce.
Conflict in state 615 between rule 121 and token LSHIFT resolved as shift.
Conflict in state 615 between rule 121 and token RSHIFT resolved as shift.
Conflict in state 615 between rule 121 and token '+' resolved as shift.
Conflict in state 615 between rule 121 and token '-' resolved as shift.
Conflict in state 615 between rule 121 and token '*' resolved as shift.
Conflict in state 615 between rule 121 and token '/' resolved as shift.
Conflict in state 615 between rule 121 and token '%' resolved as shift.
Conflict in state 616 between rule 119 and token ASSIGN resolved as reduce.
Conflict in state 616 between rule 119 and token '=' resolved as reduce.
Conflict in state 616 between rule 119 and token '?' resolved as reduce.
Conflict in state 616 between rule 119 and token OROR resolved as reduce.
Conflict in state 616 between rule 119 and token ANDAND resolved as reduce.
Conflict in state 616 between rule 119 and token '|' resolved as reduce.
Conflict in state 616 between rule 119 and token '^' resolved as reduce.
Conflict in state 616 between rule 119 and token '&' resolved as reduce.
Conflict in state 616 between rule 119 and token MIN_MAX resolved as reduce.
Conflict in state 616 between rule 119 and token EQCOMPARE resolved as reduce.
Conflict in state 616 between rule 119 and token ARITHCOMPARE resolved as reduce.
Conflict in state 616 between rule 119 and token LSHIFT resolved as reduce.
Conflict in state 616 between rule 119 and token RSHIFT resolved as reduce.
Conflict in state 616 between rule 119 and token '+' resolved as shift.
Conflict in state 616 between rule 119 and token '-' resolved as shift.
Conflict in state 616 between rule 119 and token '*' resolved as shift.
Conflict in state 616 between rule 119 and token '/' resolved as shift.
Conflict in state 616 between rule 119 and token '%' resolved as shift.
Conflict in state 617 between rule 120 and token ASSIGN resolved as reduce.
Conflict in state 617 between rule 120 and token '=' resolved as reduce.
Conflict in state 617 between rule 120 and token '?' resolved as reduce.
Conflict in state 617 between rule 120 and token OROR resolved as reduce.
Conflict in state 617 between rule 120 and token ANDAND resolved as reduce.
Conflict in state 617 between rule 120 and token '|' resolved as reduce.
Conflict in state 617 between rule 120 and token '^' resolved as reduce.
Conflict in state 617 between rule 120 and token '&' resolved as reduce.
Conflict in state 617 between rule 120 and token MIN_MAX resolved as reduce.
Conflict in state 617 between rule 120 and token EQCOMPARE resolved as reduce.
Conflict in state 617 between rule 120 and token ARITHCOMPARE resolved as reduce.
Conflict in state 617 between rule 120 and token LSHIFT resolved as reduce.
Conflict in state 617 between rule 120 and token RSHIFT resolved as reduce.
Conflict in state 617 between rule 120 and token '+' resolved as shift.
Conflict in state 617 between rule 120 and token '-' resolved as shift.
Conflict in state 617 between rule 120 and token '*' resolved as shift.
Conflict in state 617 between rule 120 and token '/' resolved as shift.
Conflict in state 617 between rule 120 and token '%' resolved as shift.
Conflict in state 618 between rule 114 and token ASSIGN resolved as reduce.
Conflict in state 618 between rule 114 and token '=' resolved as reduce.
Conflict in state 618 between rule 114 and token '?' resolved as reduce.
Conflict in state 618 between rule 114 and token OROR resolved as reduce.
Conflict in state 618 between rule 114 and token ANDAND resolved as reduce.
Conflict in state 618 between rule 114 and token '|' resolved as reduce.
Conflict in state 618 between rule 114 and token '^' resolved as reduce.
Conflict in state 618 between rule 114 and token '&' resolved as reduce.
Conflict in state 618 between rule 114 and token MIN_MAX resolved as reduce.
Conflict in state 618 between rule 114 and token EQCOMPARE resolved as reduce.
Conflict in state 618 between rule 114 and token ARITHCOMPARE resolved as reduce.
Conflict in state 618 between rule 114 and token LSHIFT resolved as reduce.
Conflict in state 618 between rule 114 and token RSHIFT resolved as reduce.
Conflict in state 618 between rule 114 and token '+' resolved as reduce.
Conflict in state 618 between rule 114 and token '-' resolved as reduce.
Conflict in state 618 between rule 114 and token '*' resolved as shift.
Conflict in state 618 between rule 114 and token '/' resolved as shift.
Conflict in state 618 between rule 114 and token '%' resolved as shift.
Conflict in state 619 between rule 115 and token ASSIGN resolved as reduce.
Conflict in state 619 between rule 115 and token '=' resolved as reduce.
Conflict in state 619 between rule 115 and token '?' resolved as reduce.
Conflict in state 619 between rule 115 and token OROR resolved as reduce.
Conflict in state 619 between rule 115 and token ANDAND resolved as reduce.
Conflict in state 619 between rule 115 and token '|' resolved as reduce.
Conflict in state 619 between rule 115 and token '^' resolved as reduce.
Conflict in state 619 between rule 115 and token '&' resolved as reduce.
Conflict in state 619 between rule 115 and token MIN_MAX resolved as reduce.
Conflict in state 619 between rule 115 and token EQCOMPARE resolved as reduce.
Conflict in state 619 between rule 115 and token ARITHCOMPARE resolved as reduce.
Conflict in state 619 between rule 115 and token LSHIFT resolved as reduce.
Conflict in state 619 between rule 115 and token RSHIFT resolved as reduce.
Conflict in state 619 between rule 115 and token '+' resolved as reduce.
Conflict in state 619 between rule 115 and token '-' resolved as reduce.
Conflict in state 619 between rule 115 and token '*' resolved as shift.
Conflict in state 619 between rule 115 and token '/' resolved as shift.
Conflict in state 619 between rule 115 and token '%' resolved as shift.
Conflict in state 620 between rule 116 and token ASSIGN resolved as reduce.
Conflict in state 620 between rule 116 and token '=' resolved as reduce.
Conflict in state 620 between rule 116 and token '?' resolved as reduce.
Conflict in state 620 between rule 116 and token OROR resolved as reduce.
Conflict in state 620 between rule 116 and token ANDAND resolved as reduce.
Conflict in state 620 between rule 116 and token '|' resolved as reduce.
Conflict in state 620 between rule 116 and token '^' resolved as reduce.
Conflict in state 620 between rule 116 and token '&' resolved as reduce.
Conflict in state 620 between rule 116 and token MIN_MAX resolved as reduce.
Conflict in state 620 between rule 116 and token EQCOMPARE resolved as reduce.
Conflict in state 620 between rule 116 and token ARITHCOMPARE resolved as reduce.
Conflict in state 620 between rule 116 and token LSHIFT resolved as reduce.
Conflict in state 620 between rule 116 and token RSHIFT resolved as reduce.
Conflict in state 620 between rule 116 and token '+' resolved as reduce.
Conflict in state 620 between rule 116 and token '-' resolved as reduce.
Conflict in state 620 between rule 116 and token '*' resolved as reduce.
Conflict in state 620 between rule 116 and token '/' resolved as reduce.
Conflict in state 620 between rule 116 and token '%' resolved as reduce.
Conflict in state 621 between rule 117 and token ASSIGN resolved as reduce.
Conflict in state 621 between rule 117 and token '=' resolved as reduce.
Conflict in state 621 between rule 117 and token '?' resolved as reduce.
Conflict in state 621 between rule 117 and token OROR resolved as reduce.
Conflict in state 621 between rule 117 and token ANDAND resolved as reduce.
Conflict in state 621 between rule 117 and token '|' resolved as reduce.
Conflict in state 621 between rule 117 and token '^' resolved as reduce.
Conflict in state 621 between rule 117 and token '&' resolved as reduce.
Conflict in state 621 between rule 117 and token MIN_MAX resolved as reduce.
Conflict in state 621 between rule 117 and token EQCOMPARE resolved as reduce.
Conflict in state 621 between rule 117 and token ARITHCOMPARE resolved as reduce.
Conflict in state 621 between rule 117 and token LSHIFT resolved as reduce.
Conflict in state 621 between rule 117 and token RSHIFT resolved as reduce.
Conflict in state 621 between rule 117 and token '+' resolved as reduce.
Conflict in state 621 between rule 117 and token '-' resolved as reduce.
Conflict in state 621 between rule 117 and token '*' resolved as reduce.
Conflict in state 621 between rule 117 and token '/' resolved as reduce.
Conflict in state 621 between rule 117 and token '%' resolved as reduce.
Conflict in state 622 between rule 118 and token ASSIGN resolved as reduce.
Conflict in state 622 between rule 118 and token '=' resolved as reduce.
Conflict in state 622 between rule 118 and token '?' resolved as reduce.
Conflict in state 622 between rule 118 and token OROR resolved as reduce.
Conflict in state 622 between rule 118 and token ANDAND resolved as reduce.
Conflict in state 622 between rule 118 and token '|' resolved as reduce.
Conflict in state 622 between rule 118 and token '^' resolved as reduce.
Conflict in state 622 between rule 118 and token '&' resolved as reduce.
Conflict in state 622 between rule 118 and token MIN_MAX resolved as reduce.
Conflict in state 622 between rule 118 and token EQCOMPARE resolved as reduce.
Conflict in state 622 between rule 118 and token ARITHCOMPARE resolved as reduce.
Conflict in state 622 between rule 118 and token LSHIFT resolved as reduce.
Conflict in state 622 between rule 118 and token RSHIFT resolved as reduce.
Conflict in state 622 between rule 118 and token '+' resolved as reduce.
Conflict in state 622 between rule 118 and token '-' resolved as reduce.
Conflict in state 622 between rule 118 and token '*' resolved as reduce.
Conflict in state 622 between rule 118 and token '/' resolved as reduce.
Conflict in state 622 between rule 118 and token '%' resolved as reduce.
Conflict in state 633 between rule 133 and token ASSIGN resolved as reduce.
Conflict in state 633 between rule 133 and token '=' resolved as reduce.
Conflict in state 633 between rule 133 and token '?' resolved as reduce.
Conflict in state 633 between rule 133 and token OROR resolved as reduce.
Conflict in state 633 between rule 133 and token ANDAND resolved as reduce.
Conflict in state 633 between rule 133 and token '|' resolved as reduce.
Conflict in state 633 between rule 133 and token '^' resolved as reduce.
Conflict in state 633 between rule 133 and token '&' resolved as reduce.
Conflict in state 633 between rule 133 and token MIN_MAX resolved as reduce.
Conflict in state 633 between rule 133 and token EQCOMPARE resolved as reduce.
Conflict in state 633 between rule 133 and token ARITHCOMPARE resolved as reduce.
Conflict in state 633 between rule 133 and token LSHIFT resolved as reduce.
Conflict in state 633 between rule 133 and token RSHIFT resolved as reduce.
Conflict in state 633 between rule 133 and token '+' resolved as reduce.
Conflict in state 633 between rule 133 and token '-' resolved as reduce.
Conflict in state 633 between rule 133 and token '*' resolved as reduce.
Conflict in state 633 between rule 133 and token '/' resolved as reduce.
Conflict in state 633 between rule 133 and token '%' resolved as reduce.
Conflict in state 634 between rule 132 and token ASSIGN resolved as reduce.
Conflict in state 634 between rule 132 and token '=' resolved as reduce.
Conflict in state 634 between rule 132 and token '?' resolved as reduce.
Conflict in state 634 between rule 132 and token OROR resolved as reduce.
Conflict in state 634 between rule 132 and token ANDAND resolved as reduce.
Conflict in state 634 between rule 132 and token '|' resolved as reduce.
Conflict in state 634 between rule 132 and token '^' resolved as reduce.
Conflict in state 634 between rule 132 and token '&' resolved as reduce.
Conflict in state 634 between rule 132 and token MIN_MAX resolved as reduce.
Conflict in state 634 between rule 132 and token EQCOMPARE resolved as reduce.
Conflict in state 634 between rule 132 and token ARITHCOMPARE resolved as reduce.
Conflict in state 634 between rule 132 and token LSHIFT resolved as reduce.
Conflict in state 634 between rule 132 and token RSHIFT resolved as reduce.
Conflict in state 634 between rule 132 and token '+' resolved as reduce.
Conflict in state 634 between rule 132 and token '-' resolved as reduce.
Conflict in state 634 between rule 132 and token '*' resolved as reduce.
Conflict in state 634 between rule 132 and token '/' resolved as reduce.
Conflict in state 634 between rule 132 and token '%' resolved as reduce.
Conflict in state 647 between rule 134 and token ASSIGN resolved as reduce.
Conflict in state 647 between rule 134 and token '=' resolved as reduce.
Conflict in state 647 between rule 134 and token '?' resolved as reduce.
Conflict in state 647 between rule 134 and token OROR resolved as reduce.
Conflict in state 647 between rule 134 and token ANDAND resolved as reduce.
Conflict in state 647 between rule 134 and token '|' resolved as reduce.
Conflict in state 647 between rule 134 and token '^' resolved as reduce.
Conflict in state 647 between rule 134 and token '&' resolved as reduce.
Conflict in state 647 between rule 134 and token MIN_MAX resolved as reduce.
Conflict in state 647 between rule 134 and token EQCOMPARE resolved as reduce.
Conflict in state 647 between rule 134 and token ARITHCOMPARE resolved as reduce.
Conflict in state 647 between rule 134 and token LSHIFT resolved as reduce.
Conflict in state 647 between rule 134 and token RSHIFT resolved as reduce.
Conflict in state 647 between rule 134 and token '+' resolved as reduce.
Conflict in state 647 between rule 134 and token '-' resolved as reduce.
Conflict in state 647 between rule 134 and token '*' resolved as reduce.
Conflict in state 647 between rule 134 and token '/' resolved as reduce.
Conflict in state 647 between rule 134 and token '%' resolved as reduce.
Conflict in state 653 between rule 149 and token LEFT_RIGHT resolved as shift.
Conflict in state 653 between rule 149 and token '(' resolved as shift.
Conflict in state 657 between rule 420 and token LEFT_RIGHT resolved as shift.
Conflict in state 657 between rule 420 and token '&' resolved as shift.
Conflict in state 657 between rule 420 and token '*' resolved as shift.
Conflict in state 657 between rule 420 and token '(' resolved as shift.
Conflict in state 657 between rule 420 and token '[' resolved as shift.
Conflict in state 658 between rule 407 and token LEFT_RIGHT resolved as shift.
Conflict in state 658 between rule 407 and token '(' resolved as shift.
Conflict in state 658 between rule 407 and token '[' resolved as shift.
Conflict in state 659 between rule 402 and token LEFT_RIGHT resolved as shift.
Conflict in state 659 between rule 402 and token '(' resolved as shift.
Conflict in state 659 between rule 402 and token '[' resolved as shift.
Conflict in state 663 between rule 417 and token LEFT_RIGHT resolved as shift.
Conflict in state 663 between rule 417 and token '(' resolved as shift.
Conflict in state 663 between rule 417 and token '[' resolved as shift.
Conflict in state 759 between rule 374 and token LEFT_RIGHT resolved as shift.
Conflict in state 759 between rule 374 and token '(' resolved as shift.
Conflict in state 759 between rule 374 and token '[' resolved as shift.
Conflict in state 760 between rule 373 and token LEFT_RIGHT resolved as shift.
Conflict in state 760 between rule 373 and token '(' resolved as shift.
Conflict in state 760 between rule 373 and token '[' resolved as shift.
Conflict in state 772 between rule 408 and token LEFT_RIGHT resolved as shift.
Conflict in state 772 between rule 408 and token '(' resolved as shift.
Conflict in state 772 between rule 408 and token '[' resolved as shift.
Conflict in state 773 between rule 403 and token LEFT_RIGHT resolved as shift.
Conflict in state 773 between rule 403 and token '(' resolved as shift.
Conflict in state 773 between rule 403 and token '[' resolved as shift.
Conflict in state 774 between rule 419 and token LEFT_RIGHT resolved as shift.
Conflict in state 774 between rule 419 and token '(' resolved as shift.
Conflict in state 774 between rule 419 and token '[' resolved as shift.
Conflict in state 790 between rule 111 and token ASSIGN resolved as reduce.
Conflict in state 790 between rule 111 and token '=' resolved as reduce.
Conflict in state 790 between rule 111 and token '?' resolved as reduce.
Conflict in state 790 between rule 111 and token OROR resolved as reduce.
Conflict in state 790 between rule 111 and token ANDAND resolved as reduce.
Conflict in state 790 between rule 111 and token '|' resolved as reduce.
Conflict in state 790 between rule 111 and token '^' resolved as reduce.
Conflict in state 790 between rule 111 and token '&' resolved as reduce.
Conflict in state 790 between rule 111 and token MIN_MAX resolved as reduce.
Conflict in state 790 between rule 111 and token EQCOMPARE resolved as reduce.
Conflict in state 790 between rule 111 and token ARITHCOMPARE resolved as reduce.
Conflict in state 790 between rule 111 and token LSHIFT resolved as reduce.
Conflict in state 790 between rule 111 and token RSHIFT resolved as reduce.
Conflict in state 790 between rule 111 and token '+' resolved as reduce.
Conflict in state 790 between rule 111 and token '-' resolved as reduce.
Conflict in state 790 between rule 111 and token '*' resolved as reduce.
Conflict in state 790 between rule 111 and token '/' resolved as reduce.
Conflict in state 790 between rule 111 and token '%' resolved as reduce.
Conflict in state 812 between rule 418 and token LEFT_RIGHT resolved as shift.
Conflict in state 812 between rule 418 and token '(' resolved as shift.
Conflict in state 812 between rule 418 and token '[' resolved as shift.
Conflict in state 893 between rule 129 and token ASSIGN resolved as reduce.
Conflict in state 893 between rule 129 and token '=' resolved as reduce.
Conflict in state 893 between rule 129 and token '?' resolved as shift.
Conflict in state 893 between rule 129 and token OROR resolved as shift.
Conflict in state 893 between rule 129 and token ANDAND resolved as shift.
Conflict in state 893 between rule 129 and token '|' resolved as shift.
Conflict in state 893 between rule 129 and token '^' resolved as shift.
Conflict in state 893 between rule 129 and token '&' resolved as shift.
Conflict in state 893 between rule 129 and token MIN_MAX resolved as shift.
Conflict in state 893 between rule 129 and token EQCOMPARE resolved as shift.
Conflict in state 893 between rule 129 and token ARITHCOMPARE resolved as shift.
Conflict in state 893 between rule 129 and token LSHIFT resolved as shift.
Conflict in state 893 between rule 129 and token RSHIFT resolved as shift.
Conflict in state 893 between rule 129 and token '+' resolved as shift.
Conflict in state 893 between rule 129 and token '-' resolved as shift.
Conflict in state 893 between rule 129 and token '*' resolved as shift.
Conflict in state 893 between rule 129 and token '/' resolved as shift.
Conflict in state 893 between rule 129 and token '%' resolved as shift.
Conflict in state 897 between rule 135 and token ASSIGN resolved as reduce.
Conflict in state 897 between rule 135 and token '=' resolved as reduce.
Conflict in state 897 between rule 135 and token '?' resolved as reduce.
Conflict in state 897 between rule 135 and token OROR resolved as reduce.
Conflict in state 897 between rule 135 and token ANDAND resolved as reduce.
Conflict in state 897 between rule 135 and token '|' resolved as reduce.
Conflict in state 897 between rule 135 and token '^' resolved as reduce.
Conflict in state 897 between rule 135 and token '&' resolved as reduce.
Conflict in state 897 between rule 135 and token MIN_MAX resolved as reduce.
Conflict in state 897 between rule 135 and token EQCOMPARE resolved as reduce.
Conflict in state 897 between rule 135 and token ARITHCOMPARE resolved as reduce.
Conflict in state 897 between rule 135 and token LSHIFT resolved as reduce.
Conflict in state 897 between rule 135 and token RSHIFT resolved as reduce.
Conflict in state 897 between rule 135 and token '+' resolved as reduce.
Conflict in state 897 between rule 135 and token '-' resolved as reduce.
Conflict in state 897 between rule 135 and token '*' resolved as reduce.
Conflict in state 897 between rule 135 and token '/' resolved as reduce.
Conflict in state 897 between rule 135 and token '%' resolved as reduce.
State 44 contains 1 shift/reduce conflict.
State 51 contains 1 shift/reduce conflict.
State 65 contains 3 shift/reduce conflicts.
State 67 contains 2 shift/reduce conflicts.
State 72 contains 5 reduce/reduce conflicts.
State 82 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 241 contains 5 reduce/reduce conflicts.
State 308 contains 2 shift/reduce conflicts.
State 325 contains 1 shift/reduce conflict.
State 370 contains 1 shift/reduce conflict.
State 487 contains 3 shift/reduce conflicts.
State 492 contains 3 shift/reduce conflicts.
State 493 contains 1 shift/reduce conflict.
State 498 contains 1 shift/reduce conflict.
State 578 contains 1 shift/reduce conflict.
State 737 contains 1 shift/reduce conflict.
State 742 contains 1 reduce/reduce conflict.
State 758 contains 2 shift/reduce conflicts.


token types:
 type -1 is $
 type 33 is '!'
 type 37 is '%'
 type 38 is '&'
 type 40 is '('
 type 41 is ')'
 type 42 is '*'
 type 43 is '+'
 type 44 is ','
 type 45 is '-'
 type 46 is '.'
 type 47 is '/'
 type 58 is ':'
 type 59 is ';'
 type 61 is '='
 type 63 is '?'
 type 91 is '['
 type 93 is ']'
 type 94 is '^'
 type 123 is '{'
 type 124 is '|'
 type 125 is '}'
 type 126 is '~'
 type 256 is error
 type 258 is IDENTIFIER
 type 259 is TYPENAME
 type 260 is SCSPEC
 type 261 is TYPESPEC
 type 262 is TYPE_QUAL
 type 263 is CONSTANT
 type 264 is STRING
 type 265 is ELLIPSIS
 type 266 is SIZEOF
 type 267 is ENUM
 type 268 is IF
 type 269 is ELSE
 type 270 is WHILE
 type 271 is DO
 type 272 is FOR
 type 273 is SWITCH
 type 274 is CASE
 type 275 is DEFAULT
 type 276 is BREAK
 type 277 is CONTINUE
 type 278 is RETURN
 type 279 is GOTO
 type 280 is ASM
 type 281 is TYPEOF
 type 282 is ALIGNOF
 type 283 is ATTRIBUTE
 type 284 is AGGR
 type 285 is DELETE
 type 286 is NEW
 type 287 is OVERLOAD
 type 288 is PRIVATE
 type 289 is PUBLIC
 type 290 is PROTECTED
 type 291 is THIS
 type 292 is OPERATOR
 type 293 is DYNAMIC
 type 294 is POINTSAT_LEFT_RIGHT
 type 295 is LEFT_RIGHT
 type 296 is SCOPE
 type 297 is EMPTY
 type 298 is TYPENAME_COLON
 type 299 is ASSIGN
 type 300 is RANGE
 type 301 is OROR
 type 302 is ANDAND
 type 303 is MIN_MAX
 type 304 is EQCOMPARE
 type 305 is ARITHCOMPARE
 type 306 is LSHIFT
 type 307 is RSHIFT
 type 308 is UNARY
 type 309 is PLUSPLUS
 type 310 is MINUSMINUS
 type 311 is HYPERUNARY
 type 312 is PAREN_STAR_PAREN
 type 313 is PAREN_X_SCOPE_STAR_PAREN
 type 314 is PAREN_X_SCOPE_REF_PAREN
 type 315 is POINTSAT
 type 316 is RAISE
 type 317 is RAISES
 type 318 is RERAISE
 type 319 is TRY
 type 320 is EXCEPT
 type 321 is CATCH
 type 322 is TYPENAME_SCOPE
 type 323 is TYPENAME_ELLIPSIS
 type 324 is PRE_PARSED_FUNCTION_DECL
 type 325 is EXTERN_LANG_STRING
 type 326 is ALL


state 0

    extdefs	shift  1
    program	shift  1039
    @1  	shift  2

    $   	reduce  1  (program)
    $default	reduce  3  (@1)



state 1

    program  ->  extdefs .   (2)
    extdefs  ->  extdefs . @2 extdef   (6)

    @2  	shift  3

    $   	reduce  2  (program)
    $default	reduce  5  (@2)



state 2

    extdefs  ->  @1 . extdef   (4)

    error	shift  4
    ASM 	shift  5
    OVERLOAD	shift  6
    PRE_PARSED_FUNCTION_DECL	shift  7
    EXTERN_LANG_STRING	shift  8
    ';' 	shift  9
    extdef	shift  10
    extern_lang_string	shift  11
    overloaddef	shift  12
    dummy_decl	shift  13
    datadef	shift  14
    fndef	shift  15
    fn.def1	shift  16
    typed_declspecs	shift  17
    declmods	shift  18
    x_typespec	shift  19

    IDENTIFIER	reduce  19  (dummy_decl)
    TYPENAME	reduce  19  (dummy_decl)
    SCSPEC	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    OPERATOR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)
    LEFT_RIGHT	reduce  19  (dummy_decl)
    SCOPE	reduce  19  (dummy_decl)
    '&' 	reduce  19  (dummy_decl)
    '*' 	reduce  19  (dummy_decl)
    '(' 	reduce  19  (dummy_decl)
    TYPENAME_SCOPE	reduce  19  (dummy_decl)
    '~' 	reduce  19  (dummy_decl)



state 3

    extdefs  ->  extdefs @2 . extdef   (6)

    error	shift  4
    ASM 	shift  5
    OVERLOAD	shift  6
    PRE_PARSED_FUNCTION_DECL	shift  7
    EXTERN_LANG_STRING	shift  8
    ';' 	shift  9
    extdef	shift  20
    extern_lang_string	shift  11
    overloaddef	shift  12
    dummy_decl	shift  13
    datadef	shift  14
    fndef	shift  15
    fn.def1	shift  16
    typed_declspecs	shift  17
    declmods	shift  18
    x_typespec	shift  19

    IDENTIFIER	reduce  19  (dummy_decl)
    TYPENAME	reduce  19  (dummy_decl)
    SCSPEC	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    OPERATOR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)
    LEFT_RIGHT	reduce  19  (dummy_decl)
    SCOPE	reduce  19  (dummy_decl)
    '&' 	reduce  19  (dummy_decl)
    '*' 	reduce  19  (dummy_decl)
    '(' 	reduce  19  (dummy_decl)
    TYPENAME_SCOPE	reduce  19  (dummy_decl)
    '~' 	reduce  19  (dummy_decl)



state 4

    datadef  ->  error . ';'   (27)
    datadef  ->  error . '}'   (28)

    ';' 	shift  21
    '}' 	shift  22



state 5

    extdef  ->  ASM . '(' string ')' ';'   (10)

    '(' 	shift  23



state 6

    overloaddef  ->  OVERLOAD . ov_identifiers ';'   (16)

    IDENTIFIER	shift  24
    ov_identifiers	shift  25



state 7

    fn.def1  ->  PRE_PARSED_FUNCTION_DECL .   (43)

    $default	reduce  43  (fn.def1)



state 8

    extern_lang_string  ->  EXTERN_LANG_STRING .   (15)

    $default	reduce  15  (extern_lang_string)



state 9

    datadef  ->  ';' .   (29)

    $default	reduce  29  (datadef)



state 10

    extdefs  ->  @1 extdef .   (4)

    $default	reduce  4  (extdefs)



state 11

    extdef  ->  extern_lang_string . '{' extdefs '}'   (11)
    extdef  ->  extern_lang_string . '{' '}'   (12)
    extdef  ->  extern_lang_string . fndef   (13)
    extdef  ->  extern_lang_string . datadef   (14)

    error	shift  4
    '{' 	shift  26
    PRE_PARSED_FUNCTION_DECL	shift  7
    ';' 	shift  9
    dummy_decl	shift  13
    datadef	shift  27
    fndef	shift  28
    fn.def1	shift  16
    typed_declspecs	shift  17
    declmods	shift  18
    x_typespec	shift  19

    IDENTIFIER	reduce  19  (dummy_decl)
    TYPENAME	reduce  19  (dummy_decl)
    SCSPEC	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    OPERATOR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)
    LEFT_RIGHT	reduce  19  (dummy_decl)
    SCOPE	reduce  19  (dummy_decl)
    '&' 	reduce  19  (dummy_decl)
    '*' 	reduce  19  (dummy_decl)
    '(' 	reduce  19  (dummy_decl)
    TYPENAME_SCOPE	reduce  19  (dummy_decl)
    '~' 	reduce  19  (dummy_decl)



state 12

    extdef  ->  overloaddef .   (9)

    $default	reduce  9  (extdef)



state 13

    datadef  ->  dummy_decl . notype_initdecls ';'   (20)
    fndef  ->  dummy_decl . notype_declarator error   (37)
    fn.def1  ->  dummy_decl . notype_declarator maybe_raises   (40)
    fn.def1  ->  dummy_decl . TYPENAME '(' parmlist ')' type_quals maybe_raises   (41)
    fn.def1  ->  dummy_decl . TYPENAME LEFT_RIGHT type_quals maybe_raises   (42)
    declmods  ->  dummy_decl . TYPE_QUAL   (204)
    declmods  ->  dummy_decl . SCSPEC   (205)
    x_typespec  ->  dummy_decl . TYPESPEC   (222)
    x_typespec  ->  dummy_decl . structsp   (223)
    x_typespec  ->  dummy_decl . TYPENAME   (224)
    x_typespec  ->  dummy_decl . TYPEOF '(' expr ')'   (225)
    x_typespec  ->  dummy_decl . TYPEOF '(' typename ')'   (226)

    IDENTIFIER	shift  29
    TYPENAME	shift  30
    SCSPEC	shift  31
    TYPESPEC	shift  32
    TYPE_QUAL	shift  33
    ENUM	shift  34
    TYPEOF	shift  35
    AGGR	shift  36
    OPERATOR	shift  37
    DYNAMIC	shift  38
    LEFT_RIGHT	shift  39
    SCOPE	shift  40
    '&' 	shift  41
    '*' 	shift  42
    '(' 	shift  43
    TYPENAME_SCOPE	shift  44
    '~' 	shift  45
    notype_initdecls	shift  46
    notype_initdcl0	shift  47
    structsp	shift  48
    aggr	shift  49
    class_head	shift  50
    notype_declarator	shift  51
    operator_name	shift  52



state 14

    extdef  ->  datadef .   (8)

    $default	reduce  8  (extdef)



state 15

    extdef  ->  fndef .   (7)

    $default	reduce  7  (extdef)



state 16

    fndef  ->  fn.def1 . base_init compstmt_or_error   (30)
    fndef  ->  fn.def1 . return_init base_init compstmt_or_error   (31)
    fndef  ->  fn.def1 . nodecls compstmt_or_error   (32)
    fndef  ->  fn.def1 . return_init ';' nodecls compstmt_or_error   (33)
    fndef  ->  fn.def1 . return_init nodecls compstmt_or_error   (34)

    RETURN	shift  53
    ':' 	shift  54
    return_id	shift  55
    return_init	shift  56
    base_init	shift  57
    nodecls	shift  58

    $default	reduce  185  (nodecls)



state 17

    datadef  ->  typed_declspecs . initdecls ';'   (23)
    datadef  ->  typed_declspecs . declarator ';'   (24)
    datadef  ->  typed_declspecs . ';'   (26)
    fndef  ->  typed_declspecs . declarator error   (35)
    fn.def1  ->  typed_declspecs . declarator maybe_raises   (38)

    IDENTIFIER	shift  29
    TYPENAME	shift  59
    OPERATOR	shift  37
    LEFT_RIGHT	shift  39
    SCOPE	shift  40
    '&' 	shift  60
    '*' 	shift  61
    PAREN_STAR_PAREN	shift  62
    PAREN_X_SCOPE_STAR_PAREN	shift  63
    PAREN_X_SCOPE_REF_PAREN	shift  64
    '(' 	shift  65
    TYPENAME_SCOPE	shift  44
    ';' 	shift  66
    '~' 	shift  45
    declarator	shift  67
    initdecls	shift  68
    initdcl0	shift  69
    after_type_declarator	shift  70
    notype_declarator	shift  71
    operator_name	shift  52



state 18

    datadef  ->  declmods . notype_initdecls ';'   (21)
    datadef  ->  declmods . declarator ';'   (22)
    datadef  ->  declmods . ';'   (25)
    fndef  ->  declmods . notype_declarator error   (36)
    fn.def1  ->  declmods . notype_declarator maybe_raises   (39)
    typed_declspecs  ->  declmods . typespec   (197)
    typed_declspecs  ->  declmods . typespec reserved_declspecs   (199)
    declmods  ->  declmods . TYPE_QUAL   (206)
    declmods  ->  declmods . SCSPEC   (207)

    IDENTIFIER	shift  29
    TYPENAME	shift  72
    SCSPEC	shift  73
    TYPESPEC	shift  74
    TYPE_QUAL	shift  75
    ENUM	shift  34
    TYPEOF	shift  76
    AGGR	shift  36
    OPERATOR	shift  37
    DYNAMIC	shift  38
    LEFT_RIGHT	shift  39
    SCOPE	shift  40
    '&' 	shift  60
    '*' 	shift  61
    PAREN_STAR_PAREN	shift  62
    PAREN_X_SCOPE_STAR_PAREN	shift  63
    PAREN_X_SCOPE_REF_PAREN	shift  64
    '(' 	shift  65
    TYPENAME_SCOPE	shift  44
    ';' 	shift  77
    '~' 	shift  45
    declarator	shift  78
    typespec	shift  79
    notype_initdecls	shift  80
    notype_initdcl0	shift  47
    structsp	shift  81
    aggr	shift  49
    class_head	shift  50
    after_type_declarator	shift  70
    notype_declarator	shift  82
    operator_name	shift  52



state 19

    typed_declspecs  ->  x_typespec .   (196)
    typed_declspecs  ->  x_typespec . reserved_declspecs   (198)

    SCSPEC	shift  83
    TYPESPEC	shift  84
    TYPE_QUAL	shift  85
    ENUM	shift  34
    AGGR	shift  36
    DYNAMIC	shift  38
    reserved_declspecs	shift  86
    typespecqual_reserved	shift  87
    structsp	shift  88
    aggr	shift  49
    class_head	shift  50

    $default	reduce  196  (typed_declspecs)



state 20

    extdefs  ->  extdefs @2 extdef .   (6)

    $default	reduce  6  (extdefs)



state 21

    datadef  ->  error ';' .   (27)

    $default	reduce  27  (datadef)



state 22

    datadef  ->  error '}' .   (28)

    $default	reduce  28  (datadef)



state 23

    extdef  ->  ASM '(' . string ')' ';'   (10)

    STRING	shift  89
    string	shift  90



state 24

    ov_identifiers  ->  IDENTIFIER .   (17)

    $default	reduce  17  (ov_identifiers)



state 25

    overloaddef  ->  OVERLOAD ov_identifiers . ';'   (16)
    ov_identifiers  ->  ov_identifiers . ',' IDENTIFIER   (18)

    ',' 	shift  91
    ';' 	shift  92



state 26

    extdef  ->  extern_lang_string '{' . extdefs '}'   (11)
    extdef  ->  extern_lang_string '{' . '}'   (12)

    '}' 	shift  93
    extdefs	shift  94
    @1  	shift  2

    $default	reduce  3  (@1)



state 27

    extdef  ->  extern_lang_string datadef .   (14)

    $default	reduce  14  (extdef)



state 28

    extdef  ->  extern_lang_string fndef .   (13)

    $default	reduce  13  (extdef)



state 29

    notype_declarator  ->  IDENTIFIER .   (384)

    $default	reduce  384  (notype_declarator)



state 30

    fn.def1  ->  dummy_decl TYPENAME . '(' parmlist ')' type_quals maybe_raises   (41)
    fn.def1  ->  dummy_decl TYPENAME . LEFT_RIGHT type_quals maybe_raises   (42)
    x_typespec  ->  dummy_decl TYPENAME .   (224)

    LEFT_RIGHT	shift  95
    '(' 	shift  96

    $default	reduce  224  (x_typespec)



state 31

    declmods  ->  dummy_decl SCSPEC .   (205)

    $default	reduce  205  (declmods)



state 32

    x_typespec  ->  dummy_decl TYPESPEC .   (222)

    $default	reduce  222  (x_typespec)



state 33

    declmods  ->  dummy_decl TYPE_QUAL .   (204)

    $default	reduce  204  (declmods)



state 34

    structsp  ->  ENUM . identifier '{' @8 enumlist maybecomma_warn '}'   (259)
    structsp  ->  ENUM . '{' @9 enumlist maybecomma_warn '}'   (261)
    structsp  ->  ENUM . identifier   (262)

    IDENTIFIER	shift  97
    TYPENAME	shift  98
    '{' 	shift  99
    identifier	shift  100



state 35

    x_typespec  ->  dummy_decl TYPEOF . '(' expr ')'   (225)
    x_typespec  ->  dummy_decl TYPEOF . '(' typename ')'   (226)

    '(' 	shift  101



state 36

    aggr  ->  AGGR .   (270)

    $default	reduce  270  (aggr)



state 37

    operator_name  ->  OPERATOR . '*'   (542)
    operator_name  ->  OPERATOR . '/'   (543)
    operator_name  ->  OPERATOR . '%'   (544)
    operator_name  ->  OPERATOR . '+'   (545)
    operator_name  ->  OPERATOR . '-'   (546)
    operator_name  ->  OPERATOR . '&'   (547)
    operator_name  ->  OPERATOR . '|'   (548)
    operator_name  ->  OPERATOR . '^'   (549)
    operator_name  ->  OPERATOR . '~'   (550)
    operator_name  ->  OPERATOR . ARITHCOMPARE   (551)
    operator_name  ->  OPERATOR . EQCOMPARE   (552)
    operator_name  ->  OPERATOR . ASSIGN   (553)
    operator_name  ->  OPERATOR . '='   (554)
    operator_name  ->  OPERATOR . LSHIFT   (555)
    operator_name  ->  OPERATOR . RSHIFT   (556)
    operator_name  ->  OPERATOR . PLUSPLUS   (557)
    operator_name  ->  OPERATOR . MINUSMINUS   (558)
    operator_name  ->  OPERATOR . ANDAND   (559)
    operator_name  ->  OPERATOR . OROR   (560)
    operator_name  ->  OPERATOR . '!'   (561)
    operator_name  ->  OPERATOR . '?' ':'   (562)
    operator_name  ->  OPERATOR . MIN_MAX   (563)
    operator_name  ->  OPERATOR . POINTSAT   (564)
    operator_name  ->  OPERATOR . POINTSAT_LEFT_RIGHT type_quals   (565)
    operator_name  ->  OPERATOR . LEFT_RIGHT   (566)
    operator_name  ->  OPERATOR . '[' ']'   (567)
    operator_name  ->  OPERATOR . NEW   (568)
    operator_name  ->  OPERATOR . DELETE   (569)
    operator_name  ->  OPERATOR . typed_typespecs absdcl   (570)
    operator_name  ->  OPERATOR . error   (571)

    error	shift  102
    DELETE	shift  103
    NEW 	shift  104
    POINTSAT_LEFT_RIGHT	shift  105
    LEFT_RIGHT	shift  106
    ASSIGN	shift  107
    '=' 	shift  108
    '?' 	shift  109
    OROR	shift  110
    ANDAND	shift  111
    '|' 	shift  112
    '^' 	shift  113
    '&' 	shift  114
    MIN_MAX	shift  115
    EQCOMPARE	shift  116
    ARITHCOMPARE	shift  117
    LSHIFT	shift  118
    RSHIFT	shift  119
    '+' 	shift  120
    '-' 	shift  121
    '*' 	shift  122
    '/' 	shift  123
    '%' 	shift  124
    PLUSPLUS	shift  125
    MINUSMINUS	shift  126
    POINTSAT	shift  127
    '[' 	shift  128
    '~' 	shift  129
    '!' 	shift  130
    dummy_decl	shift  131
    typed_typespecs	shift  132
    x_typespec	shift  133
    nonempty_type_quals	shift  134

    TYPENAME	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)



state 38

    aggr  ->  DYNAMIC . AGGR   (271)
    aggr  ->  DYNAMIC . '(' string ')' AGGR   (272)

    AGGR	shift  135
    '(' 	shift  136



state 39

    notype_declarator  ->  LEFT_RIGHT . identifier   (388)
    notype_declarator  ->  LEFT_RIGHT . '?' identifier   (389)

    IDENTIFIER	shift  97
    TYPENAME	shift  98
    '?' 	shift  137
    identifier	shift  138



state 40

    notype_declarator  ->  SCOPE . see_typename notype_declarator   (397)

    type_quals	shift  139
    see_typename	shift  140

    $default	reduce  344  (type_quals)



state 41

    notype_declarator  ->  '&' . type_quals notype_declarator   (381)

    type_quals	shift  141

    $default	reduce  344  (type_quals)



state 42

    notype_declarator  ->  '*' . type_quals notype_declarator   (380)

    type_quals	shift  142

    $default	reduce  344  (type_quals)



state 43

    notype_declarator  ->  '(' . notype_declarator ')'   (379)

    IDENTIFIER	shift  29
    OPERATOR	shift  37
    LEFT_RIGHT	shift  39
    SCOPE	shift  40
    '&' 	shift  41
    '*' 	shift  42
    '(' 	shift  43
    TYPENAME_SCOPE	shift  44
    '~' 	shift  45
    notype_declarator	shift  143
    operator_name	shift  52



state 44

    notype_declarator  ->  TYPENAME_SCOPE . type_quals notype_declarator   (391)
    notype_declarator  ->  TYPENAME_SCOPE . TYPENAME   (392)
    notype_declarator  ->  TYPENAME_SCOPE . see_typename TYPENAME '(' nonnull_exprlist ')' type_quals   (393)
    notype_declarator  ->  TYPENAME_SCOPE . see_typename TYPENAME '(' parmlist ')' type_quals   (394)
    notype_declarator  ->  TYPENAME_SCOPE . see_typename TYPENAME LEFT_RIGHT type_quals   (395)
    notype_declarator  ->  TYPENAME_SCOPE . see_typename TYPENAME '(' error ')' type_quals   (396)

    TYPENAME	shift  144
    type_quals	shift  145
    see_typename	shift  146

    TYPENAME	[reduce  344  (type_quals)]
    $default	reduce  344  (type_quals)



state 45

    notype_declarator  ->  '~' . TYPENAME   (386)
    notype_declarator  ->  '~' . IDENTIFIER   (387)
    notype_declarator  ->  '~' . LEFT_RIGHT identifier   (390)

    IDENTIFIER	shift  147
    TYPENAME	shift  148
    LEFT_RIGHT	shift  149



state 46

    datadef  ->  dummy_decl notype_initdecls . ';'   (20)
    notype_initdecls  ->  notype_initdecls . ',' initdcl   (230)

    ',' 	shift  150
    ';' 	shift  151



state 47

    notype_initdecls  ->  notype_initdcl0 .   (229)

    $default	reduce  229  (notype_initdecls)



state 48

    x_typespec  ->  dummy_decl structsp .   (223)

    $default	reduce  223  (x_typespec)



state 49

    aggr  ->  aggr . SCSPEC   (273)
    aggr  ->  aggr . TYPESPEC   (274)
    aggr  ->  aggr . TYPE_QUAL   (275)
    aggr  ->  aggr . AGGR   (276)
    class_head  ->  aggr .   (277)
    class_head  ->  aggr . identifier   (278)
    class_head  ->  aggr . IDENTIFIER ':' base_class_list   (279)
    class_head  ->  aggr . TYPENAME_COLON   (280)
    class_head  ->  aggr . TYPENAME_COLON base_class_list   (281)

    IDENTIFIER	shift  152
    TYPENAME	shift  98
    SCSPEC	shift  153
    TYPESPEC	shift  154
    TYPE_QUAL	shift  155
    AGGR	shift  156
    TYPENAME_COLON	shift  157
    identifier	shift  158

    $default	reduce  277  (class_head)



state 50

    structsp  ->  class_head . LC opt.component_decl_list '}'   (263)
    structsp  ->  class_head . LC opt.component_decl_list '}' ';'   (264)
    structsp  ->  class_head .   (265)

    '{' 	shift  159
    LC  	shift  160

    $default	reduce  265  (structsp)



state 51

    fndef  ->  dummy_decl notype_declarator . error   (37)
    fn.def1  ->  dummy_decl notype_declarator . maybe_raises   (40)
    notype_initdcl0  ->  notype_declarator . maybe_raises maybeasm maybe_attribute '=' @7 init   (240)
    notype_initdcl0  ->  notype_declarator . maybe_raises maybeasm maybe_attribute   (241)
    notype_declarator  ->  notype_declarator . '(' nonnull_exprlist ')' type_quals   (375)
    notype_declarator  ->  notype_declarator . '(' parmlist ')' type_quals   (376)
    notype_declarator  ->  notype_declarator . LEFT_RIGHT type_quals   (377)
    notype_declarator  ->  notype_declarator . '(' error ')' type_quals   (378)
    notype_declarator  ->  notype_declarator . '[' nonmomentary_expr ']'   (382)
    notype_declarator  ->  notype_declarator . '[' ']'   (383)

    error	shift  161
    LEFT_RIGHT	shift  162
    '(' 	shift  163
    '[' 	shift  164
    RAISES	shift  165
    maybe_raises	shift  166

    error	[reduce  531  (maybe_raises)]
    RETURN	reduce  531  (maybe_raises)
    ASM 	reduce  531  (maybe_raises)
    ATTRIBUTE	reduce  531  (maybe_raises)
    '{' 	reduce  531  (maybe_raises)
    ',' 	reduce  531  (maybe_raises)
    '=' 	reduce  531  (maybe_raises)
    ':' 	reduce  531  (maybe_raises)
    ';' 	reduce  531  (maybe_raises)



state 52

    notype_declarator  ->  operator_name .   (385)

    $default	reduce  385  (notype_declarator)



state 53

    return_id  ->  RETURN . IDENTIFIER   (51)

    IDENTIFIER	shift  167



state 54

    base_init  ->  ':' . .set_base_init member_init_list   (55)

    .set_base_init	shift  168

    $default	reduce  56  (.set_base_init)



state 55

    return_init  ->  return_id . opt.init   (52)
    return_init  ->  return_id . '(' exprlist ')'   (53)
    return_init  ->  return_id . LEFT_RIGHT   (54)

    LEFT_RIGHT	shift  169
    '=' 	shift  170
    '(' 	shift  171
    opt.init	shift  172

    $default	reduce  529  (opt.init)



state 56

    fndef  ->  fn.def1 return_init . base_init compstmt_or_error   (31)
    fndef  ->  fn.def1 return_init . ';' nodecls compstmt_or_error   (33)
    fndef  ->  fn.def1 return_init . nodecls compstmt_or_error   (34)

    ':' 	shift  54
    ';' 	shift  173
    base_init	shift  174
    nodecls	shift  175

    $default	reduce  185  (nodecls)



state 57

    fndef  ->  fn.def1 base_init . compstmt_or_error   (30)

    error	shift  176
    '{' 	shift  177
    compstmt_or_error	shift  178
    compstmt	shift  179



state 58

    fndef  ->  fn.def1 nodecls . compstmt_or_error   (32)

    error	shift  176
    '{' 	shift  177
    compstmt_or_error	shift  180
    compstmt	shift  179



state 59

    after_type_declarator  ->  TYPENAME .   (362)

    $default	reduce  362  (after_type_declarator)



state 60

    after_type_declarator  ->  '&' . type_quals after_type_declarator   (361)
    notype_declarator  ->  '&' . type_quals notype_declarator   (381)

    type_quals	shift  181

    $default	reduce  344  (type_quals)



state 61

    after_type_declarator  ->  '*' . type_quals after_type_declarator   (360)
    notype_declarator  ->  '*' . type_quals notype_declarator   (380)

    type_quals	shift  182

    $default	reduce  344  (type_quals)



state 62

    after_type_declarator  ->  PAREN_STAR_PAREN .   (356)

    $default	reduce  356  (after_type_declarator)



state 63

    after_type_declarator  ->  PAREN_X_SCOPE_STAR_PAREN .   (357)

    $default	reduce  357  (after_type_declarator)



state 64

    after_type_declarator  ->  PAREN_X_SCOPE_REF_PAREN .   (358)

    $default	reduce  358  (after_type_declarator)



state 65

    after_type_declarator  ->  '(' . dummy_decl after_type_declarator_no_typename ')'   (354)
    after_type_declarator  ->  '(' . '*' type_quals after_type_declarator ')'   (355)
    after_type_declarator  ->  '(' . '&' type_quals after_type_declarator ')'   (359)
    notype_declarator  ->  '(' . notype_declarator ')'   (379)

    IDENTIFIER	shift  29
    OPERATOR	shift  37
    LEFT_RIGHT	shift  39
    SCOPE	shift  40
    '&' 	shift  183
    '*' 	shift  184
    '(' 	shift  43
    TYPENAME_SCOPE	shift  44
    '~' 	shift  45
    dummy_decl	shift  185
    notype_declarator	shift  143
    operator_name	shift  52

    '&' 	[reduce  19  (dummy_decl)]
    '*' 	[reduce  19  (dummy_decl)]
    '(' 	[reduce  19  (dummy_decl)]
    $default	reduce  19  (dummy_decl)



state 66

    datadef  ->  typed_declspecs ';' .   (26)

    $default	reduce  26  (datadef)



state 67

    datadef  ->  typed_declspecs declarator . ';'   (24)
    fndef  ->  typed_declspecs declarator . error   (35)
    fn.def1  ->  typed_declspecs declarator . maybe_raises   (38)
    initdcl0  ->  declarator . maybe_raises maybeasm maybe_attribute '=' @5 init   (234)
    initdcl0  ->  declarator . maybe_raises maybeasm maybe_attribute   (235)

    error	shift  186
    RAISES	shift  165
    ';' 	shift  187
    maybe_raises	shift  188

    error	[reduce  531  (maybe_raises)]
    RETURN	reduce  531  (maybe_raises)
    ASM 	reduce  531  (maybe_raises)
    ATTRIBUTE	reduce  531  (maybe_raises)
    '{' 	reduce  531  (maybe_raises)
    ',' 	reduce  531  (maybe_raises)
    '=' 	reduce  531  (maybe_raises)
    ':' 	reduce  531  (maybe_raises)
    ';' 	reduce  531  (maybe_raises)



state 68

    datadef  ->  typed_declspecs initdecls . ';'   (23)
    initdecls  ->  initdecls . ',' initdcl   (228)

    ',' 	shift  189
    ';' 	shift  190



state 69

    initdecls  ->  initdcl0 .   (227)

    $default	reduce  227  (initdecls)



state 70

    declarator  ->  after_type_declarator .   (194)
    after_type_declarator  ->  after_type_declarator . '(' nonnull_exprlist ')' type_quals   (348)
    after_type_declarator  ->  after_type_declarator . '(' parmlist ')' type_quals   (349)
    after_type_declarator  ->  after_type_declarator . LEFT_RIGHT type_quals   (350)
    after_type_declarator  ->  after_type_declarator . '(' error ')' type_quals   (351)
    after_type_declarator  ->  after_type_declarator . '[' nonmomentary_expr ']'   (352)
    after_type_declarator  ->  after_type_declarator . '[' ']'   (353)

    LEFT_RIGHT	shift  191
    '(' 	shift  192
    '[' 	shift  193

    $default	reduce  194  (declarator)



state 71

    declarator  ->  notype_declarator .   (195)
    notype_declarator  ->  notype_declarator . '(' nonnull_exprlist ')' type_quals   (375)
    notype_declarator  ->  notype_declarator . '(' parmlist ')' type_quals   (376)
    notype_declarator  ->  notype_declarator . LEFT_RIGHT type_quals   (377)
    notype_declarator  ->  notype_declarator . '(' error ')' type_quals   (378)
    notype_declarator  ->  notype_declarator . '[' nonmomentary_expr ']'   (382)
    notype_declarator  ->  notype_declarator . '[' ']'   (383)

    LEFT_RIGHT	shift  162
    '(' 	shift  163
    '[' 	shift  164

    $default	reduce  195  (declarator)



state 72

    typespec  ->  TYPENAME .   (216)
    after_type_declarator  ->  TYPENAME .   (362)

    ASM 	reduce  362  (after_type_declarator)
    LEFT_RIGHT	reduce  216  (typespec)
    LEFT_RIGHT	[reduce  362  (after_type_declarator)]
    '{' 	reduce  362  (after_type_declarator)
    ',' 	reduce  216  (typespec)
    ',' 	[reduce  362  (after_type_declarator)]
    '=' 	reduce  362  (after_type_declarator)
    ':' 	reduce  216  (typespec)
    ':' 	[reduce  362  (after_type_declarator)]
    '(' 	reduce  216  (typespec)
    '(' 	[reduce  362  (after_type_declarator)]
    '[' 	reduce  362  (after_type_declarator)
    RAISES	reduce  362  (after_type_declarator)
    ';' 	reduce  216  (typespec)
    ';' 	[reduce  362  (after_type_declarator)]
    '}' 	reduce  362  (after_type_declarator)
    $default	reduce  216  (typespec)



state 73

    declmods  ->  declmods SCSPEC .   (207)

    $default	reduce  207  (declmods)



state 74

    typespec  ->  TYPESPEC .   (214)

    $default	reduce  214  (typespec)



state 75

    declmods  ->  declmods TYPE_QUAL .   (206)

    $default	reduce  206  (declmods)



state 76

    typespec  ->  TYPEOF . '(' expr ')'   (217)
    typespec  ->  TYPEOF . '(' typename ')'   (218)

    '(' 	shift  194



state 77

    datadef  ->  declmods ';' .   (25)

    $default	reduce  25  (datadef)



state 78

    datadef  ->  declmods declarator . ';'   (22)

    ';' 	shift  195



state 79

    typed_declspecs  ->  declmods typespec .   (197)
    typed_declspecs  ->  declmods typespec . reserved_declspecs   (199)

    SCSPEC	shift  83
    TYPESPEC	shift  84
    TYPE_QUAL	shift  85
    ENUM	shift  34
    AGGR	shift  36
    DYNAMIC	shift  38
    reserved_declspecs	shift  196
    typespecqual_reserved	shift  87
    structsp	shift  88
    aggr	shift  49
    class_head	shift  50

    $default	reduce  197  (typed_declspecs)



state 80

    datadef  ->  declmods notype_initdecls . ';'   (21)
    notype_initdecls  ->  notype_initdecls . ',' initdcl   (230)

    ',' 	shift  150
    ';' 	shift  197



state 81

    typespec  ->  structsp .   (215)

    $default	reduce  215  (typespec)



state 82

    fndef  ->  declmods notype_declarator . error   (36)
    fn.def1  ->  declmods notype_declarator . maybe_raises   (39)
    declarator  ->  notype_declarator .   (195)
    notype_initdcl0  ->  notype_declarator . maybe_raises maybeasm maybe_attribute '=' @7 init   (240)
    notype_initdcl0  ->  notype_declarator . maybe_raises maybeasm maybe_attribute   (241)
    notype_declarator  ->  notype_declarator . '(' nonnull_exprlist ')' type_quals   (375)
    notype_declarator  ->  notype_declarator . '(' parmlist ')' type_quals   (376)
    notype_declarator  ->  notype_declarator . LEFT_RIGHT type_quals   (377)
    notype_declarator  ->  notype_declarator . '(' error ')' type_quals   (378)
    notype_declarator  ->  notype_declarator . '[' nonmomentary_expr ']'   (382)
    notype_declarator  ->  notype_declarator . '[' ']'   (383)

    error	shift  198
    LEFT_RIGHT	shift  162
    '(' 	shift  163
    '[' 	shift  164
    RAISES	shift  165
    maybe_raises	shift  199

    error	[reduce  531  (maybe_raises)]
    RETURN	reduce  531  (maybe_raises)
    ASM 	reduce  531  (maybe_raises)
    ATTRIBUTE	reduce  531  (maybe_raises)
    '{' 	reduce  531  (maybe_raises)
    ',' 	reduce  531  (maybe_raises)
    '=' 	reduce  531  (maybe_raises)
    ':' 	reduce  531  (maybe_raises)
    ';' 	reduce  195  (declarator)
    ';' 	[reduce  531  (maybe_raises)]



state 83

    reserved_declspecs  ->  SCSPEC .   (201)

    $default	reduce  201  (reserved_declspecs)



state 84

    typespecqual_reserved  ->  TYPESPEC .   (219)

    $default	reduce  219  (typespecqual_reserved)



state 85

    typespecqual_reserved  ->  TYPE_QUAL .   (220)

    $default	reduce  220  (typespecqual_reserved)



state 86

    typed_declspecs  ->  x_typespec reserved_declspecs .   (198)
    reserved_declspecs  ->  reserved_declspecs . typespecqual_reserved   (202)
    reserved_declspecs  ->  reserved_declspecs . SCSPEC   (203)

    SCSPEC	shift  200
    TYPESPEC	shift  84
    TYPE_QUAL	shift  85
    ENUM	shift  34
    AGGR	shift  36
    DYNAMIC	shift  38
    typespecqual_reserved	shift  201
    structsp	shift  88
    aggr	shift  49
    class_head	shift  50

    $default	reduce  198  (typed_declspecs)



state 87

    reserved_declspecs  ->  typespecqual_reserved .   (200)

    $default	reduce  200  (reserved_declspecs)



state 88

    typespecqual_reserved  ->  structsp .   (221)

    $default	reduce  221  (typespecqual_reserved)



state 89

    string  ->  STRING .   (183)

    $default	reduce  183  (string)



state 90

    extdef  ->  ASM '(' string . ')' ';'   (10)
    string  ->  string . STRING   (184)

    STRING	shift  202
    ')' 	shift  203



state 91

    ov_identifiers  ->  ov_identifiers ',' . IDENTIFIER   (18)

    IDENTIFIER	shift  204



state 92

    overloaddef  ->  OVERLOAD ov_identifiers ';' .   (16)

    $default	reduce  16  (overloaddef)



state 93

    extdef  ->  extern_lang_string '{' '}' .   (12)

    $default	reduce  12  (extdef)



state 94

    extdefs  ->  extdefs . @2 extdef   (6)
    extdef  ->  extern_lang_string '{' extdefs . '}'   (11)

    '}' 	shift  205
    @2  	shift  3

    $default	reduce  5  (@2)



state 95

    fn.def1  ->  dummy_decl TYPENAME LEFT_RIGHT . type_quals maybe_raises   (42)

    type_quals	shift  206

    $default	reduce  344  (type_quals)



state 96

    fn.def1  ->  dummy_decl TYPENAME '(' . parmlist ')' type_quals maybe_raises   (41)

    ELLIPSIS	shift  207
    TYPENAME_ELLIPSIS	shift  208
    dummy_decl	shift  209
    typed_declspecs	shift  210
    declmods	shift  211
    x_typespec	shift  19
    parmlist	shift  212
    parms	shift  213
    parm	shift  214

    ')' 	reduce  510  (parmlist)
    $default	reduce  19  (dummy_decl)



state 97

    identifier  ->  IDENTIFIER .   (67)

    $default	reduce  67  (identifier)



state 98

    identifier  ->  TYPENAME .   (68)

    $default	reduce  68  (identifier)



state 99

    structsp  ->  ENUM '{' . @9 enumlist maybecomma_warn '}'   (261)

    @9  	shift  215

    $default	reduce  260  (@9)



state 100

    structsp  ->  ENUM identifier . '{' @8 enumlist maybecomma_warn '}'   (259)
    structsp  ->  ENUM identifier .   (262)

    '{' 	shift  216

    $default	reduce  262  (structsp)



state 101

    x_typespec  ->  dummy_decl TYPEOF '(' . expr ')'   (225)
    x_typespec  ->  dummy_decl TYPEOF '(' . typename ')'   (226)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  235
    unop	shift  236
    expr	shift  237
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    typed_typespecs	shift  247
    x_typespec	shift  248
    typename	shift  249
    nonempty_type_quals	shift  250
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 102

    operator_name  ->  OPERATOR error .   (571)

    $default	reduce  571  (operator_name)



state 103

    operator_name  ->  OPERATOR DELETE .   (569)

    $default	reduce  569  (operator_name)



state 104

    operator_name  ->  OPERATOR NEW .   (568)

    $default	reduce  568  (operator_name)



state 105

    operator_name  ->  OPERATOR POINTSAT_LEFT_RIGHT . type_quals   (565)

    type_quals	shift  253

    $default	reduce  344  (type_quals)



state 106

    operator_name  ->  OPERATOR LEFT_RIGHT .   (566)

    $default	reduce  566  (operator_name)



state 107

    operator_name  ->  OPERATOR ASSIGN .   (553)

    $default	reduce  553  (operator_name)



state 108

    operator_name  ->  OPERATOR '=' .   (554)

    $default	reduce  554  (operator_name)



state 109

    operator_name  ->  OPERATOR '?' . ':'   (562)

    ':' 	shift  254



state 110

    operator_name  ->  OPERATOR OROR .   (560)

    $default	reduce  560  (operator_name)



state 111

    operator_name  ->  OPERATOR ANDAND .   (559)

    $default	reduce  559  (operator_name)



state 112

    operator_name  ->  OPERATOR '|' .   (548)

    $default	reduce  548  (operator_name)



state 113

    operator_name  ->  OPERATOR '^' .   (549)

    $default	reduce  549  (operator_name)



state 114

    operator_name  ->  OPERATOR '&' .   (547)

    $default	reduce  547  (operator_name)



state 115

    operator_name  ->  OPERATOR MIN_MAX .   (563)

    $default	reduce  563  (operator_name)



state 116

    operator_name  ->  OPERATOR EQCOMPARE .   (552)

    $default	reduce  552  (operator_name)



state 117

    operator_name  ->  OPERATOR ARITHCOMPARE .   (551)

    $default	reduce  551  (operator_name)



state 118

    operator_name  ->  OPERATOR LSHIFT .   (555)

    $default	reduce  555  (operator_name)



state 119

    operator_name  ->  OPERATOR RSHIFT .   (556)

    $default	reduce  556  (operator_name)



state 120

    operator_name  ->  OPERATOR '+' .   (545)

    $default	reduce  545  (operator_name)



state 121

    operator_name  ->  OPERATOR '-' .   (546)

    $default	reduce  546  (operator_name)



state 122

    operator_name  ->  OPERATOR '*' .   (542)

    $default	reduce  542  (operator_name)



state 123

    operator_name  ->  OPERATOR '/' .   (543)

    $default	reduce  543  (operator_name)



state 124

    operator_name  ->  OPERATOR '%' .   (544)

    $default	reduce  544  (operator_name)



state 125

    operator_name  ->  OPERATOR PLUSPLUS .   (557)

    $default	reduce  557  (operator_name)



state 126

    operator_name  ->  OPERATOR MINUSMINUS .   (558)

    $default	reduce  558  (operator_name)



state 127

    operator_name  ->  OPERATOR POINTSAT .   (564)

    $default	reduce  564  (operator_name)



state 128

    operator_name  ->  OPERATOR '[' . ']'   (567)

    ']' 	shift  255



state 129

    operator_name  ->  OPERATOR '~' .   (550)

    $default	reduce  550  (operator_name)



state 130

    operator_name  ->  OPERATOR '!' .   (561)

    $default	reduce  561  (operator_name)



state 131

    x_typespec  ->  dummy_decl . TYPESPEC   (222)
    x_typespec  ->  dummy_decl . structsp   (223)
    x_typespec  ->  dummy_decl . TYPENAME   (224)
    x_typespec  ->  dummy_decl . TYPEOF '(' expr ')'   (225)
    x_typespec  ->  dummy_decl . TYPEOF '(' typename ')'   (226)
    nonempty_type_quals  ->  dummy_decl . TYPE_QUAL   (342)

    TYPENAME	shift  256
    TYPESPEC	shift  32
    TYPE_QUAL	shift  257
    ENUM	shift  34
    TYPEOF	shift  35
    AGGR	shift  36
    DYNAMIC	shift  38
    structsp	shift  48
    aggr	shift  49
    class_head	shift  50



state 132

    operator_name  ->  OPERATOR typed_typespecs . absdcl   (570)

    IDENTIFIER	shift  258
    LEFT_RIGHT	shift  259
    '&' 	shift  260
    '*' 	shift  261
    PAREN_STAR_PAREN	shift  262
    PAREN_X_SCOPE_STAR_PAREN	shift  263
    PAREN_X_SCOPE_REF_PAREN	shift  264
    '(' 	shift  265
    '[' 	shift  266
    TYPENAME_SCOPE	shift  267
    absdcl	shift  268
    absdcl1	shift  269

    $default	reduce  340  (absdcl)



state 133

    typed_typespecs  ->  x_typespec .   (208)
    typed_typespecs  ->  x_typespec . reserved_typespecquals   (210)

    TYPESPEC	shift  84
    TYPE_QUAL	shift  85
    ENUM	shift  34
    AGGR	shift  36
    DYNAMIC	shift  38
    reserved_typespecquals	shift  270
    typespecqual_reserved	shift  271
    structsp	shift  88
    aggr	shift  49
    class_head	shift  50

    $default	reduce  208  (typed_typespecs)



state 134

    typed_typespecs  ->  nonempty_type_quals . typespec   (209)
    typed_typespecs  ->  nonempty_type_quals . typespec reserved_typespecquals   (211)
    nonempty_type_quals  ->  nonempty_type_quals . TYPE_QUAL   (343)

    TYPENAME	shift  272
    TYPESPEC	shift  74
    TYPE_QUAL	shift  273
    ENUM	shift  34
    TYPEOF	shift  76
    AGGR	shift  36
    DYNAMIC	shift  38
    typespec	shift  274
    structsp	shift  81
    aggr	shift  49
    class_head	shift  50



state 135

    aggr  ->  DYNAMIC AGGR .   (271)

    $default	reduce  271  (aggr)



state 136

    aggr  ->  DYNAMIC '(' . string ')' AGGR   (272)

    STRING	shift  89
    string	shift  275



state 137

    notype_declarator  ->  LEFT_RIGHT '?' . identifier   (389)

    IDENTIFIER	shift  97
    TYPENAME	shift  98
    identifier	shift  276



state 138

    notype_declarator  ->  LEFT_RIGHT identifier .   (388)

    $default	reduce  388  (notype_declarator)



state 139

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    see_typename  ->  type_quals .   (525)

    TYPE_QUAL	shift  277

    $default	reduce  525  (see_typename)



state 140

    notype_declarator  ->  SCOPE see_typename . notype_declarator   (397)

    IDENTIFIER	shift  29
    OPERATOR	shift  37
    LEFT_RIGHT	shift  39
    SCOPE	shift  40
    '&' 	shift  41
    '*' 	shift  42
    '(' 	shift  43
    TYPENAME_SCOPE	shift  44
    '~' 	shift  45
    notype_declarator	shift  278
    operator_name	shift  52



state 141

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    notype_declarator  ->  '&' type_quals . notype_declarator   (381)

    IDENTIFIER	shift  29
    TYPE_QUAL	shift  277
    OPERATOR	shift  37
    LEFT_RIGHT	shift  39
    SCOPE	shift  40
    '&' 	shift  41
    '*' 	shift  42
    '(' 	shift  43
    TYPENAME_SCOPE	shift  44
    '~' 	shift  45
    notype_declarator	shift  279
    operator_name	shift  52



state 142

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    notype_declarator  ->  '*' type_quals . notype_declarator   (380)

    IDENTIFIER	shift  29
    TYPE_QUAL	shift  277
    OPERATOR	shift  37
    LEFT_RIGHT	shift  39
    SCOPE	shift  40
    '&' 	shift  41
    '*' 	shift  42
    '(' 	shift  43
    TYPENAME_SCOPE	shift  44
    '~' 	shift  45
    notype_declarator	shift  280
    operator_name	shift  52



state 143

    notype_declarator  ->  notype_declarator . '(' nonnull_exprlist ')' type_quals   (375)
    notype_declarator  ->  notype_declarator . '(' parmlist ')' type_quals   (376)
    notype_declarator  ->  notype_declarator . LEFT_RIGHT type_quals   (377)
    notype_declarator  ->  notype_declarator . '(' error ')' type_quals   (378)
    notype_declarator  ->  '(' notype_declarator . ')'   (379)
    notype_declarator  ->  notype_declarator . '[' nonmomentary_expr ']'   (382)
    notype_declarator  ->  notype_declarator . '[' ']'   (383)

    LEFT_RIGHT	shift  162
    '(' 	shift  163
    '[' 	shift  164
    ')' 	shift  281



state 144

    notype_declarator  ->  TYPENAME_SCOPE TYPENAME .   (392)

    $default	reduce  392  (notype_declarator)



state 145

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    notype_declarator  ->  TYPENAME_SCOPE type_quals . notype_declarator   (391)
    see_typename  ->  type_quals .   (525)

    IDENTIFIER	shift  29
    TYPE_QUAL	shift  277
    OPERATOR	shift  37
    LEFT_RIGHT	shift  39
    SCOPE	shift  40
    '&' 	shift  41
    '*' 	shift  42
    '(' 	shift  43
    TYPENAME_SCOPE	shift  44
    '~' 	shift  45
    notype_declarator	shift  282
    operator_name	shift  52

    $default	reduce  525  (see_typename)



state 146

    notype_declarator  ->  TYPENAME_SCOPE see_typename . TYPENAME '(' nonnull_exprlist ')' type_quals   (393)
    notype_declarator  ->  TYPENAME_SCOPE see_typename . TYPENAME '(' parmlist ')' type_quals   (394)
    notype_declarator  ->  TYPENAME_SCOPE see_typename . TYPENAME LEFT_RIGHT type_quals   (395)
    notype_declarator  ->  TYPENAME_SCOPE see_typename . TYPENAME '(' error ')' type_quals   (396)

    TYPENAME	shift  283



state 147

    notype_declarator  ->  '~' IDENTIFIER .   (387)

    $default	reduce  387  (notype_declarator)



state 148

    notype_declarator  ->  '~' TYPENAME .   (386)

    $default	reduce  386  (notype_declarator)



state 149

    notype_declarator  ->  '~' LEFT_RIGHT . identifier   (390)

    IDENTIFIER	shift  97
    TYPENAME	shift  98
    identifier	shift  284



state 150

    notype_initdecls  ->  notype_initdecls ',' . initdcl   (230)

    IDENTIFIER	shift  29
    TYPENAME	shift  59
    OPERATOR	shift  37
    LEFT_RIGHT	shift  39
    SCOPE	shift  40
    '&' 	shift  60
    '*' 	shift  61
    PAREN_STAR_PAREN	shift  62
    PAREN_X_SCOPE_STAR_PAREN	shift  63
    PAREN_X_SCOPE_REF_PAREN	shift  64
    '(' 	shift  65
    TYPENAME_SCOPE	shift  44
    '~' 	shift  45
    declarator	shift  285
    initdcl	shift  286
    after_type_declarator	shift  70
    notype_declarator	shift  71
    operator_name	shift  52



state 151

    datadef  ->  dummy_decl notype_initdecls ';' .   (20)

    $default	reduce  20  (datadef)



state 152

    identifier  ->  IDENTIFIER .   (67)
    class_head  ->  aggr IDENTIFIER . ':' base_class_list   (279)

    ':' 	shift  287

    $default	reduce  67  (identifier)



state 153

    aggr  ->  aggr SCSPEC .   (273)

    $default	reduce  273  (aggr)



state 154

    aggr  ->  aggr TYPESPEC .   (274)

    $default	reduce  274  (aggr)



state 155

    aggr  ->  aggr TYPE_QUAL .   (275)

    $default	reduce  275  (aggr)



state 156

    aggr  ->  aggr AGGR .   (276)

    $default	reduce  276  (aggr)



state 157

    class_head  ->  aggr TYPENAME_COLON .   (280)
    class_head  ->  aggr TYPENAME_COLON . base_class_list   (281)

    IDENTIFIER	shift  97
    TYPENAME	shift  98
    SCSPEC	shift  288
    PRIVATE	shift  289
    PUBLIC	shift  290
    identifier	shift  291
    base_class_list	shift  292
    base_class_visibility_list	shift  293

    $default	reduce  280  (class_head)



state 158

    class_head  ->  aggr identifier .   (278)

    $default	reduce  278  (class_head)



state 159

    LC  ->  '{' .   (292)

    $default	reduce  292  (LC)



state 160

    structsp  ->  class_head LC . opt.component_decl_list '}'   (263)
    structsp  ->  class_head LC . opt.component_decl_list '}' ';'   (264)

    error	shift  294
    ':' 	shift  295
    dummy_decl	shift  296
    fn.def2	shift  297
    typed_declspecs	shift  298
    declmods	shift  299
    x_typespec	shift  19
    opt.component_decl_list	shift  300
    component_decl_list	shift  301
    component_decl	shift  302

    IDENTIFIER	reduce  19  (dummy_decl)
    TYPENAME	reduce  19  (dummy_decl)
    SCSPEC	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    PRIVATE	[reduce  293  (opt.component_decl_list)]
    PUBLIC	reduce  293  (opt.component_decl_list)
    PROTECTED	reduce  293  (opt.component_decl_list)
    OPERATOR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)
    LEFT_RIGHT	reduce  19  (dummy_decl)
    SCOPE	reduce  19  (dummy_decl)
    '&' 	reduce  19  (dummy_decl)
    '*' 	reduce  19  (dummy_decl)
    '(' 	reduce  19  (dummy_decl)
    TYPENAME_SCOPE	reduce  19  (dummy_decl)
    '}' 	reduce  293  (opt.component_decl_list)
    '~' 	reduce  19  (dummy_decl)



state 161

    fndef  ->  dummy_decl notype_declarator error .   (37)

    $default	reduce  37  (fndef)



state 162

    notype_declarator  ->  notype_declarator LEFT_RIGHT . type_quals   (377)

    type_quals	shift  303

    $default	reduce  344  (type_quals)



state 163

    notype_declarator  ->  notype_declarator '(' . nonnull_exprlist ')' type_quals   (375)
    notype_declarator  ->  notype_declarator '(' . parmlist ')' type_quals   (376)
    notype_declarator  ->  notype_declarator '(' . error ')' type_quals   (378)

    error	shift  304
    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    ELLIPSIS	shift  207
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    TYPENAME_ELLIPSIS	shift  208
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  305
    unop	shift  236
    nonnull_exprlist	shift  306
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  307
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    typed_declspecs	shift  210
    declmods	shift  211
    x_typespec	shift  308
    scoped_identifier	shift  251
    parmlist	shift  309
    parms	shift  213
    parm	shift  214
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    SCSPEC	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)
    ')' 	reduce  510  (parmlist)



state 164

    notype_declarator  ->  notype_declarator '[' . nonmomentary_expr ']'   (382)
    notype_declarator  ->  notype_declarator '[' . ']'   (383)

    ']' 	shift  310
    nonmomentary_expr	shift  311
    @10 	shift  312

    $default	reduce  346  (@10)



state 165

    maybe_raises  ->  RAISES . raise_identifiers   (532)

    IDENTIFIER	shift  313
    TYPENAME	shift  314
    SCOPE	shift  315
    TYPENAME_SCOPE	shift  232
    ALL 	shift  316
    scoped_identifier	shift  317
    raise_identifier	shift  318
    raise_identifiers	shift  319



state 166

    fn.def1  ->  dummy_decl notype_declarator maybe_raises .   (40)
    notype_initdcl0  ->  notype_declarator maybe_raises . maybeasm maybe_attribute '=' @7 init   (240)
    notype_initdcl0  ->  notype_declarator maybe_raises . maybeasm maybe_attribute   (241)

    ASM 	shift  320
    maybeasm	shift  321

    ATTRIBUTE	reduce  231  (maybeasm)
    ',' 	reduce  231  (maybeasm)
    '=' 	reduce  231  (maybeasm)
    ';' 	[reduce  231  (maybeasm)]
    $default	reduce  40  (fn.def1)



state 167

    return_id  ->  RETURN IDENTIFIER .   (51)

    $default	reduce  51  (return_id)



state 168

    base_init  ->  ':' .set_base_init . member_init_list   (55)

    IDENTIFIER	shift  322
    TYPENAME	shift  98
    LEFT_RIGHT	shift  323
    '(' 	shift  324
    TYPENAME_SCOPE	shift  232
    member_init_list	shift  325
    member_init	shift  326
    identifier	shift  327
    scoped_identifier	shift  328

    $default	reduce  57  (member_init_list)



state 169

    return_init  ->  return_id LEFT_RIGHT .   (54)

    $default	reduce  54  (return_init)



state 170

    opt.init  ->  '=' . init   (530)

    error	shift  329
    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '{' 	shift  330
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  332
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    init	shift  334
    scoped_identifier	shift  251
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)



state 171

    return_init  ->  return_id '(' . exprlist ')'   (53)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    exprlist	shift  335
    nonnull_exprlist	shift  336
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  307
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    ')' 	reduce  88  (exprlist)
    $default	reduce  19  (dummy_decl)



state 172

    return_init  ->  return_id opt.init .   (52)

    $default	reduce  52  (return_init)



state 173

    fndef  ->  fn.def1 return_init ';' . nodecls compstmt_or_error   (33)

    nodecls	shift  337

    $default	reduce  185  (nodecls)



state 174

    fndef  ->  fn.def1 return_init base_init . compstmt_or_error   (31)

    error	shift  176
    '{' 	shift  177
    compstmt_or_error	shift  338
    compstmt	shift  179



state 175

    fndef  ->  fn.def1 return_init nodecls . compstmt_or_error   (34)

    error	shift  176
    '{' 	shift  177
    compstmt_or_error	shift  339
    compstmt	shift  179



state 176

    compstmt_or_error  ->  error . compstmt   (427)

    '{' 	shift  177
    compstmt	shift  340



state 177

    compstmt  ->  '{' . '}'   (428)
    compstmt  ->  '{' . .pushlevel stmts '}'   (429)
    compstmt  ->  '{' . .pushlevel error '}'   (430)

    '}' 	shift  341
    .pushlevel	shift  342

    $default	reduce  425  (.pushlevel)



state 178

    fndef  ->  fn.def1 base_init compstmt_or_error .   (30)

    $default	reduce  30  (fndef)



state 179

    compstmt_or_error  ->  compstmt .   (426)

    $default	reduce  426  (compstmt_or_error)



state 180

    fndef  ->  fn.def1 nodecls compstmt_or_error .   (32)

    $default	reduce  32  (fndef)



state 181

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    after_type_declarator  ->  '&' type_quals . after_type_declarator   (361)
    notype_declarator  ->  '&' type_quals . notype_declarator   (381)

    IDENTIFIER	shift  29
    TYPENAME	shift  59
    TYPE_QUAL	shift  277
    OPERATOR	shift  37
    LEFT_RIGHT	shift  39
    SCOPE	shift  40
    '&' 	shift  60
    '*' 	shift  61
    PAREN_STAR_PAREN	shift  62
    PAREN_X_SCOPE_STAR_PAREN	shift  63
    PAREN_X_SCOPE_REF_PAREN	shift  64
    '(' 	shift  65
    TYPENAME_SCOPE	shift  44
    '~' 	shift  45
    after_type_declarator	shift  343
    notype_declarator	shift  279
    operator_name	shift  52



state 182

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    after_type_declarator  ->  '*' type_quals . after_type_declarator   (360)
    notype_declarator  ->  '*' type_quals . notype_declarator   (380)

    IDENTIFIER	shift  29
    TYPENAME	shift  59
    TYPE_QUAL	shift  277
    OPERATOR	shift  37
    LEFT_RIGHT	shift  39
    SCOPE	shift  40
    '&' 	shift  60
    '*' 	shift  61
    PAREN_STAR_PAREN	shift  62
    PAREN_X_SCOPE_STAR_PAREN	shift  63
    PAREN_X_SCOPE_REF_PAREN	shift  64
    '(' 	shift  65
    TYPENAME_SCOPE	shift  44
    '~' 	shift  45
    after_type_declarator	shift  344
    notype_declarator	shift  280
    operator_name	shift  52



state 183

    after_type_declarator  ->  '(' '&' . type_quals after_type_declarator ')'   (359)
    notype_declarator  ->  '&' . type_quals notype_declarator   (381)

    type_quals	shift  345

    $default	reduce  344  (type_quals)



state 184

    after_type_declarator  ->  '(' '*' . type_quals after_type_declarator ')'   (355)
    notype_declarator  ->  '*' . type_quals notype_declarator   (380)

    type_quals	shift  346

    $default	reduce  344  (type_quals)



state 185

    after_type_declarator  ->  '(' dummy_decl . after_type_declarator_no_typename ')'   (354)

    '&' 	shift  347
    '*' 	shift  348
    PAREN_STAR_PAREN	shift  349
    PAREN_X_SCOPE_STAR_PAREN	shift  350
    PAREN_X_SCOPE_REF_PAREN	shift  351
    '(' 	shift  352
    after_type_declarator_no_typename	shift  353



state 186

    fndef  ->  typed_declspecs declarator error .   (35)

    $default	reduce  35  (fndef)



state 187

    datadef  ->  typed_declspecs declarator ';' .   (24)

    $default	reduce  24  (datadef)



state 188

    fn.def1  ->  typed_declspecs declarator maybe_raises .   (38)
    initdcl0  ->  declarator maybe_raises . maybeasm maybe_attribute '=' @5 init   (234)
    initdcl0  ->  declarator maybe_raises . maybeasm maybe_attribute   (235)

    ASM 	shift  320
    maybeasm	shift  354

    ATTRIBUTE	reduce  231  (maybeasm)
    ',' 	reduce  231  (maybeasm)
    '=' 	reduce  231  (maybeasm)
    ';' 	[reduce  231  (maybeasm)]
    $default	reduce  38  (fn.def1)



state 189

    initdecls  ->  initdecls ',' . initdcl   (228)

    IDENTIFIER	shift  29
    TYPENAME	shift  59
    OPERATOR	shift  37
    LEFT_RIGHT	shift  39
    SCOPE	shift  40
    '&' 	shift  60
    '*' 	shift  61
    PAREN_STAR_PAREN	shift  62
    PAREN_X_SCOPE_STAR_PAREN	shift  63
    PAREN_X_SCOPE_REF_PAREN	shift  64
    '(' 	shift  65
    TYPENAME_SCOPE	shift  44
    '~' 	shift  45
    declarator	shift  285
    initdcl	shift  355
    after_type_declarator	shift  70
    notype_declarator	shift  71
    operator_name	shift  52



state 190

    datadef  ->  typed_declspecs initdecls ';' .   (23)

    $default	reduce  23  (datadef)



state 191

    after_type_declarator  ->  after_type_declarator LEFT_RIGHT . type_quals   (350)

    type_quals	shift  356

    $default	reduce  344  (type_quals)



state 192

    after_type_declarator  ->  after_type_declarator '(' . nonnull_exprlist ')' type_quals   (348)
    after_type_declarator  ->  after_type_declarator '(' . parmlist ')' type_quals   (349)
    after_type_declarator  ->  after_type_declarator '(' . error ')' type_quals   (351)

    error	shift  357
    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    ELLIPSIS	shift  207
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    TYPENAME_ELLIPSIS	shift  208
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  305
    unop	shift  236
    nonnull_exprlist	shift  358
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  307
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    typed_declspecs	shift  210
    declmods	shift  211
    x_typespec	shift  308
    scoped_identifier	shift  251
    parmlist	shift  359
    parms	shift  213
    parm	shift  214
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    SCSPEC	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)
    ')' 	reduce  510  (parmlist)



state 193

    after_type_declarator  ->  after_type_declarator '[' . nonmomentary_expr ']'   (352)
    after_type_declarator  ->  after_type_declarator '[' . ']'   (353)

    ']' 	shift  360
    nonmomentary_expr	shift  361
    @10 	shift  312

    $default	reduce  346  (@10)



state 194

    typespec  ->  TYPEOF '(' . expr ')'   (217)
    typespec  ->  TYPEOF '(' . typename ')'   (218)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  235
    unop	shift  236
    expr	shift  362
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    typed_typespecs	shift  247
    x_typespec	shift  248
    typename	shift  363
    nonempty_type_quals	shift  250
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 195

    datadef  ->  declmods declarator ';' .   (22)

    $default	reduce  22  (datadef)



state 196

    typed_declspecs  ->  declmods typespec reserved_declspecs .   (199)
    reserved_declspecs  ->  reserved_declspecs . typespecqual_reserved   (202)
    reserved_declspecs  ->  reserved_declspecs . SCSPEC   (203)

    SCSPEC	shift  200
    TYPESPEC	shift  84
    TYPE_QUAL	shift  85
    ENUM	shift  34
    AGGR	shift  36
    DYNAMIC	shift  38
    typespecqual_reserved	shift  201
    structsp	shift  88
    aggr	shift  49
    class_head	shift  50

    $default	reduce  199  (typed_declspecs)



state 197

    datadef  ->  declmods notype_initdecls ';' .   (21)

    $default	reduce  21  (datadef)



state 198

    fndef  ->  declmods notype_declarator error .   (36)

    $default	reduce  36  (fndef)



state 199

    fn.def1  ->  declmods notype_declarator maybe_raises .   (39)
    notype_initdcl0  ->  notype_declarator maybe_raises . maybeasm maybe_attribute '=' @7 init   (240)
    notype_initdcl0  ->  notype_declarator maybe_raises . maybeasm maybe_attribute   (241)

    ASM 	shift  320
    maybeasm	shift  321

    ATTRIBUTE	reduce  231  (maybeasm)
    ',' 	reduce  231  (maybeasm)
    '=' 	reduce  231  (maybeasm)
    ';' 	[reduce  231  (maybeasm)]
    $default	reduce  39  (fn.def1)



state 200

    reserved_declspecs  ->  reserved_declspecs SCSPEC .   (203)

    $default	reduce  203  (reserved_declspecs)



state 201

    reserved_declspecs  ->  reserved_declspecs typespecqual_reserved .   (202)

    $default	reduce  202  (reserved_declspecs)



state 202

    string  ->  string STRING .   (184)

    $default	reduce  184  (string)



state 203

    extdef  ->  ASM '(' string ')' . ';'   (10)

    ';' 	shift  364



state 204

    ov_identifiers  ->  ov_identifiers ',' IDENTIFIER .   (18)

    $default	reduce  18  (ov_identifiers)



state 205

    extdef  ->  extern_lang_string '{' extdefs '}' .   (11)

    $default	reduce  11  (extdef)



state 206

    fn.def1  ->  dummy_decl TYPENAME LEFT_RIGHT type_quals . maybe_raises   (42)
    type_quals  ->  type_quals . TYPE_QUAL   (345)

    TYPE_QUAL	shift  277
    RAISES	shift  165
    maybe_raises	shift  365

    $default	reduce  531  (maybe_raises)



state 207

    parmlist  ->  ELLIPSIS .   (514)

    $default	reduce  514  (parmlist)



state 208

    parmlist  ->  TYPENAME_ELLIPSIS .   (515)

    $default	reduce  515  (parmlist)



state 209

    declmods  ->  dummy_decl . TYPE_QUAL   (204)
    declmods  ->  dummy_decl . SCSPEC   (205)
    x_typespec  ->  dummy_decl . TYPESPEC   (222)
    x_typespec  ->  dummy_decl . structsp   (223)
    x_typespec  ->  dummy_decl . TYPENAME   (224)
    x_typespec  ->  dummy_decl . TYPEOF '(' expr ')'   (225)
    x_typespec  ->  dummy_decl . TYPEOF '(' typename ')'   (226)

    TYPENAME	shift  256
    SCSPEC	shift  31
    TYPESPEC	shift  32
    TYPE_QUAL	shift  33
    ENUM	shift  34
    TYPEOF	shift  35
    AGGR	shift  36
    DYNAMIC	shift  38
    structsp	shift  48
    aggr	shift  49
    class_head	shift  50



state 210

    parm  ->  typed_declspecs . dont_see_typename notype_declarator   (521)
    parm  ->  typed_declspecs . dont_see_typename absdcl   (522)

    dont_see_typename	shift  366

    $default	reduce  526  (dont_see_typename)



state 211

    typed_declspecs  ->  declmods . typespec   (197)
    typed_declspecs  ->  declmods . typespec reserved_declspecs   (199)
    declmods  ->  declmods . TYPE_QUAL   (206)
    declmods  ->  declmods . SCSPEC   (207)
    parm  ->  declmods . dont_see_typename notype_declarator   (523)
    parm  ->  declmods . dont_see_typename absdcl   (524)

    TYPENAME	shift  272
    SCSPEC	shift  73
    TYPESPEC	shift  74
    TYPE_QUAL	shift  75
    ENUM	shift  34
    TYPEOF	shift  76
    AGGR	shift  36
    DYNAMIC	shift  38
    typespec	shift  79
    structsp	shift  81
    aggr	shift  49
    class_head	shift  50
    dont_see_typename	shift  367

    $default	reduce  526  (dont_see_typename)



state 212

    fn.def1  ->  dummy_decl TYPENAME '(' parmlist . ')' type_quals maybe_raises   (41)

    ')' 	shift  368



state 213

    parmlist  ->  parms .   (511)
    parmlist  ->  parms . ',' ELLIPSIS   (512)
    parmlist  ->  parms . ELLIPSIS   (513)
    parmlist  ->  parms . TYPENAME_ELLIPSIS   (516)
    parmlist  ->  parms . ':'   (517)
    parms  ->  parms . ',' parm opt.init   (519)
    parms  ->  parms . ',' bad_parm opt.init   (520)

    ELLIPSIS	shift  369
    ',' 	shift  370
    ':' 	shift  371
    TYPENAME_ELLIPSIS	shift  372

    $default	reduce  511  (parmlist)



state 214

    parms  ->  parm . opt.init   (518)

    '=' 	shift  170
    opt.init	shift  373

    $default	reduce  529  (opt.init)



state 215

    structsp  ->  ENUM '{' @9 . enumlist maybecomma_warn '}'   (261)

    IDENTIFIER	shift  97
    TYPENAME	shift  98
    identifier	shift  374
    enumlist	shift  375
    enumerator	shift  376



state 216

    structsp  ->  ENUM identifier '{' . @8 enumlist maybecomma_warn '}'   (259)

    @8  	shift  377

    $default	reduce  258  (@8)



state 217

    primary  ->  IDENTIFIER .   (137)
    scoped_identifier  ->  IDENTIFIER . SCOPE   (399)

    SCOPE	shift  378

    $default	reduce  137  (primary)



state 218

    primary  ->  CONSTANT .   (139)

    $default	reduce  139  (primary)



state 219

    unary_expr  ->  SIZEOF . unary_expr   (98)
    unary_expr  ->  SIZEOF . '(' typename ')'   (99)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  379
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  380
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  381
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 220

    unary_expr  ->  ALIGNOF . unary_expr   (100)
    unary_expr  ->  ALIGNOF . '(' typename ')'   (101)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  382
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  383
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  381
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 221

    delete  ->  DELETE .   (181)

    $default	reduce  181  (delete)



state 222

    new  ->  NEW .   (176)
    new  ->  NEW . '{' nonnull_exprlist '}'   (177)
    new  ->  NEW . DYNAMIC   (178)
    new  ->  NEW . DYNAMIC '(' string ')'   (179)

    DYNAMIC	shift  384
    '{' 	shift  385

    $default	reduce  176  (new)



state 223

    primary  ->  THIS .   (152)

    $default	reduce  152  (primary)



state 224

    primary  ->  SCOPE . IDENTIFIER   (156)
    primary  ->  SCOPE . operator_name   (157)
    new  ->  SCOPE . new   (180)
    delete  ->  SCOPE . delete   (182)

    IDENTIFIER	shift  386
    DELETE	shift  221
    NEW 	shift  222
    OPERATOR	shift  37
    SCOPE	shift  387
    new 	shift  388
    delete	shift  389
    operator_name	shift  390



state 225

    unary_expr  ->  '&' . cast_expr   (95)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  391
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  381
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 226

    unop  ->  '+' .   (82)

    $default	reduce  82  (unop)



state 227

    unop  ->  '-' .   (81)

    $default	reduce  81  (unop)



state 228

    unary_expr  ->  '*' . cast_expr   (94)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  392
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  381
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 229

    unop  ->  PLUSPLUS .   (83)

    $default	reduce  83  (unop)



state 230

    unop  ->  MINUSMINUS .   (84)

    $default	reduce  84  (unop)



state 231

    cast_expr  ->  '(' . typename ')' expr_no_commas   (111)
    cast_expr  ->  '(' . typename ')' '{' initlist maybecomma '}'   (112)
    primary  ->  '(' . expr ')'   (141)
    primary  ->  '(' . error ')'   (142)
    primary  ->  '(' . @3 compstmt ')'   (144)

    error	shift  393
    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  235
    unop	shift  236
    expr	shift  394
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    @3  	shift  395
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    typed_typespecs	shift  247
    x_typespec	shift  248
    typename	shift  396
    nonempty_type_quals	shift  250
    scoped_identifier	shift  251
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)
    '{' 	reduce  143  (@3)



state 232

    scoped_identifier  ->  TYPENAME_SCOPE .   (398)

    $default	reduce  398  (scoped_identifier)



state 233

    unary_expr  ->  '~' . cast_expr   (96)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  397
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  381
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 234

    unop  ->  '!' .   (85)

    $default	reduce  85  (unop)



state 235

    primary  ->  dummy_decl . TYPE_QUAL '(' exprlist ')'   (153)
    x_typespec  ->  dummy_decl . TYPESPEC   (222)
    x_typespec  ->  dummy_decl . structsp   (223)
    x_typespec  ->  dummy_decl . TYPENAME   (224)
    x_typespec  ->  dummy_decl . TYPEOF '(' expr ')'   (225)
    x_typespec  ->  dummy_decl . TYPEOF '(' typename ')'   (226)
    nonempty_type_quals  ->  dummy_decl . TYPE_QUAL   (342)

    TYPENAME	shift  256
    TYPESPEC	shift  32
    TYPE_QUAL	shift  398
    ENUM	shift  34
    TYPEOF	shift  35
    AGGR	shift  36
    DYNAMIC	shift  38
    structsp	shift  48
    aggr	shift  49
    class_head	shift  50



state 236

    unary_expr  ->  unop . cast_expr   (97)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  399
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  381
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 237

    x_typespec  ->  dummy_decl TYPEOF '(' expr . ')'   (225)

    ')' 	shift  400



state 238

    expr  ->  nonnull_exprlist .   (86)
    nonnull_exprlist  ->  nonnull_exprlist . ',' expr_no_commas   (91)
    nonnull_exprlist  ->  nonnull_exprlist . ',' error   (92)

    ',' 	shift  401

    $default	reduce  86  (expr)



state 239

    cast_expr  ->  unary_expr .   (110)

    $default	reduce  110  (cast_expr)



state 240

    expr_no_commas  ->  cast_expr .   (113)

    $default	reduce  113  (expr_no_commas)



state 241

    expr  ->  expr_no_commas .   (87)
    nonnull_exprlist  ->  expr_no_commas .   (90)
    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)

    ASSIGN	shift  402
    '=' 	shift  403
    '?' 	shift  404
    OROR	shift  405
    ANDAND	shift  406
    '|' 	shift  407
    '^' 	shift  408
    '&' 	shift  409
    MIN_MAX	shift  410
    EQCOMPARE	shift  411
    ARITHCOMPARE	shift  412
    LSHIFT	shift  413
    RSHIFT	shift  414
    '+' 	shift  415
    '-' 	shift  416
    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419

    ',' 	reduce  90  (nonnull_exprlist)
    ':' 	reduce  87  (expr)
    ':' 	[reduce  90  (nonnull_exprlist)]
    RANGE	reduce  87  (expr)
    RANGE	[reduce  90  (nonnull_exprlist)]
    ')' 	reduce  87  (expr)
    ')' 	[reduce  90  (nonnull_exprlist)]
    ';' 	reduce  87  (expr)
    ';' 	[reduce  90  (nonnull_exprlist)]
    ']' 	reduce  87  (expr)
    ']' 	[reduce  90  (nonnull_exprlist)]
    $default	reduce  87  (expr)



state 242

    unary_expr  ->  primary .   (93)
    primary  ->  primary . '(' exprlist ')'   (145)
    primary  ->  primary . LEFT_RIGHT   (146)
    primary  ->  primary . '[' expr ']'   (147)
    primary  ->  primary . PLUSPLUS   (150)
    primary  ->  primary . MINUSMINUS   (151)
    object  ->  primary . '.'   (186)
    object  ->  primary . POINTSAT   (187)

    LEFT_RIGHT	shift  420
    PLUSPLUS	shift  421
    MINUSMINUS	shift  422
    POINTSAT	shift  423
    '.' 	shift  424
    '(' 	shift  425
    '[' 	shift  426

    $default	reduce  93  (unary_expr)



state 243

    unary_expr  ->  new . typename   (102)
    unary_expr  ->  new . x_typespec '(' exprlist ')'   (103)
    unary_expr  ->  new . x_typespec LEFT_RIGHT   (104)
    unary_expr  ->  new . typename '=' init   (105)
    unary_expr  ->  new . '(' typename ')'   (106)
    unary_expr  ->  new . TYPENAME_COLON   (107)

    TYPENAME_COLON	shift  427
    '(' 	shift  428
    dummy_decl	shift  131
    typed_typespecs	shift  247
    x_typespec	shift  429
    typename	shift  430
    nonempty_type_quals	shift  250

    $default	reduce  19  (dummy_decl)



state 244

    unary_expr  ->  delete . cast_expr   (108)
    unary_expr  ->  delete . '[' expr ']' cast_expr   (109)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    '[' 	shift  431
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  432
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  381
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 245

    primary  ->  string .   (140)
    string  ->  string . STRING   (184)

    STRING	shift  202

    $default	reduce  140  (primary)



state 246

    expr_no_commas  ->  object . '*' expr_no_commas   (132)
    expr_no_commas  ->  object . '&' expr_no_commas   (133)
    expr_no_commas  ->  object . unop expr_no_commas   (134)
    expr_no_commas  ->  object . '(' typename ')' expr_no_commas   (135)
    expr_no_commas  ->  object . primary_no_id   (136)
    primary  ->  object . identifier_or_opname   (148)
    primary  ->  object . scoped_identifier identifier_or_opname   (149)
    primary  ->  object . identifier_or_opname '(' exprlist ')'   (161)
    primary  ->  object . identifier_or_opname LEFT_RIGHT   (162)
    primary  ->  object . scoped_identifier identifier_or_opname '(' exprlist ')'   (163)
    primary  ->  object . scoped_identifier identifier_or_opname LEFT_RIGHT   (164)

    IDENTIFIER	shift  433
    TYPENAME	shift  434
    OPERATOR	shift  37
    LEFT_RIGHT	shift  435
    SCOPE	shift  436
    '&' 	shift  437
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  438
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  439
    TYPENAME_SCOPE	shift  232
    '~' 	shift  440
    '!' 	shift  234
    identifier_or_opname	shift  441
    wrapper	shift  442
    unop	shift  443
    primary_no_id	shift  444
    scoped_identifier	shift  445
    operator_name	shift  446



state 247

    typename  ->  typed_typespecs . absdcl   (338)

    IDENTIFIER	shift  258
    LEFT_RIGHT	shift  259
    '&' 	shift  260
    '*' 	shift  261
    PAREN_STAR_PAREN	shift  262
    PAREN_X_SCOPE_STAR_PAREN	shift  263
    PAREN_X_SCOPE_REF_PAREN	shift  264
    '(' 	shift  265
    '[' 	shift  266
    TYPENAME_SCOPE	shift  267
    absdcl	shift  447
    absdcl1	shift  269

    $default	reduce  340  (absdcl)



state 248

    primary  ->  x_typespec . '(' exprlist ')'   (154)
    primary  ->  x_typespec . LEFT_RIGHT   (155)
    typed_typespecs  ->  x_typespec .   (208)
    typed_typespecs  ->  x_typespec . reserved_typespecquals   (210)

    TYPESPEC	shift  84
    TYPE_QUAL	shift  85
    ENUM	shift  34
    AGGR	shift  36
    DYNAMIC	shift  38
    LEFT_RIGHT	shift  448
    '(' 	shift  449
    reserved_typespecquals	shift  270
    typespecqual_reserved	shift  271
    structsp	shift  88
    aggr	shift  49
    class_head	shift  50

    $default	reduce  208  (typed_typespecs)



state 249

    x_typespec  ->  dummy_decl TYPEOF '(' typename . ')'   (226)

    ')' 	shift  450



state 250

    typed_typespecs  ->  nonempty_type_quals . typespec   (209)
    typed_typespecs  ->  nonempty_type_quals . typespec reserved_typespecquals   (211)
    typename  ->  nonempty_type_quals . absdcl   (339)
    nonempty_type_quals  ->  nonempty_type_quals . TYPE_QUAL   (343)

    IDENTIFIER	shift  258
    TYPENAME	shift  272
    TYPESPEC	shift  74
    TYPE_QUAL	shift  273
    ENUM	shift  34
    TYPEOF	shift  76
    AGGR	shift  36
    DYNAMIC	shift  38
    LEFT_RIGHT	shift  259
    '&' 	shift  260
    '*' 	shift  261
    PAREN_STAR_PAREN	shift  262
    PAREN_X_SCOPE_STAR_PAREN	shift  263
    PAREN_X_SCOPE_REF_PAREN	shift  264
    '(' 	shift  265
    '[' 	shift  266
    TYPENAME_SCOPE	shift  267
    typespec	shift  274
    structsp	shift  81
    aggr	shift  49
    class_head	shift  50
    absdcl	shift  451
    absdcl1	shift  269

    $default	reduce  340  (absdcl)



state 251

    primary  ->  scoped_identifier . identifier_or_opname   (158)
    primary  ->  scoped_identifier . identifier_or_opname '(' exprlist ')'   (159)
    primary  ->  scoped_identifier . identifier_or_opname LEFT_RIGHT   (160)
    scoped_identifier  ->  scoped_identifier . TYPENAME_SCOPE   (400)

    IDENTIFIER	shift  452
    TYPENAME	shift  434
    OPERATOR	shift  37
    LEFT_RIGHT	shift  435
    TYPENAME_SCOPE	shift  453
    '~' 	shift  440
    identifier_or_opname	shift  454
    wrapper	shift  442
    operator_name	shift  446



state 252

    primary  ->  operator_name .   (138)

    $default	reduce  138  (primary)



state 253

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    operator_name  ->  OPERATOR POINTSAT_LEFT_RIGHT type_quals .   (565)

    TYPE_QUAL	shift  277

    $default	reduce  565  (operator_name)



state 254

    operator_name  ->  OPERATOR '?' ':' .   (562)

    $default	reduce  562  (operator_name)



state 255

    operator_name  ->  OPERATOR '[' ']' .   (567)

    $default	reduce  567  (operator_name)



state 256

    x_typespec  ->  dummy_decl TYPENAME .   (224)

    $default	reduce  224  (x_typespec)



state 257

    nonempty_type_quals  ->  dummy_decl TYPE_QUAL .   (342)

    $default	reduce  342  (nonempty_type_quals)



state 258

    absdcl1  ->  IDENTIFIER . SCOPE type_quals absdcl1   (418)
    absdcl1  ->  IDENTIFIER . SCOPE type_quals   (420)

    SCOPE	shift  455



state 259

    absdcl1  ->  LEFT_RIGHT . type_quals   (414)

    type_quals	shift  456

    $default	reduce  344  (type_quals)



state 260

    absdcl1  ->  '&' . type_quals absdcl1   (407)
    absdcl1  ->  '&' . type_quals   (408)

    type_quals	shift  457

    $default	reduce  344  (type_quals)



state 261

    absdcl1  ->  '*' . type_quals absdcl1   (402)
    absdcl1  ->  '*' . type_quals   (403)

    type_quals	shift  458

    $default	reduce  344  (type_quals)



state 262

    absdcl1  ->  PAREN_STAR_PAREN .   (404)

    $default	reduce  404  (absdcl1)



state 263

    absdcl1  ->  PAREN_X_SCOPE_STAR_PAREN .   (405)

    $default	reduce  405  (absdcl1)



state 264

    absdcl1  ->  PAREN_X_SCOPE_REF_PAREN .   (406)

    $default	reduce  406  (absdcl1)



state 265

    absdcl1  ->  '(' . absdcl1 ')'   (401)
    absdcl1  ->  '(' . parmlist ')' type_quals   (413)

    IDENTIFIER	shift  258
    ELLIPSIS	shift  207
    LEFT_RIGHT	shift  259
    '&' 	shift  260
    '*' 	shift  261
    PAREN_STAR_PAREN	shift  262
    PAREN_X_SCOPE_STAR_PAREN	shift  263
    PAREN_X_SCOPE_REF_PAREN	shift  264
    '(' 	shift  265
    '[' 	shift  266
    TYPENAME_SCOPE	shift  267
    TYPENAME_ELLIPSIS	shift  208
    dummy_decl	shift  209
    typed_declspecs	shift  210
    declmods	shift  211
    x_typespec	shift  19
    absdcl1	shift  459
    parmlist	shift  460
    parms	shift  213
    parm	shift  214

    ')' 	reduce  510  (parmlist)
    $default	reduce  19  (dummy_decl)



state 266

    absdcl1  ->  '[' . nonmomentary_expr ']'   (415)
    absdcl1  ->  '[' . ']'   (416)

    ']' 	shift  461
    nonmomentary_expr	shift  462
    @10 	shift  312

    $default	reduce  346  (@10)



state 267

    absdcl1  ->  TYPENAME_SCOPE . type_quals absdcl1   (417)
    absdcl1  ->  TYPENAME_SCOPE . type_quals   (419)

    type_quals	shift  463

    $default	reduce  344  (type_quals)



state 268

    operator_name  ->  OPERATOR typed_typespecs absdcl .   (570)

    $default	reduce  570  (operator_name)



state 269

    absdcl  ->  absdcl1 .   (341)
    absdcl1  ->  absdcl1 . '(' parmlist ')' type_quals   (409)
    absdcl1  ->  absdcl1 . LEFT_RIGHT type_quals   (410)
    absdcl1  ->  absdcl1 . '[' nonmomentary_expr ']'   (411)
    absdcl1  ->  absdcl1 . '[' ']'   (412)

    LEFT_RIGHT	shift  464
    '(' 	shift  465
    '[' 	shift  466

    $default	reduce  341  (absdcl)



state 270

    typed_typespecs  ->  x_typespec reserved_typespecquals .   (210)
    reserved_typespecquals  ->  reserved_typespecquals . typespecqual_reserved   (213)

    TYPESPEC	shift  84
    TYPE_QUAL	shift  85
    ENUM	shift  34
    AGGR	shift  36
    DYNAMIC	shift  38
    typespecqual_reserved	shift  467
    structsp	shift  88
    aggr	shift  49
    class_head	shift  50

    $default	reduce  210  (typed_typespecs)



state 271

    reserved_typespecquals  ->  typespecqual_reserved .   (212)

    $default	reduce  212  (reserved_typespecquals)



state 272

    typespec  ->  TYPENAME .   (216)

    $default	reduce  216  (typespec)



state 273

    nonempty_type_quals  ->  nonempty_type_quals TYPE_QUAL .   (343)

    $default	reduce  343  (nonempty_type_quals)



state 274

    typed_typespecs  ->  nonempty_type_quals typespec .   (209)
    typed_typespecs  ->  nonempty_type_quals typespec . reserved_typespecquals   (211)

    TYPESPEC	shift  84
    TYPE_QUAL	shift  85
    ENUM	shift  34
    AGGR	shift  36
    DYNAMIC	shift  38
    reserved_typespecquals	shift  468
    typespecqual_reserved	shift  271
    structsp	shift  88
    aggr	shift  49
    class_head	shift  50

    $default	reduce  209  (typed_typespecs)



state 275

    string  ->  string . STRING   (184)
    aggr  ->  DYNAMIC '(' string . ')' AGGR   (272)

    STRING	shift  202
    ')' 	shift  469



state 276

    notype_declarator  ->  LEFT_RIGHT '?' identifier .   (389)

    $default	reduce  389  (notype_declarator)



state 277

    type_quals  ->  type_quals TYPE_QUAL .   (345)

    $default	reduce  345  (type_quals)



state 278

    notype_declarator  ->  notype_declarator . '(' nonnull_exprlist ')' type_quals   (375)
    notype_declarator  ->  notype_declarator . '(' parmlist ')' type_quals   (376)
    notype_declarator  ->  notype_declarator . LEFT_RIGHT type_quals   (377)
    notype_declarator  ->  notype_declarator . '(' error ')' type_quals   (378)
    notype_declarator  ->  notype_declarator . '[' nonmomentary_expr ']'   (382)
    notype_declarator  ->  notype_declarator . '[' ']'   (383)
    notype_declarator  ->  SCOPE see_typename notype_declarator .   (397)


    $default	reduce  397  (notype_declarator)



state 279

    notype_declarator  ->  notype_declarator . '(' nonnull_exprlist ')' type_quals   (375)
    notype_declarator  ->  notype_declarator . '(' parmlist ')' type_quals   (376)
    notype_declarator  ->  notype_declarator . LEFT_RIGHT type_quals   (377)
    notype_declarator  ->  notype_declarator . '(' error ')' type_quals   (378)
    notype_declarator  ->  '&' type_quals notype_declarator .   (381)
    notype_declarator  ->  notype_declarator . '[' nonmomentary_expr ']'   (382)
    notype_declarator  ->  notype_declarator . '[' ']'   (383)

    LEFT_RIGHT	shift  162
    '(' 	shift  163
    '[' 	shift  164

    $default	reduce  381  (notype_declarator)



state 280

    notype_declarator  ->  notype_declarator . '(' nonnull_exprlist ')' type_quals   (375)
    notype_declarator  ->  notype_declarator . '(' parmlist ')' type_quals   (376)
    notype_declarator  ->  notype_declarator . LEFT_RIGHT type_quals   (377)
    notype_declarator  ->  notype_declarator . '(' error ')' type_quals   (378)
    notype_declarator  ->  '*' type_quals notype_declarator .   (380)
    notype_declarator  ->  notype_declarator . '[' nonmomentary_expr ']'   (382)
    notype_declarator  ->  notype_declarator . '[' ']'   (383)

    LEFT_RIGHT	shift  162
    '(' 	shift  163
    '[' 	shift  164

    $default	reduce  380  (notype_declarator)



state 281

    notype_declarator  ->  '(' notype_declarator ')' .   (379)

    $default	reduce  379  (notype_declarator)



state 282

    notype_declarator  ->  notype_declarator . '(' nonnull_exprlist ')' type_quals   (375)
    notype_declarator  ->  notype_declarator . '(' parmlist ')' type_quals   (376)
    notype_declarator  ->  notype_declarator . LEFT_RIGHT type_quals   (377)
    notype_declarator  ->  notype_declarator . '(' error ')' type_quals   (378)
    notype_declarator  ->  notype_declarator . '[' nonmomentary_expr ']'   (382)
    notype_declarator  ->  notype_declarator . '[' ']'   (383)
    notype_declarator  ->  TYPENAME_SCOPE type_quals notype_declarator .   (391)


    $default	reduce  391  (notype_declarator)



state 283

    notype_declarator  ->  TYPENAME_SCOPE see_typename TYPENAME . '(' nonnull_exprlist ')' type_quals   (393)
    notype_declarator  ->  TYPENAME_SCOPE see_typename TYPENAME . '(' parmlist ')' type_quals   (394)
    notype_declarator  ->  TYPENAME_SCOPE see_typename TYPENAME . LEFT_RIGHT type_quals   (395)
    notype_declarator  ->  TYPENAME_SCOPE see_typename TYPENAME . '(' error ')' type_quals   (396)

    LEFT_RIGHT	shift  470
    '(' 	shift  471



state 284

    notype_declarator  ->  '~' LEFT_RIGHT identifier .   (390)

    $default	reduce  390  (notype_declarator)



state 285

    initdcl  ->  declarator . maybe_raises maybeasm maybe_attribute '=' @6 init   (237)
    initdcl  ->  declarator . maybe_raises maybeasm maybe_attribute   (238)

    RAISES	shift  165
    maybe_raises	shift  472

    $default	reduce  531  (maybe_raises)



state 286

    notype_initdecls  ->  notype_initdecls ',' initdcl .   (230)

    $default	reduce  230  (notype_initdecls)



state 287

    class_head  ->  aggr IDENTIFIER ':' . base_class_list   (279)

    IDENTIFIER	shift  97
    TYPENAME	shift  98
    SCSPEC	shift  288
    PRIVATE	shift  289
    PUBLIC	shift  290
    identifier	shift  291
    base_class_list	shift  473
    base_class_visibility_list	shift  293



state 288

    base_class_visibility_list  ->  SCSPEC .   (288)

    $default	reduce  288  (base_class_visibility_list)



state 289

    base_class_visibility_list  ->  PRIVATE .   (287)

    $default	reduce  287  (base_class_visibility_list)



state 290

    base_class_visibility_list  ->  PUBLIC .   (286)

    $default	reduce  286  (base_class_visibility_list)



state 291

    base_class_list  ->  identifier .   (282)

    $default	reduce  282  (base_class_list)



state 292

    class_head  ->  aggr TYPENAME_COLON base_class_list .   (281)
    base_class_list  ->  base_class_list . ',' identifier   (284)
    base_class_list  ->  base_class_list . ',' base_class_visibility_list identifier   (285)

    ',' 	shift  474

    $default	reduce  281  (class_head)



state 293

    base_class_list  ->  base_class_visibility_list . identifier   (283)
    base_class_visibility_list  ->  base_class_visibility_list . PUBLIC   (289)
    base_class_visibility_list  ->  base_class_visibility_list . PRIVATE   (290)
    base_class_visibility_list  ->  base_class_visibility_list . SCSPEC   (291)

    IDENTIFIER	shift  97
    TYPENAME	shift  98
    SCSPEC	shift  475
    PRIVATE	shift  476
    PUBLIC	shift  477
    identifier	shift  478



state 294

    component_decl  ->  error .   (318)

    $default	reduce  318  (component_decl)



state 295

    component_decl  ->  ':' . expr_no_commas ';'   (316)
    component_decl  ->  ':' . expr_no_commas '}'   (317)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  479
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 296

    fn.def2  ->  dummy_decl . notype_declarator maybe_raises   (50)
    declmods  ->  dummy_decl . TYPE_QUAL   (204)
    declmods  ->  dummy_decl . SCSPEC   (205)
    x_typespec  ->  dummy_decl . TYPESPEC   (222)
    x_typespec  ->  dummy_decl . structsp   (223)
    x_typespec  ->  dummy_decl . TYPENAME   (224)
    x_typespec  ->  dummy_decl . TYPEOF '(' expr ')'   (225)
    x_typespec  ->  dummy_decl . TYPEOF '(' typename ')'   (226)
    component_decl  ->  dummy_decl . notype_declarator maybe_raises ';'   (321)
    component_decl  ->  dummy_decl . notype_declarator maybe_raises '}'   (322)

    IDENTIFIER	shift  29
    TYPENAME	shift  256
    SCSPEC	shift  31
    TYPESPEC	shift  32
    TYPE_QUAL	shift  33
    ENUM	shift  34
    TYPEOF	shift  35
    AGGR	shift  36
    OPERATOR	shift  37
    DYNAMIC	shift  38
    LEFT_RIGHT	shift  39
    SCOPE	shift  40
    '&' 	shift  41
    '*' 	shift  42
    '(' 	shift  43
    TYPENAME_SCOPE	shift  44
    '~' 	shift  45
    structsp	shift  48
    aggr	shift  49
    class_head	shift  50
    notype_declarator	shift  480
    operator_name	shift  52



state 297

    component_decl  ->  fn.def2 . ':'   (319)
    component_decl  ->  fn.def2 . '{'   (320)

    '{' 	shift  481
    ':' 	shift  482



state 298

    fn.def2  ->  typed_declspecs . '(' parmlist ')' type_quals maybe_raises   (44)
    fn.def2  ->  typed_declspecs . LEFT_RIGHT type_quals maybe_raises   (45)
    fn.def2  ->  typed_declspecs . declarator maybe_raises   (46)
    component_decl  ->  typed_declspecs . components ';'   (304)
    component_decl  ->  typed_declspecs . '(' parmlist ')' ';'   (305)
    component_decl  ->  typed_declspecs . '(' parmlist ')' '}'   (306)
    component_decl  ->  typed_declspecs . LEFT_RIGHT ';'   (307)
    component_decl  ->  typed_declspecs . LEFT_RIGHT '}'   (308)

    IDENTIFIER	shift  483
    TYPENAME	shift  59
    OPERATOR	shift  37
    LEFT_RIGHT	shift  484
    SCOPE	shift  40
    TYPENAME_COLON	shift  485
    ':' 	shift  486
    '&' 	shift  60
    '*' 	shift  61
    PAREN_STAR_PAREN	shift  62
    PAREN_X_SCOPE_STAR_PAREN	shift  63
    PAREN_X_SCOPE_REF_PAREN	shift  64
    '(' 	shift  487
    TYPENAME_SCOPE	shift  44
    '~' 	shift  45
    declarator	shift  488
    components	shift  489
    component_declarator0	shift  490
    after_type_declarator	shift  70
    notype_declarator	shift  71
    operator_name	shift  52

    $default	reduce  323  (components)



state 299

    fn.def2  ->  declmods . '(' parmlist ')' type_quals maybe_raises   (47)
    fn.def2  ->  declmods . LEFT_RIGHT type_quals maybe_raises   (48)
    fn.def2  ->  declmods . declarator maybe_raises   (49)
    typed_declspecs  ->  declmods . typespec   (197)
    typed_declspecs  ->  declmods . typespec reserved_declspecs   (199)
    declmods  ->  declmods . TYPE_QUAL   (206)
    declmods  ->  declmods . SCSPEC   (207)
    component_decl  ->  declmods . components ';'   (309)
    component_decl  ->  declmods . declarator ';'   (310)
    component_decl  ->  declmods . components '}'   (311)
    component_decl  ->  declmods . '(' parmlist ')' ';'   (312)
    component_decl  ->  declmods . '(' parmlist ')' '}'   (313)
    component_decl  ->  declmods . LEFT_RIGHT ';'   (314)
    component_decl  ->  declmods . LEFT_RIGHT '}'   (315)

    IDENTIFIER	shift  483
    TYPENAME	shift  72
    SCSPEC	shift  73
    TYPESPEC	shift  74
    TYPE_QUAL	shift  75
    ENUM	shift  34
    TYPEOF	shift  76
    AGGR	shift  36
    OPERATOR	shift  37
    DYNAMIC	shift  38
    LEFT_RIGHT	shift  491
    SCOPE	shift  40
    TYPENAME_COLON	shift  485
    ':' 	shift  486
    '&' 	shift  60
    '*' 	shift  61
    PAREN_STAR_PAREN	shift  62
    PAREN_X_SCOPE_STAR_PAREN	shift  63
    PAREN_X_SCOPE_REF_PAREN	shift  64
    '(' 	shift  492
    TYPENAME_SCOPE	shift  44
    '~' 	shift  45
    declarator	shift  493
    typespec	shift  79
    structsp	shift  81
    aggr	shift  49
    class_head	shift  50
    components	shift  494
    component_declarator0	shift  490
    after_type_declarator	shift  70
    notype_declarator	shift  71
    operator_name	shift  52

    $default	reduce  323  (components)



state 300

    structsp  ->  class_head LC opt.component_decl_list . '}'   (263)
    structsp  ->  class_head LC opt.component_decl_list . '}' ';'   (264)
    opt.component_decl_list  ->  opt.component_decl_list . PUBLIC ':' component_decl_list   (295)
    opt.component_decl_list  ->  opt.component_decl_list . PRIVATE ':' component_decl_list   (296)
    opt.component_decl_list  ->  opt.component_decl_list . PROTECTED ':' component_decl_list   (297)
    opt.component_decl_list  ->  opt.component_decl_list . PUBLIC ':'   (298)
    opt.component_decl_list  ->  opt.component_decl_list . PRIVATE ':'   (299)
    opt.component_decl_list  ->  opt.component_decl_list . PROTECTED ':'   (300)

    PRIVATE	shift  495
    PUBLIC	shift  496
    PROTECTED	shift  497
    '}' 	shift  498



state 301

    opt.component_decl_list  ->  component_decl_list .   (294)
    component_decl_list  ->  component_decl_list . component_decl   (302)
    component_decl_list  ->  component_decl_list . ';'   (303)

    error	shift  294
    ':' 	shift  295
    ';' 	shift  499
    dummy_decl	shift  296
    fn.def2	shift  297
    typed_declspecs	shift  298
    declmods	shift  299
    x_typespec	shift  19
    component_decl	shift  500

    IDENTIFIER	reduce  19  (dummy_decl)
    TYPENAME	reduce  19  (dummy_decl)
    SCSPEC	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    PRIVATE	[reduce  294  (opt.component_decl_list)]
    PUBLIC	reduce  294  (opt.component_decl_list)
    PROTECTED	reduce  294  (opt.component_decl_list)
    OPERATOR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)
    LEFT_RIGHT	reduce  19  (dummy_decl)
    SCOPE	reduce  19  (dummy_decl)
    '&' 	reduce  19  (dummy_decl)
    '*' 	reduce  19  (dummy_decl)
    '(' 	reduce  19  (dummy_decl)
    TYPENAME_SCOPE	reduce  19  (dummy_decl)
    '}' 	reduce  294  (opt.component_decl_list)
    '~' 	reduce  19  (dummy_decl)



state 302

    component_decl_list  ->  component_decl .   (301)

    $default	reduce  301  (component_decl_list)



state 303

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    notype_declarator  ->  notype_declarator LEFT_RIGHT type_quals .   (377)

    TYPE_QUAL	shift  277

    $default	reduce  377  (notype_declarator)



state 304

    notype_declarator  ->  notype_declarator '(' error . ')' type_quals   (378)

    ')' 	shift  501



state 305

    primary  ->  dummy_decl . TYPE_QUAL '(' exprlist ')'   (153)
    declmods  ->  dummy_decl . TYPE_QUAL   (204)
    declmods  ->  dummy_decl . SCSPEC   (205)
    x_typespec  ->  dummy_decl . TYPESPEC   (222)
    x_typespec  ->  dummy_decl . structsp   (223)
    x_typespec  ->  dummy_decl . TYPENAME   (224)
    x_typespec  ->  dummy_decl . TYPEOF '(' expr ')'   (225)
    x_typespec  ->  dummy_decl . TYPEOF '(' typename ')'   (226)

    TYPENAME	shift  256
    SCSPEC	shift  31
    TYPESPEC	shift  32
    TYPE_QUAL	shift  502
    ENUM	shift  34
    TYPEOF	shift  35
    AGGR	shift  36
    DYNAMIC	shift  38
    structsp	shift  48
    aggr	shift  49
    class_head	shift  50



state 306

    nonnull_exprlist  ->  nonnull_exprlist . ',' expr_no_commas   (91)
    nonnull_exprlist  ->  nonnull_exprlist . ',' error   (92)
    notype_declarator  ->  notype_declarator '(' nonnull_exprlist . ')' type_quals   (375)

    ',' 	shift  401
    ')' 	shift  503



state 307

    nonnull_exprlist  ->  expr_no_commas .   (90)
    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)

    ASSIGN	shift  402
    '=' 	shift  403
    '?' 	shift  404
    OROR	shift  405
    ANDAND	shift  406
    '|' 	shift  407
    '^' 	shift  408
    '&' 	shift  409
    MIN_MAX	shift  410
    EQCOMPARE	shift  411
    ARITHCOMPARE	shift  412
    LSHIFT	shift  413
    RSHIFT	shift  414
    '+' 	shift  415
    '-' 	shift  416
    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419

    $default	reduce  90  (nonnull_exprlist)



state 308

    primary  ->  x_typespec . '(' exprlist ')'   (154)
    primary  ->  x_typespec . LEFT_RIGHT   (155)
    typed_declspecs  ->  x_typespec .   (196)
    typed_declspecs  ->  x_typespec . reserved_declspecs   (198)

    SCSPEC	shift  83
    TYPESPEC	shift  84
    TYPE_QUAL	shift  85
    ENUM	shift  34
    AGGR	shift  36
    DYNAMIC	shift  38
    LEFT_RIGHT	shift  448
    '(' 	shift  449
    reserved_declspecs	shift  86
    typespecqual_reserved	shift  87
    structsp	shift  88
    aggr	shift  49
    class_head	shift  50

    LEFT_RIGHT	[reduce  196  (typed_declspecs)]
    '(' 	[reduce  196  (typed_declspecs)]
    $default	reduce  196  (typed_declspecs)



state 309

    notype_declarator  ->  notype_declarator '(' parmlist . ')' type_quals   (376)

    ')' 	shift  504



state 310

    notype_declarator  ->  notype_declarator '[' ']' .   (383)

    $default	reduce  383  (notype_declarator)



state 311

    notype_declarator  ->  notype_declarator '[' nonmomentary_expr . ']'   (382)

    ']' 	shift  505



state 312

    nonmomentary_expr  ->  @10 . expr   (347)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    expr	shift  506
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 313

    scoped_identifier  ->  IDENTIFIER . SCOPE   (399)
    raise_identifier  ->  IDENTIFIER .   (534)

    SCOPE	shift  378

    $default	reduce  534  (raise_identifier)



state 314

    raise_identifier  ->  TYPENAME .   (535)

    $default	reduce  535  (raise_identifier)



state 315

    raise_identifier  ->  SCOPE . IDENTIFIER   (536)
    raise_identifier  ->  SCOPE . TYPENAME   (537)

    IDENTIFIER	shift  507
    TYPENAME	shift  508



state 316

    raise_identifier  ->  ALL .   (533)

    $default	reduce  533  (raise_identifier)



state 317

    scoped_identifier  ->  scoped_identifier . TYPENAME_SCOPE   (400)
    raise_identifier  ->  scoped_identifier . IDENTIFIER   (538)
    raise_identifier  ->  scoped_identifier . TYPENAME   (539)

    IDENTIFIER	shift  509
    TYPENAME	shift  510
    TYPENAME_SCOPE	shift  453



state 318

    raise_identifiers  ->  raise_identifier .   (540)

    $default	reduce  540  (raise_identifiers)



state 319

    maybe_raises  ->  RAISES raise_identifiers .   (532)
    raise_identifiers  ->  raise_identifiers . ',' raise_identifier   (541)

    ',' 	shift  511

    $default	reduce  532  (maybe_raises)



state 320

    maybeasm  ->  ASM . '(' string ')'   (232)

    '(' 	shift  512



state 321

    notype_initdcl0  ->  notype_declarator maybe_raises maybeasm . maybe_attribute '=' @7 init   (240)
    notype_initdcl0  ->  notype_declarator maybe_raises maybeasm . maybe_attribute   (241)

    ATTRIBUTE	shift  513
    maybe_attribute	shift  514

    $default	reduce  242  (maybe_attribute)



state 322

    identifier  ->  IDENTIFIER .   (67)
    scoped_identifier  ->  IDENTIFIER . SCOPE   (399)

    SCOPE	shift  378

    $default	reduce  67  (identifier)



state 323

    member_init  ->  LEFT_RIGHT .   (62)

    $default	reduce  62  (member_init)



state 324

    member_init  ->  '(' . exprlist ')'   (61)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    exprlist	shift  515
    nonnull_exprlist	shift  336
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  307
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    ')' 	reduce  88  (exprlist)
    $default	reduce  19  (dummy_decl)



state 325

    base_init  ->  ':' .set_base_init member_init_list .   (55)
    member_init_list  ->  member_init_list . ',' member_init   (59)
    member_init_list  ->  member_init_list . error   (60)

    error	shift  516
    ',' 	shift  517

    error	[reduce  55  (base_init)]
    '{' 	reduce  55  (base_init)



state 326

    member_init_list  ->  member_init .   (58)

    $default	reduce  58  (member_init_list)



state 327

    member_init  ->  identifier . '(' exprlist ')'   (63)
    member_init  ->  identifier . LEFT_RIGHT   (64)

    LEFT_RIGHT	shift  518
    '(' 	shift  519



state 328

    member_init  ->  scoped_identifier . identifier '(' exprlist ')'   (65)
    member_init  ->  scoped_identifier . identifier LEFT_RIGHT   (66)
    scoped_identifier  ->  scoped_identifier . TYPENAME_SCOPE   (400)

    IDENTIFIER	shift  97
    TYPENAME	shift  98
    TYPENAME_SCOPE	shift  453
    identifier	shift  520



state 329

    init  ->  error .   (255)

    $default	reduce  255  (init)



state 330

    init  ->  '{' . '}'   (252)
    init  ->  '{' . initlist '}'   (253)
    init  ->  '{' . initlist ',' '}'   (254)

    error	shift  329
    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '{' 	shift  330
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '}' 	shift  521
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  332
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    init	shift  522
    initlist	shift  523
    scoped_identifier	shift  251
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)



state 331

    primary  ->  dummy_decl . TYPE_QUAL '(' exprlist ')'   (153)
    x_typespec  ->  dummy_decl . TYPESPEC   (222)
    x_typespec  ->  dummy_decl . structsp   (223)
    x_typespec  ->  dummy_decl . TYPENAME   (224)
    x_typespec  ->  dummy_decl . TYPEOF '(' expr ')'   (225)
    x_typespec  ->  dummy_decl . TYPEOF '(' typename ')'   (226)

    TYPENAME	shift  256
    TYPESPEC	shift  32
    TYPE_QUAL	shift  524
    ENUM	shift  34
    TYPEOF	shift  35
    AGGR	shift  36
    DYNAMIC	shift  38
    structsp	shift  48
    aggr	shift  49
    class_head	shift  50



state 332

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)
    init  ->  expr_no_commas .   (251)

    ASSIGN	shift  402
    '=' 	shift  403
    '?' 	shift  404
    OROR	shift  405
    ANDAND	shift  406
    '|' 	shift  407
    '^' 	shift  408
    '&' 	shift  409
    MIN_MAX	shift  410
    EQCOMPARE	shift  411
    ARITHCOMPARE	shift  412
    LSHIFT	shift  413
    RSHIFT	shift  414
    '+' 	shift  415
    '-' 	shift  416
    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419

    $default	reduce  251  (init)



state 333

    primary  ->  x_typespec . '(' exprlist ')'   (154)
    primary  ->  x_typespec . LEFT_RIGHT   (155)

    LEFT_RIGHT	shift  448
    '(' 	shift  449



state 334

    opt.init  ->  '=' init .   (530)

    $default	reduce  530  (opt.init)



state 335

    return_init  ->  return_id '(' exprlist . ')'   (53)

    ')' 	shift  525



state 336

    exprlist  ->  nonnull_exprlist .   (89)
    nonnull_exprlist  ->  nonnull_exprlist . ',' expr_no_commas   (91)
    nonnull_exprlist  ->  nonnull_exprlist . ',' error   (92)

    ',' 	shift  401

    $default	reduce  89  (exprlist)



state 337

    fndef  ->  fn.def1 return_init ';' nodecls . compstmt_or_error   (33)

    error	shift  176
    '{' 	shift  177
    compstmt_or_error	shift  526
    compstmt	shift  179



state 338

    fndef  ->  fn.def1 return_init base_init compstmt_or_error .   (31)

    $default	reduce  31  (fndef)



state 339

    fndef  ->  fn.def1 return_init nodecls compstmt_or_error .   (34)

    $default	reduce  34  (fndef)



state 340

    compstmt_or_error  ->  error compstmt .   (427)

    $default	reduce  427  (compstmt_or_error)



state 341

    compstmt  ->  '{' '}' .   (428)

    $default	reduce  428  (compstmt)



state 342

    compstmt  ->  '{' .pushlevel . stmts '}'   (429)
    compstmt  ->  '{' .pushlevel . error '}'   (430)

    error	shift  527
    IDENTIFIER	shift  528
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    IF  	shift  529
    WHILE	shift  530
    DO  	shift  531
    FOR 	shift  532
    SWITCH	shift  533
    CASE	shift  534
    DEFAULT	shift  535
    BREAK	shift  536
    CONTINUE	shift  537
    RETURN	shift  538
    GOTO	shift  539
    ASM 	shift  540
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    TYPENAME_COLON	shift  541
    '{' 	shift  177
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    RAISE	shift  542
    TRY 	shift  543
    TYPENAME_SCOPE	shift  232
    ';' 	shift  544
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  305
    unop	shift  236
    expr	shift  545
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    decl	shift  546
    typed_declspecs	shift  547
    declmods	shift  548
    x_typespec	shift  308
    scoped_identifier	shift  251
    stmts	shift  549
    compstmt	shift  550
    simple_if	shift  551
    stmt	shift  552
    try 	shift  553
    try_head	shift  554
    forhead.1	shift  555
    forhead.2	shift  556
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    SCSPEC	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)



state 343

    after_type_declarator  ->  after_type_declarator . '(' nonnull_exprlist ')' type_quals   (348)
    after_type_declarator  ->  after_type_declarator . '(' parmlist ')' type_quals   (349)
    after_type_declarator  ->  after_type_declarator . LEFT_RIGHT type_quals   (350)
    after_type_declarator  ->  after_type_declarator . '(' error ')' type_quals   (351)
    after_type_declarator  ->  after_type_declarator . '[' nonmomentary_expr ']'   (352)
    after_type_declarator  ->  after_type_declarator . '[' ']'   (353)
    after_type_declarator  ->  '&' type_quals after_type_declarator .   (361)

    LEFT_RIGHT	shift  191
    '(' 	shift  192
    '[' 	shift  193

    $default	reduce  361  (after_type_declarator)



state 344

    after_type_declarator  ->  after_type_declarator . '(' nonnull_exprlist ')' type_quals   (348)
    after_type_declarator  ->  after_type_declarator . '(' parmlist ')' type_quals   (349)
    after_type_declarator  ->  after_type_declarator . LEFT_RIGHT type_quals   (350)
    after_type_declarator  ->  after_type_declarator . '(' error ')' type_quals   (351)
    after_type_declarator  ->  after_type_declarator . '[' nonmomentary_expr ']'   (352)
    after_type_declarator  ->  after_type_declarator . '[' ']'   (353)
    after_type_declarator  ->  '*' type_quals after_type_declarator .   (360)

    LEFT_RIGHT	shift  191
    '(' 	shift  192
    '[' 	shift  193

    $default	reduce  360  (after_type_declarator)



state 345

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    after_type_declarator  ->  '(' '&' type_quals . after_type_declarator ')'   (359)
    notype_declarator  ->  '&' type_quals . notype_declarator   (381)

    IDENTIFIER	shift  29
    TYPENAME	shift  59
    TYPE_QUAL	shift  277
    OPERATOR	shift  37
    LEFT_RIGHT	shift  39
    SCOPE	shift  40
    '&' 	shift  60
    '*' 	shift  61
    PAREN_STAR_PAREN	shift  62
    PAREN_X_SCOPE_STAR_PAREN	shift  63
    PAREN_X_SCOPE_REF_PAREN	shift  64
    '(' 	shift  65
    TYPENAME_SCOPE	shift  44
    '~' 	shift  45
    after_type_declarator	shift  557
    notype_declarator	shift  279
    operator_name	shift  52



state 346

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    after_type_declarator  ->  '(' '*' type_quals . after_type_declarator ')'   (355)
    notype_declarator  ->  '*' type_quals . notype_declarator   (380)

    IDENTIFIER	shift  29
    TYPENAME	shift  59
    TYPE_QUAL	shift  277
    OPERATOR	shift  37
    LEFT_RIGHT	shift  39
    SCOPE	shift  40
    '&' 	shift  60
    '*' 	shift  61
    PAREN_STAR_PAREN	shift  62
    PAREN_X_SCOPE_STAR_PAREN	shift  63
    PAREN_X_SCOPE_REF_PAREN	shift  64
    '(' 	shift  65
    TYPENAME_SCOPE	shift  44
    '~' 	shift  45
    after_type_declarator	shift  558
    notype_declarator	shift  280
    operator_name	shift  52



state 347

    after_type_declarator_no_typename  ->  '&' . type_quals after_type_declarator   (374)

    type_quals	shift  559

    $default	reduce  344  (type_quals)



state 348

    after_type_declarator_no_typename  ->  '*' . type_quals after_type_declarator   (373)

    type_quals	shift  560

    $default	reduce  344  (type_quals)



state 349

    after_type_declarator_no_typename  ->  PAREN_STAR_PAREN .   (370)

    $default	reduce  370  (after_type_declarator_no_typename)



state 350

    after_type_declarator_no_typename  ->  PAREN_X_SCOPE_STAR_PAREN .   (371)

    $default	reduce  371  (after_type_declarator_no_typename)



state 351

    after_type_declarator_no_typename  ->  PAREN_X_SCOPE_REF_PAREN .   (372)

    $default	reduce  372  (after_type_declarator_no_typename)



state 352

    after_type_declarator_no_typename  ->  '(' . dummy_decl after_type_declarator_no_typename ')'   (369)

    dummy_decl	shift  561

    $default	reduce  19  (dummy_decl)



state 353

    after_type_declarator  ->  '(' dummy_decl after_type_declarator_no_typename . ')'   (354)
    after_type_declarator_no_typename  ->  after_type_declarator_no_typename . '(' nonnull_exprlist ')' type_quals   (363)
    after_type_declarator_no_typename  ->  after_type_declarator_no_typename . '(' parmlist ')' type_quals   (364)
    after_type_declarator_no_typename  ->  after_type_declarator_no_typename . LEFT_RIGHT type_quals   (365)
    after_type_declarator_no_typename  ->  after_type_declarator_no_typename . '(' error ')' type_quals   (366)
    after_type_declarator_no_typename  ->  after_type_declarator_no_typename . '[' nonmomentary_expr ']'   (367)
    after_type_declarator_no_typename  ->  after_type_declarator_no_typename . '[' ']'   (368)

    LEFT_RIGHT	shift  562
    '(' 	shift  563
    '[' 	shift  564
    ')' 	shift  565



state 354

    initdcl0  ->  declarator maybe_raises maybeasm . maybe_attribute '=' @5 init   (234)
    initdcl0  ->  declarator maybe_raises maybeasm . maybe_attribute   (235)

    ATTRIBUTE	shift  513
    maybe_attribute	shift  566

    $default	reduce  242  (maybe_attribute)



state 355

    initdecls  ->  initdecls ',' initdcl .   (228)

    $default	reduce  228  (initdecls)



state 356

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    after_type_declarator  ->  after_type_declarator LEFT_RIGHT type_quals .   (350)

    TYPE_QUAL	shift  277

    $default	reduce  350  (after_type_declarator)



state 357

    after_type_declarator  ->  after_type_declarator '(' error . ')' type_quals   (351)

    ')' 	shift  567



state 358

    nonnull_exprlist  ->  nonnull_exprlist . ',' expr_no_commas   (91)
    nonnull_exprlist  ->  nonnull_exprlist . ',' error   (92)
    after_type_declarator  ->  after_type_declarator '(' nonnull_exprlist . ')' type_quals   (348)

    ',' 	shift  401
    ')' 	shift  568



state 359

    after_type_declarator  ->  after_type_declarator '(' parmlist . ')' type_quals   (349)

    ')' 	shift  569



state 360

    after_type_declarator  ->  after_type_declarator '[' ']' .   (353)

    $default	reduce  353  (after_type_declarator)



state 361

    after_type_declarator  ->  after_type_declarator '[' nonmomentary_expr . ']'   (352)

    ']' 	shift  570



state 362

    typespec  ->  TYPEOF '(' expr . ')'   (217)

    ')' 	shift  571



state 363

    typespec  ->  TYPEOF '(' typename . ')'   (218)

    ')' 	shift  572



state 364

    extdef  ->  ASM '(' string ')' ';' .   (10)

    $default	reduce  10  (extdef)



state 365

    fn.def1  ->  dummy_decl TYPENAME LEFT_RIGHT type_quals maybe_raises .   (42)

    $default	reduce  42  (fn.def1)



state 366

    parm  ->  typed_declspecs dont_see_typename . notype_declarator   (521)
    parm  ->  typed_declspecs dont_see_typename . absdcl   (522)

    IDENTIFIER	shift  573
    OPERATOR	shift  37
    LEFT_RIGHT	shift  574
    SCOPE	shift  40
    '&' 	shift  575
    '*' 	shift  576
    PAREN_STAR_PAREN	shift  262
    PAREN_X_SCOPE_STAR_PAREN	shift  263
    PAREN_X_SCOPE_REF_PAREN	shift  264
    '(' 	shift  577
    '[' 	shift  266
    TYPENAME_SCOPE	shift  578
    '~' 	shift  45
    absdcl	shift  579
    notype_declarator	shift  580
    absdcl1	shift  269
    operator_name	shift  52

    $default	reduce  340  (absdcl)



state 367

    parm  ->  declmods dont_see_typename . notype_declarator   (523)
    parm  ->  declmods dont_see_typename . absdcl   (524)

    IDENTIFIER	shift  573
    OPERATOR	shift  37
    LEFT_RIGHT	shift  574
    SCOPE	shift  40
    '&' 	shift  575
    '*' 	shift  576
    PAREN_STAR_PAREN	shift  262
    PAREN_X_SCOPE_STAR_PAREN	shift  263
    PAREN_X_SCOPE_REF_PAREN	shift  264
    '(' 	shift  577
    '[' 	shift  266
    TYPENAME_SCOPE	shift  578
    '~' 	shift  45
    absdcl	shift  581
    notype_declarator	shift  582
    absdcl1	shift  269
    operator_name	shift  52

    $default	reduce  340  (absdcl)



state 368

    fn.def1  ->  dummy_decl TYPENAME '(' parmlist ')' . type_quals maybe_raises   (41)

    type_quals	shift  583

    $default	reduce  344  (type_quals)



state 369

    parmlist  ->  parms ELLIPSIS .   (513)

    $default	reduce  513  (parmlist)



state 370

    parmlist  ->  parms ',' . ELLIPSIS   (512)
    parms  ->  parms ',' . parm opt.init   (519)
    parms  ->  parms ',' . bad_parm opt.init   (520)

    ELLIPSIS	shift  584
    dummy_decl	shift  585
    typed_declspecs	shift  210
    declmods	shift  211
    x_typespec	shift  19
    parm	shift  586
    bad_parm	shift  587

    ELLIPSIS	[reduce  19  (dummy_decl)]
    $default	reduce  19  (dummy_decl)



state 371

    parmlist  ->  parms ':' .   (517)

    $default	reduce  517  (parmlist)



state 372

    parmlist  ->  parms TYPENAME_ELLIPSIS .   (516)

    $default	reduce  516  (parmlist)



state 373

    parms  ->  parm opt.init .   (518)

    $default	reduce  518  (parms)



state 374

    enumerator  ->  identifier .   (336)
    enumerator  ->  identifier . '=' expr_no_commas   (337)

    '=' 	shift  588

    $default	reduce  336  (enumerator)



state 375

    structsp  ->  ENUM '{' @9 enumlist . maybecomma_warn '}'   (261)
    enumlist  ->  enumlist . ',' enumerator   (335)

    ',' 	shift  589
    maybecomma_warn	shift  590

    $default	reduce  268  (maybecomma_warn)



state 376

    enumlist  ->  enumerator .   (334)

    $default	reduce  334  (enumlist)



state 377

    structsp  ->  ENUM identifier '{' @8 . enumlist maybecomma_warn '}'   (259)

    IDENTIFIER	shift  97
    TYPENAME	shift  98
    identifier	shift  374
    enumlist	shift  591
    enumerator	shift  376



state 378

    scoped_identifier  ->  IDENTIFIER SCOPE .   (399)

    $default	reduce  399  (scoped_identifier)



state 379

    unary_expr  ->  SIZEOF '(' . typename ')'   (99)
    primary  ->  '(' . expr ')'   (141)
    primary  ->  '(' . error ')'   (142)
    primary  ->  '(' . @3 compstmt ')'   (144)

    error	shift  393
    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  235
    unop	shift  236
    expr	shift  394
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    @3  	shift  395
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    typed_typespecs	shift  247
    x_typespec	shift  248
    typename	shift  592
    nonempty_type_quals	shift  250
    scoped_identifier	shift  251
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)
    '{' 	reduce  143  (@3)



state 380

    unary_expr  ->  SIZEOF unary_expr .   (98)

    $default	reduce  98  (unary_expr)



state 381

    primary  ->  object . identifier_or_opname   (148)
    primary  ->  object . scoped_identifier identifier_or_opname   (149)
    primary  ->  object . identifier_or_opname '(' exprlist ')'   (161)
    primary  ->  object . identifier_or_opname LEFT_RIGHT   (162)
    primary  ->  object . scoped_identifier identifier_or_opname '(' exprlist ')'   (163)
    primary  ->  object . scoped_identifier identifier_or_opname LEFT_RIGHT   (164)

    IDENTIFIER	shift  433
    TYPENAME	shift  434
    OPERATOR	shift  37
    LEFT_RIGHT	shift  435
    TYPENAME_SCOPE	shift  232
    '~' 	shift  440
    identifier_or_opname	shift  441
    wrapper	shift  442
    scoped_identifier	shift  445
    operator_name	shift  446



state 382

    unary_expr  ->  ALIGNOF '(' . typename ')'   (101)
    primary  ->  '(' . expr ')'   (141)
    primary  ->  '(' . error ')'   (142)
    primary  ->  '(' . @3 compstmt ')'   (144)

    error	shift  393
    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  235
    unop	shift  236
    expr	shift  394
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    @3  	shift  395
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    typed_typespecs	shift  247
    x_typespec	shift  248
    typename	shift  593
    nonempty_type_quals	shift  250
    scoped_identifier	shift  251
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)
    '{' 	reduce  143  (@3)



state 383

    unary_expr  ->  ALIGNOF unary_expr .   (100)

    $default	reduce  100  (unary_expr)



state 384

    new  ->  NEW DYNAMIC .   (178)
    new  ->  NEW DYNAMIC . '(' string ')'   (179)

    '(' 	shift  594

    $default	reduce  178  (new)



state 385

    new  ->  NEW '{' . nonnull_exprlist '}'   (177)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    nonnull_exprlist	shift  595
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  307
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 386

    primary  ->  SCOPE IDENTIFIER .   (156)

    $default	reduce  156  (primary)



state 387

    new  ->  SCOPE . new   (180)
    delete  ->  SCOPE . delete   (182)

    DELETE	shift  221
    NEW 	shift  222
    SCOPE	shift  387
    new 	shift  388
    delete	shift  389



state 388

    new  ->  SCOPE new .   (180)

    $default	reduce  180  (new)



state 389

    delete  ->  SCOPE delete .   (182)

    $default	reduce  182  (delete)



state 390

    primary  ->  SCOPE operator_name .   (157)

    $default	reduce  157  (primary)



state 391

    unary_expr  ->  '&' cast_expr .   (95)

    $default	reduce  95  (unary_expr)



state 392

    unary_expr  ->  '*' cast_expr .   (94)

    $default	reduce  94  (unary_expr)



state 393

    primary  ->  '(' error . ')'   (142)

    ')' 	shift  596



state 394

    primary  ->  '(' expr . ')'   (141)

    ')' 	shift  597



state 395

    primary  ->  '(' @3 . compstmt ')'   (144)

    '{' 	shift  177
    compstmt	shift  598



state 396

    cast_expr  ->  '(' typename . ')' expr_no_commas   (111)
    cast_expr  ->  '(' typename . ')' '{' initlist maybecomma '}'   (112)

    ')' 	shift  599



state 397

    unary_expr  ->  '~' cast_expr .   (96)

    $default	reduce  96  (unary_expr)



state 398

    primary  ->  dummy_decl TYPE_QUAL . '(' exprlist ')'   (153)
    nonempty_type_quals  ->  dummy_decl TYPE_QUAL .   (342)

    '(' 	shift  600

    $default	reduce  342  (nonempty_type_quals)



state 399

    unary_expr  ->  unop cast_expr .   (97)

    $default	reduce  97  (unary_expr)



state 400

    x_typespec  ->  dummy_decl TYPEOF '(' expr ')' .   (225)

    $default	reduce  225  (x_typespec)



state 401

    nonnull_exprlist  ->  nonnull_exprlist ',' . expr_no_commas   (91)
    nonnull_exprlist  ->  nonnull_exprlist ',' . error   (92)

    error	shift  601
    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  602
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)



state 402

    expr_no_commas  ->  expr_no_commas ASSIGN . expr_no_commas   (131)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  603
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 403

    expr_no_commas  ->  expr_no_commas '=' . expr_no_commas   (130)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  604
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 404

    expr_no_commas  ->  expr_no_commas '?' . xexpr ':' expr_no_commas   (129)

    error	shift  605
    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    expr	shift  606
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    xexpr	shift  607
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)
    ':' 	reduce  500  (xexpr)



state 405

    expr_no_commas  ->  expr_no_commas OROR . expr_no_commas   (128)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  608
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 406

    expr_no_commas  ->  expr_no_commas ANDAND . expr_no_commas   (127)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  609
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 407

    expr_no_commas  ->  expr_no_commas '|' . expr_no_commas   (125)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  610
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 408

    expr_no_commas  ->  expr_no_commas '^' . expr_no_commas   (126)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  611
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 409

    expr_no_commas  ->  expr_no_commas '&' . expr_no_commas   (124)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  612
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 410

    expr_no_commas  ->  expr_no_commas MIN_MAX . expr_no_commas   (123)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  613
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 411

    expr_no_commas  ->  expr_no_commas EQCOMPARE . expr_no_commas   (122)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  614
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 412

    expr_no_commas  ->  expr_no_commas ARITHCOMPARE . expr_no_commas   (121)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  615
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 413

    expr_no_commas  ->  expr_no_commas LSHIFT . expr_no_commas   (119)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  616
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 414

    expr_no_commas  ->  expr_no_commas RSHIFT . expr_no_commas   (120)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  617
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 415

    expr_no_commas  ->  expr_no_commas '+' . expr_no_commas   (114)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  618
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 416

    expr_no_commas  ->  expr_no_commas '-' . expr_no_commas   (115)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  619
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 417

    expr_no_commas  ->  expr_no_commas '*' . expr_no_commas   (116)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  620
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 418

    expr_no_commas  ->  expr_no_commas '/' . expr_no_commas   (117)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  621
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 419

    expr_no_commas  ->  expr_no_commas '%' . expr_no_commas   (118)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  622
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 420

    primary  ->  primary LEFT_RIGHT .   (146)

    $default	reduce  146  (primary)



state 421

    primary  ->  primary PLUSPLUS .   (150)

    $default	reduce  150  (primary)



state 422

    primary  ->  primary MINUSMINUS .   (151)

    $default	reduce  151  (primary)



state 423

    object  ->  primary POINTSAT .   (187)

    $default	reduce  187  (object)



state 424

    object  ->  primary '.' .   (186)

    $default	reduce  186  (object)



state 425

    primary  ->  primary '(' . exprlist ')'   (145)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    exprlist	shift  623
    nonnull_exprlist	shift  336
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  307
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    ')' 	reduce  88  (exprlist)
    $default	reduce  19  (dummy_decl)



state 426

    primary  ->  primary '[' . expr ']'   (147)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    expr	shift  624
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 427

    unary_expr  ->  new TYPENAME_COLON .   (107)

    $default	reduce  107  (unary_expr)



state 428

    unary_expr  ->  new '(' . typename ')'   (106)

    dummy_decl	shift  131
    typed_typespecs	shift  247
    x_typespec	shift  133
    typename	shift  625
    nonempty_type_quals	shift  250

    $default	reduce  19  (dummy_decl)



state 429

    unary_expr  ->  new x_typespec . '(' exprlist ')'   (103)
    unary_expr  ->  new x_typespec . LEFT_RIGHT   (104)
    typed_typespecs  ->  x_typespec .   (208)
    typed_typespecs  ->  x_typespec . reserved_typespecquals   (210)

    TYPESPEC	shift  84
    TYPE_QUAL	shift  85
    ENUM	shift  34
    AGGR	shift  36
    DYNAMIC	shift  38
    LEFT_RIGHT	shift  626
    '(' 	shift  627
    reserved_typespecquals	shift  270
    typespecqual_reserved	shift  271
    structsp	shift  88
    aggr	shift  49
    class_head	shift  50

    $default	reduce  208  (typed_typespecs)



state 430

    unary_expr  ->  new typename .   (102)
    unary_expr  ->  new typename . '=' init   (105)

    '=' 	shift  628

    $default	reduce  102  (unary_expr)



state 431

    unary_expr  ->  delete '[' . expr ']' cast_expr   (109)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    expr	shift  629
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 432

    unary_expr  ->  delete cast_expr .   (108)

    $default	reduce  108  (unary_expr)



state 433

    identifier_or_opname  ->  IDENTIFIER .   (69)
    scoped_identifier  ->  IDENTIFIER . SCOPE   (399)

    SCOPE	shift  378

    $default	reduce  69  (identifier_or_opname)



state 434

    identifier_or_opname  ->  TYPENAME .   (70)

    $default	reduce  70  (identifier_or_opname)



state 435

    wrapper  ->  LEFT_RIGHT .   (78)
    wrapper  ->  LEFT_RIGHT . '?'   (80)

    '?' 	shift  630

    $default	reduce  78  (wrapper)



state 436

    primary_no_id  ->  SCOPE . IDENTIFIER   (174)
    primary_no_id  ->  SCOPE . operator_name   (175)

    IDENTIFIER	shift  631
    OPERATOR	shift  37
    operator_name	shift  632



state 437

    expr_no_commas  ->  object '&' . expr_no_commas   (133)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  633
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 438

    expr_no_commas  ->  object '*' . expr_no_commas   (132)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  634
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 439

    expr_no_commas  ->  object '(' . typename ')' expr_no_commas   (135)
    primary_no_id  ->  '(' . expr ')'   (165)
    primary_no_id  ->  '(' . error ')'   (166)
    primary_no_id  ->  '(' . @4 compstmt ')'   (168)

    error	shift  635
    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  235
    unop	shift  236
    expr	shift  636
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    @4  	shift  637
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    typed_typespecs	shift  247
    x_typespec	shift  248
    typename	shift  638
    nonempty_type_quals	shift  250
    scoped_identifier	shift  251
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)
    '{' 	reduce  167  (@4)



state 440

    identifier_or_opname  ->  '~' . identifier   (71)
    wrapper  ->  '~' . LEFT_RIGHT   (79)

    IDENTIFIER	shift  97
    TYPENAME	shift  98
    LEFT_RIGHT	shift  639
    identifier	shift  640



state 441

    primary  ->  object identifier_or_opname .   (148)
    primary  ->  object identifier_or_opname . '(' exprlist ')'   (161)
    primary  ->  object identifier_or_opname . LEFT_RIGHT   (162)

    LEFT_RIGHT	shift  641
    '(' 	shift  642

    $default	reduce  148  (primary)



state 442

    identifier_or_opname  ->  wrapper . IDENTIFIER   (73)
    identifier_or_opname  ->  wrapper . TYPENAME   (74)
    identifier_or_opname  ->  wrapper . operator_name   (75)
    identifier_or_opname  ->  wrapper . scoped_identifier IDENTIFIER   (76)
    identifier_or_opname  ->  wrapper . scoped_identifier operator_name   (77)

    IDENTIFIER	shift  643
    TYPENAME	shift  644
    OPERATOR	shift  37
    TYPENAME_SCOPE	shift  232
    scoped_identifier	shift  645
    operator_name	shift  646



state 443

    expr_no_commas  ->  object unop . expr_no_commas   (134)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  647
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 444

    expr_no_commas  ->  object primary_no_id .   (136)
    primary_no_id  ->  primary_no_id . '(' exprlist ')'   (169)
    primary_no_id  ->  primary_no_id . LEFT_RIGHT   (170)
    primary_no_id  ->  primary_no_id . '[' expr ']'   (171)
    primary_no_id  ->  primary_no_id . PLUSPLUS   (172)
    primary_no_id  ->  primary_no_id . MINUSMINUS   (173)

    LEFT_RIGHT	shift  648
    PLUSPLUS	shift  649
    MINUSMINUS	shift  650
    '(' 	shift  651
    '[' 	shift  652

    $default	reduce  136  (expr_no_commas)



state 445

    primary  ->  object scoped_identifier . identifier_or_opname   (149)
    primary  ->  object scoped_identifier . identifier_or_opname '(' exprlist ')'   (163)
    primary  ->  object scoped_identifier . identifier_or_opname LEFT_RIGHT   (164)
    scoped_identifier  ->  scoped_identifier . TYPENAME_SCOPE   (400)

    IDENTIFIER	shift  452
    TYPENAME	shift  434
    OPERATOR	shift  37
    LEFT_RIGHT	shift  435
    TYPENAME_SCOPE	shift  453
    '~' 	shift  440
    identifier_or_opname	shift  653
    wrapper	shift  442
    operator_name	shift  446



state 446

    identifier_or_opname  ->  operator_name .   (72)

    $default	reduce  72  (identifier_or_opname)



state 447

    typename  ->  typed_typespecs absdcl .   (338)

    $default	reduce  338  (typename)



state 448

    primary  ->  x_typespec LEFT_RIGHT .   (155)

    $default	reduce  155  (primary)



state 449

    primary  ->  x_typespec '(' . exprlist ')'   (154)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    exprlist	shift  654
    nonnull_exprlist	shift  336
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  307
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    ')' 	reduce  88  (exprlist)
    $default	reduce  19  (dummy_decl)



state 450

    x_typespec  ->  dummy_decl TYPEOF '(' typename ')' .   (226)

    $default	reduce  226  (x_typespec)



state 451

    typename  ->  nonempty_type_quals absdcl .   (339)

    $default	reduce  339  (typename)



state 452

    identifier_or_opname  ->  IDENTIFIER .   (69)

    $default	reduce  69  (identifier_or_opname)



state 453

    scoped_identifier  ->  scoped_identifier TYPENAME_SCOPE .   (400)

    $default	reduce  400  (scoped_identifier)



state 454

    primary  ->  scoped_identifier identifier_or_opname .   (158)
    primary  ->  scoped_identifier identifier_or_opname . '(' exprlist ')'   (159)
    primary  ->  scoped_identifier identifier_or_opname . LEFT_RIGHT   (160)

    LEFT_RIGHT	shift  655
    '(' 	shift  656

    $default	reduce  158  (primary)



state 455

    absdcl1  ->  IDENTIFIER SCOPE . type_quals absdcl1   (418)
    absdcl1  ->  IDENTIFIER SCOPE . type_quals   (420)

    type_quals	shift  657

    $default	reduce  344  (type_quals)



state 456

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    absdcl1  ->  LEFT_RIGHT type_quals .   (414)

    TYPE_QUAL	shift  277

    $default	reduce  414  (absdcl1)



state 457

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    absdcl1  ->  '&' type_quals . absdcl1   (407)
    absdcl1  ->  '&' type_quals .   (408)

    IDENTIFIER	shift  258
    TYPE_QUAL	shift  277
    LEFT_RIGHT	shift  259
    '&' 	shift  260
    '*' 	shift  261
    PAREN_STAR_PAREN	shift  262
    PAREN_X_SCOPE_STAR_PAREN	shift  263
    PAREN_X_SCOPE_REF_PAREN	shift  264
    '(' 	shift  265
    '[' 	shift  266
    TYPENAME_SCOPE	shift  267
    absdcl1	shift  658

    $default	reduce  408  (absdcl1)



state 458

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    absdcl1  ->  '*' type_quals . absdcl1   (402)
    absdcl1  ->  '*' type_quals .   (403)

    IDENTIFIER	shift  258
    TYPE_QUAL	shift  277
    LEFT_RIGHT	shift  259
    '&' 	shift  260
    '*' 	shift  261
    PAREN_STAR_PAREN	shift  262
    PAREN_X_SCOPE_STAR_PAREN	shift  263
    PAREN_X_SCOPE_REF_PAREN	shift  264
    '(' 	shift  265
    '[' 	shift  266
    TYPENAME_SCOPE	shift  267
    absdcl1	shift  659

    $default	reduce  403  (absdcl1)



state 459

    absdcl1  ->  '(' absdcl1 . ')'   (401)
    absdcl1  ->  absdcl1 . '(' parmlist ')' type_quals   (409)
    absdcl1  ->  absdcl1 . LEFT_RIGHT type_quals   (410)
    absdcl1  ->  absdcl1 . '[' nonmomentary_expr ']'   (411)
    absdcl1  ->  absdcl1 . '[' ']'   (412)

    LEFT_RIGHT	shift  464
    '(' 	shift  465
    '[' 	shift  466
    ')' 	shift  660



state 460

    absdcl1  ->  '(' parmlist . ')' type_quals   (413)

    ')' 	shift  661



state 461

    absdcl1  ->  '[' ']' .   (416)

    $default	reduce  416  (absdcl1)



state 462

    absdcl1  ->  '[' nonmomentary_expr . ']'   (415)

    ']' 	shift  662



state 463

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    absdcl1  ->  TYPENAME_SCOPE type_quals . absdcl1   (417)
    absdcl1  ->  TYPENAME_SCOPE type_quals .   (419)

    IDENTIFIER	shift  258
    TYPE_QUAL	shift  277
    LEFT_RIGHT	shift  259
    '&' 	shift  260
    '*' 	shift  261
    PAREN_STAR_PAREN	shift  262
    PAREN_X_SCOPE_STAR_PAREN	shift  263
    PAREN_X_SCOPE_REF_PAREN	shift  264
    '(' 	shift  265
    '[' 	shift  266
    TYPENAME_SCOPE	shift  267
    absdcl1	shift  663

    $default	reduce  419  (absdcl1)



state 464

    absdcl1  ->  absdcl1 LEFT_RIGHT . type_quals   (410)

    type_quals	shift  664

    $default	reduce  344  (type_quals)



state 465

    absdcl1  ->  absdcl1 '(' . parmlist ')' type_quals   (409)

    ELLIPSIS	shift  207
    TYPENAME_ELLIPSIS	shift  208
    dummy_decl	shift  209
    typed_declspecs	shift  210
    declmods	shift  211
    x_typespec	shift  19
    parmlist	shift  665
    parms	shift  213
    parm	shift  214

    ')' 	reduce  510  (parmlist)
    $default	reduce  19  (dummy_decl)



state 466

    absdcl1  ->  absdcl1 '[' . nonmomentary_expr ']'   (411)
    absdcl1  ->  absdcl1 '[' . ']'   (412)

    ']' 	shift  666
    nonmomentary_expr	shift  667
    @10 	shift  312

    $default	reduce  346  (@10)



state 467

    reserved_typespecquals  ->  reserved_typespecquals typespecqual_reserved .   (213)

    $default	reduce  213  (reserved_typespecquals)



state 468

    typed_typespecs  ->  nonempty_type_quals typespec reserved_typespecquals .   (211)
    reserved_typespecquals  ->  reserved_typespecquals . typespecqual_reserved   (213)

    TYPESPEC	shift  84
    TYPE_QUAL	shift  85
    ENUM	shift  34
    AGGR	shift  36
    DYNAMIC	shift  38
    typespecqual_reserved	shift  467
    structsp	shift  88
    aggr	shift  49
    class_head	shift  50

    $default	reduce  211  (typed_typespecs)



state 469

    aggr  ->  DYNAMIC '(' string ')' . AGGR   (272)

    AGGR	shift  668



state 470

    notype_declarator  ->  TYPENAME_SCOPE see_typename TYPENAME LEFT_RIGHT . type_quals   (395)

    type_quals	shift  669

    $default	reduce  344  (type_quals)



state 471

    notype_declarator  ->  TYPENAME_SCOPE see_typename TYPENAME '(' . nonnull_exprlist ')' type_quals   (393)
    notype_declarator  ->  TYPENAME_SCOPE see_typename TYPENAME '(' . parmlist ')' type_quals   (394)
    notype_declarator  ->  TYPENAME_SCOPE see_typename TYPENAME '(' . error ')' type_quals   (396)

    error	shift  670
    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    ELLIPSIS	shift  207
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    TYPENAME_ELLIPSIS	shift  208
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  305
    unop	shift  236
    nonnull_exprlist	shift  671
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  307
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    typed_declspecs	shift  210
    declmods	shift  211
    x_typespec	shift  308
    scoped_identifier	shift  251
    parmlist	shift  672
    parms	shift  213
    parm	shift  214
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    SCSPEC	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)
    ')' 	reduce  510  (parmlist)



state 472

    initdcl  ->  declarator maybe_raises . maybeasm maybe_attribute '=' @6 init   (237)
    initdcl  ->  declarator maybe_raises . maybeasm maybe_attribute   (238)

    ASM 	shift  320
    maybeasm	shift  673

    $default	reduce  231  (maybeasm)



state 473

    class_head  ->  aggr IDENTIFIER ':' base_class_list .   (279)
    base_class_list  ->  base_class_list . ',' identifier   (284)
    base_class_list  ->  base_class_list . ',' base_class_visibility_list identifier   (285)

    ',' 	shift  474

    $default	reduce  279  (class_head)



state 474

    base_class_list  ->  base_class_list ',' . identifier   (284)
    base_class_list  ->  base_class_list ',' . base_class_visibility_list identifier   (285)

    IDENTIFIER	shift  97
    TYPENAME	shift  98
    SCSPEC	shift  288
    PRIVATE	shift  289
    PUBLIC	shift  290
    identifier	shift  674
    base_class_visibility_list	shift  675



state 475

    base_class_visibility_list  ->  base_class_visibility_list SCSPEC .   (291)

    $default	reduce  291  (base_class_visibility_list)



state 476

    base_class_visibility_list  ->  base_class_visibility_list PRIVATE .   (290)

    $default	reduce  290  (base_class_visibility_list)



state 477

    base_class_visibility_list  ->  base_class_visibility_list PUBLIC .   (289)

    $default	reduce  289  (base_class_visibility_list)



state 478

    base_class_list  ->  base_class_visibility_list identifier .   (283)

    $default	reduce  283  (base_class_list)



state 479

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)
    component_decl  ->  ':' expr_no_commas . ';'   (316)
    component_decl  ->  ':' expr_no_commas . '}'   (317)

    ASSIGN	shift  402
    '=' 	shift  403
    '?' 	shift  404
    OROR	shift  405
    ANDAND	shift  406
    '|' 	shift  407
    '^' 	shift  408
    '&' 	shift  409
    MIN_MAX	shift  410
    EQCOMPARE	shift  411
    ARITHCOMPARE	shift  412
    LSHIFT	shift  413
    RSHIFT	shift  414
    '+' 	shift  415
    '-' 	shift  416
    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419
    ';' 	shift  676
    '}' 	shift  677



state 480

    fn.def2  ->  dummy_decl notype_declarator . maybe_raises   (50)
    component_decl  ->  dummy_decl notype_declarator . maybe_raises ';'   (321)
    component_decl  ->  dummy_decl notype_declarator . maybe_raises '}'   (322)
    notype_declarator  ->  notype_declarator . '(' nonnull_exprlist ')' type_quals   (375)
    notype_declarator  ->  notype_declarator . '(' parmlist ')' type_quals   (376)
    notype_declarator  ->  notype_declarator . LEFT_RIGHT type_quals   (377)
    notype_declarator  ->  notype_declarator . '(' error ')' type_quals   (378)
    notype_declarator  ->  notype_declarator . '[' nonmomentary_expr ']'   (382)
    notype_declarator  ->  notype_declarator . '[' ']'   (383)

    LEFT_RIGHT	shift  162
    '(' 	shift  163
    '[' 	shift  164
    RAISES	shift  165
    maybe_raises	shift  678

    $default	reduce  531  (maybe_raises)



state 481

    component_decl  ->  fn.def2 '{' .   (320)

    $default	reduce  320  (component_decl)



state 482

    component_decl  ->  fn.def2 ':' .   (319)

    $default	reduce  319  (component_decl)



state 483

    component_declarator0  ->  IDENTIFIER . ':' expr_no_commas   (327)
    notype_declarator  ->  IDENTIFIER .   (384)

    ':' 	shift  679

    $default	reduce  384  (notype_declarator)



state 484

    fn.def2  ->  typed_declspecs LEFT_RIGHT . type_quals maybe_raises   (45)
    component_decl  ->  typed_declspecs LEFT_RIGHT . ';'   (307)
    component_decl  ->  typed_declspecs LEFT_RIGHT . '}'   (308)
    notype_declarator  ->  LEFT_RIGHT . identifier   (388)
    notype_declarator  ->  LEFT_RIGHT . '?' identifier   (389)

    IDENTIFIER	shift  97
    TYPENAME	shift  98
    '?' 	shift  137
    ';' 	shift  680
    '}' 	shift  681
    identifier	shift  138
    type_quals	shift  682

    $default	reduce  344  (type_quals)



state 485

    component_declarator0  ->  TYPENAME_COLON . expr_no_commas   (328)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  683
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 486

    component_declarator0  ->  ':' . expr_no_commas   (329)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  684
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 487

    fn.def2  ->  typed_declspecs '(' . parmlist ')' type_quals maybe_raises   (44)
    component_decl  ->  typed_declspecs '(' . parmlist ')' ';'   (305)
    component_decl  ->  typed_declspecs '(' . parmlist ')' '}'   (306)
    after_type_declarator  ->  '(' . dummy_decl after_type_declarator_no_typename ')'   (354)
    after_type_declarator  ->  '(' . '*' type_quals after_type_declarator ')'   (355)
    after_type_declarator  ->  '(' . '&' type_quals after_type_declarator ')'   (359)
    notype_declarator  ->  '(' . notype_declarator ')'   (379)

    IDENTIFIER	shift  29
    ELLIPSIS	shift  207
    OPERATOR	shift  37
    LEFT_RIGHT	shift  39
    SCOPE	shift  40
    '&' 	shift  183
    '*' 	shift  184
    '(' 	shift  43
    TYPENAME_SCOPE	shift  44
    TYPENAME_ELLIPSIS	shift  208
    '~' 	shift  45
    dummy_decl	shift  685
    typed_declspecs	shift  210
    declmods	shift  211
    x_typespec	shift  19
    notype_declarator	shift  143
    parmlist	shift  686
    parms	shift  213
    parm	shift  214
    operator_name	shift  52

    ')' 	reduce  510  (parmlist)
    $default	reduce  19  (dummy_decl)



state 488

    fn.def2  ->  typed_declspecs declarator . maybe_raises   (46)
    component_declarator0  ->  declarator . maybe_raises maybeasm opt.init   (326)

    RAISES	shift  165
    maybe_raises	shift  687

    $default	reduce  531  (maybe_raises)



state 489

    component_decl  ->  typed_declspecs components . ';'   (304)
    components  ->  components . ',' component_declarator   (325)

    ',' 	shift  688
    ';' 	shift  689



state 490

    components  ->  component_declarator0 .   (324)

    $default	reduce  324  (components)



state 491

    fn.def2  ->  declmods LEFT_RIGHT . type_quals maybe_raises   (48)
    component_decl  ->  declmods LEFT_RIGHT . ';'   (314)
    component_decl  ->  declmods LEFT_RIGHT . '}'   (315)
    notype_declarator  ->  LEFT_RIGHT . identifier   (388)
    notype_declarator  ->  LEFT_RIGHT . '?' identifier   (389)

    IDENTIFIER	shift  97
    TYPENAME	shift  98
    '?' 	shift  137
    ';' 	shift  690
    '}' 	shift  691
    identifier	shift  138
    type_quals	shift  692

    $default	reduce  344  (type_quals)



state 492

    fn.def2  ->  declmods '(' . parmlist ')' type_quals maybe_raises   (47)
    component_decl  ->  declmods '(' . parmlist ')' ';'   (312)
    component_decl  ->  declmods '(' . parmlist ')' '}'   (313)
    after_type_declarator  ->  '(' . dummy_decl after_type_declarator_no_typename ')'   (354)
    after_type_declarator  ->  '(' . '*' type_quals after_type_declarator ')'   (355)
    after_type_declarator  ->  '(' . '&' type_quals after_type_declarator ')'   (359)
    notype_declarator  ->  '(' . notype_declarator ')'   (379)

    IDENTIFIER	shift  29
    ELLIPSIS	shift  207
    OPERATOR	shift  37
    LEFT_RIGHT	shift  39
    SCOPE	shift  40
    '&' 	shift  183
    '*' 	shift  184
    '(' 	shift  43
    TYPENAME_SCOPE	shift  44
    TYPENAME_ELLIPSIS	shift  208
    '~' 	shift  45
    dummy_decl	shift  685
    typed_declspecs	shift  210
    declmods	shift  211
    x_typespec	shift  19
    notype_declarator	shift  143
    parmlist	shift  693
    parms	shift  213
    parm	shift  214
    operator_name	shift  52

    ')' 	reduce  510  (parmlist)
    $default	reduce  19  (dummy_decl)



state 493

    fn.def2  ->  declmods declarator . maybe_raises   (49)
    component_decl  ->  declmods declarator . ';'   (310)
    component_declarator0  ->  declarator . maybe_raises maybeasm opt.init   (326)

    RAISES	shift  165
    ';' 	shift  694
    maybe_raises	shift  695

    ';' 	[reduce  531  (maybe_raises)]
    $default	reduce  531  (maybe_raises)



state 494

    component_decl  ->  declmods components . ';'   (309)
    component_decl  ->  declmods components . '}'   (311)
    components  ->  components . ',' component_declarator   (325)

    ',' 	shift  688
    ';' 	shift  696
    '}' 	shift  697



state 495

    opt.component_decl_list  ->  opt.component_decl_list PRIVATE . ':' component_decl_list   (296)
    opt.component_decl_list  ->  opt.component_decl_list PRIVATE . ':'   (299)

    ':' 	shift  698



state 496

    opt.component_decl_list  ->  opt.component_decl_list PUBLIC . ':' component_decl_list   (295)
    opt.component_decl_list  ->  opt.component_decl_list PUBLIC . ':'   (298)

    ':' 	shift  699



state 497

    opt.component_decl_list  ->  opt.component_decl_list PROTECTED . ':' component_decl_list   (297)
    opt.component_decl_list  ->  opt.component_decl_list PROTECTED . ':'   (300)

    ':' 	shift  700



state 498

    structsp  ->  class_head LC opt.component_decl_list '}' .   (263)
    structsp  ->  class_head LC opt.component_decl_list '}' . ';'   (264)

    ';' 	shift  701

    ';' 	[reduce  263  (structsp)]
    $default	reduce  263  (structsp)



state 499

    component_decl_list  ->  component_decl_list ';' .   (303)

    $default	reduce  303  (component_decl_list)



state 500

    component_decl_list  ->  component_decl_list component_decl .   (302)

    $default	reduce  302  (component_decl_list)



state 501

    notype_declarator  ->  notype_declarator '(' error ')' . type_quals   (378)

    type_quals	shift  702

    $default	reduce  344  (type_quals)



state 502

    primary  ->  dummy_decl TYPE_QUAL . '(' exprlist ')'   (153)
    declmods  ->  dummy_decl TYPE_QUAL .   (204)

    '(' 	shift  600

    $default	reduce  204  (declmods)



state 503

    notype_declarator  ->  notype_declarator '(' nonnull_exprlist ')' . type_quals   (375)

    type_quals	shift  703

    $default	reduce  344  (type_quals)



state 504

    notype_declarator  ->  notype_declarator '(' parmlist ')' . type_quals   (376)

    type_quals	shift  704

    $default	reduce  344  (type_quals)



state 505

    notype_declarator  ->  notype_declarator '[' nonmomentary_expr ']' .   (382)

    $default	reduce  382  (notype_declarator)



state 506

    nonmomentary_expr  ->  @10 expr .   (347)

    $default	reduce  347  (nonmomentary_expr)



state 507

    raise_identifier  ->  SCOPE IDENTIFIER .   (536)

    $default	reduce  536  (raise_identifier)



state 508

    raise_identifier  ->  SCOPE TYPENAME .   (537)

    $default	reduce  537  (raise_identifier)



state 509

    raise_identifier  ->  scoped_identifier IDENTIFIER .   (538)

    $default	reduce  538  (raise_identifier)



state 510

    raise_identifier  ->  scoped_identifier TYPENAME .   (539)

    $default	reduce  539  (raise_identifier)



state 511

    raise_identifiers  ->  raise_identifiers ',' . raise_identifier   (541)

    IDENTIFIER	shift  313
    TYPENAME	shift  314
    SCOPE	shift  315
    TYPENAME_SCOPE	shift  232
    ALL 	shift  316
    scoped_identifier	shift  317
    raise_identifier	shift  705



state 512

    maybeasm  ->  ASM '(' . string ')'   (232)

    STRING	shift  89
    string	shift  706



state 513

    maybe_attribute  ->  ATTRIBUTE . '(' '(' attribute_list ')' ')'   (243)

    '(' 	shift  707



state 514

    notype_initdcl0  ->  notype_declarator maybe_raises maybeasm maybe_attribute . '=' @7 init   (240)
    notype_initdcl0  ->  notype_declarator maybe_raises maybeasm maybe_attribute .   (241)

    '=' 	shift  708

    $default	reduce  241  (notype_initdcl0)



state 515

    member_init  ->  '(' exprlist . ')'   (61)

    ')' 	shift  709



state 516

    member_init_list  ->  member_init_list error .   (60)

    $default	reduce  60  (member_init_list)



state 517

    member_init_list  ->  member_init_list ',' . member_init   (59)

    IDENTIFIER	shift  322
    TYPENAME	shift  98
    LEFT_RIGHT	shift  323
    '(' 	shift  324
    TYPENAME_SCOPE	shift  232
    member_init	shift  710
    identifier	shift  327
    scoped_identifier	shift  328



state 518

    member_init  ->  identifier LEFT_RIGHT .   (64)

    $default	reduce  64  (member_init)



state 519

    member_init  ->  identifier '(' . exprlist ')'   (63)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    exprlist	shift  711
    nonnull_exprlist	shift  336
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  307
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    ')' 	reduce  88  (exprlist)
    $default	reduce  19  (dummy_decl)



state 520

    member_init  ->  scoped_identifier identifier . '(' exprlist ')'   (65)
    member_init  ->  scoped_identifier identifier . LEFT_RIGHT   (66)

    LEFT_RIGHT	shift  712
    '(' 	shift  713



state 521

    init  ->  '{' '}' .   (252)

    $default	reduce  252  (init)



state 522

    initlist  ->  init .   (256)

    $default	reduce  256  (initlist)



state 523

    init  ->  '{' initlist . '}'   (253)
    init  ->  '{' initlist . ',' '}'   (254)
    initlist  ->  initlist . ',' init   (257)

    ',' 	shift  714
    '}' 	shift  715



state 524

    primary  ->  dummy_decl TYPE_QUAL . '(' exprlist ')'   (153)

    '(' 	shift  600



state 525

    return_init  ->  return_id '(' exprlist ')' .   (53)

    $default	reduce  53  (return_init)



state 526

    fndef  ->  fn.def1 return_init ';' nodecls compstmt_or_error .   (33)

    $default	reduce  33  (fndef)



state 527

    compstmt  ->  '{' .pushlevel error . '}'   (430)

    '}' 	shift  716



state 528

    primary  ->  IDENTIFIER .   (137)
    scoped_identifier  ->  IDENTIFIER . SCOPE   (399)
    stmt  ->  IDENTIFIER . ':' @27 stmt   (471)

    SCOPE	shift  378
    ':' 	shift  717

    $default	reduce  137  (primary)



state 529

    simple_if  ->  IF . '(' expr ')' @11 stmt   (432)

    '(' 	shift  718



state 530

    stmt  ->  WHILE . @13 '(' expr ')' @14 stmt   (441)

    @13 	shift  719

    $default	reduce  439  (@13)



state 531

    stmt  ->  DO . @15 stmt WHILE @16 '(' expr ')' ';'   (444)

    @15 	shift  720

    $default	reduce  442  (@15)



state 532

    forhead.1  ->  FOR . '(' ';'   (491)
    forhead.1  ->  FOR . '(' expr ';'   (492)
    forhead.1  ->  FOR . '(' '{' '}'   (493)
    forhead.2  ->  FOR . '(' decl   (494)
    forhead.2  ->  FOR . '(' error ';'   (495)
    forhead.2  ->  FOR . '(' '{' .pushlevel stmts '}'   (496)
    forhead.2  ->  FOR . '(' '{' .pushlevel error '}'   (497)

    '(' 	shift  721



state 533

    stmt  ->  SWITCH . '(' expr ')' @23 stmt   (454)

    '(' 	shift  722



state 534

    stmt  ->  CASE . expr ':' @24 stmt   (456)
    stmt  ->  CASE . expr RANGE expr ':' @25 stmt   (458)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    expr	shift  723
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 535

    stmt  ->  DEFAULT . ':' @26 stmt   (460)

    ':' 	shift  724



state 536

    stmt  ->  BREAK . ';'   (461)

    ';' 	shift  725



state 537

    stmt  ->  CONTINUE . ';'   (462)

    ';' 	shift  726



state 538

    stmt  ->  RETURN . ';'   (463)
    stmt  ->  RETURN . expr ';'   (464)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    ';' 	shift  727
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    expr	shift  728
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 539

    stmt  ->  GOTO . identifier ';'   (469)

    IDENTIFIER	shift  97
    TYPENAME	shift  98
    identifier	shift  729



state 540

    stmt  ->  ASM . maybe_type_qual '(' string ')' ';'   (465)
    stmt  ->  ASM . maybe_type_qual '(' string ':' asm_operands ')' ';'   (466)
    stmt  ->  ASM . maybe_type_qual '(' string ':' asm_operands ':' asm_operands ')' ';'   (467)
    stmt  ->  ASM . maybe_type_qual '(' string ':' asm_operands ':' asm_operands ':' asm_clobbers ')' ';'   (468)

    TYPE_QUAL	shift  730
    maybe_type_qual	shift  731

    $default	reduce  498  (maybe_type_qual)



state 541

    stmt  ->  TYPENAME_COLON . @28 stmt   (473)

    @28 	shift  732

    $default	reduce  472  (@28)



state 542

    stmt  ->  RAISE . raise_identifier '(' exprlist ')' ';'   (475)
    stmt  ->  RAISE . raise_identifier LEFT_RIGHT ';'   (476)

    IDENTIFIER	shift  313
    TYPENAME	shift  314
    SCOPE	shift  315
    TYPENAME_SCOPE	shift  232
    ALL 	shift  316
    scoped_identifier	shift  317
    raise_identifier	shift  733



state 543

    try  ->  TRY . '{' '}'   (481)
    try_head  ->  TRY . '{' @30 .pushlevel   (485)

    '{' 	shift  734



state 544

    stmt  ->  ';' .   (474)

    $default	reduce  474  (stmt)



state 545

    stmt  ->  expr . ';'   (435)

    ';' 	shift  735



state 546

    stmt  ->  decl .   (434)

    $default	reduce  434  (stmt)



state 547

    decl  ->  typed_declspecs . initdecls ';'   (188)
    decl  ->  typed_declspecs . declarator ';'   (189)
    decl  ->  typed_declspecs . ';'   (192)

    IDENTIFIER	shift  29
    TYPENAME	shift  59
    OPERATOR	shift  37
    LEFT_RIGHT	shift  39
    SCOPE	shift  40
    '&' 	shift  60
    '*' 	shift  61
    PAREN_STAR_PAREN	shift  62
    PAREN_X_SCOPE_STAR_PAREN	shift  63
    PAREN_X_SCOPE_REF_PAREN	shift  64
    '(' 	shift  65
    TYPENAME_SCOPE	shift  44
    ';' 	shift  736
    '~' 	shift  45
    declarator	shift  737
    initdecls	shift  738
    initdcl0	shift  69
    after_type_declarator	shift  70
    notype_declarator	shift  71
    operator_name	shift  52



state 548

    decl  ->  declmods . notype_initdecls ';'   (190)
    decl  ->  declmods . declarator ';'   (191)
    decl  ->  declmods . ';'   (193)
    typed_declspecs  ->  declmods . typespec   (197)
    typed_declspecs  ->  declmods . typespec reserved_declspecs   (199)
    declmods  ->  declmods . TYPE_QUAL   (206)
    declmods  ->  declmods . SCSPEC   (207)

    IDENTIFIER	shift  29
    TYPENAME	shift  72
    SCSPEC	shift  73
    TYPESPEC	shift  74
    TYPE_QUAL	shift  75
    ENUM	shift  34
    TYPEOF	shift  76
    AGGR	shift  36
    OPERATOR	shift  37
    DYNAMIC	shift  38
    LEFT_RIGHT	shift  39
    SCOPE	shift  40
    '&' 	shift  60
    '*' 	shift  61
    PAREN_STAR_PAREN	shift  62
    PAREN_X_SCOPE_STAR_PAREN	shift  63
    PAREN_X_SCOPE_REF_PAREN	shift  64
    '(' 	shift  65
    TYPENAME_SCOPE	shift  44
    ';' 	shift  739
    '~' 	shift  45
    declarator	shift  740
    typespec	shift  79
    notype_initdecls	shift  741
    notype_initdcl0	shift  47
    structsp	shift  81
    aggr	shift  49
    class_head	shift  50
    after_type_declarator	shift  70
    notype_declarator	shift  742
    operator_name	shift  52



state 549

    stmts  ->  stmts . stmt   (422)
    stmts  ->  stmts . errstmt   (423)
    compstmt  ->  '{' .pushlevel stmts . '}'   (429)

    error	shift  743
    IDENTIFIER	shift  528
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    IF  	shift  529
    WHILE	shift  530
    DO  	shift  531
    FOR 	shift  532
    SWITCH	shift  533
    CASE	shift  534
    DEFAULT	shift  535
    BREAK	shift  536
    CONTINUE	shift  537
    RETURN	shift  538
    GOTO	shift  539
    ASM 	shift  540
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    TYPENAME_COLON	shift  541
    '{' 	shift  177
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    RAISE	shift  542
    TRY 	shift  543
    TYPENAME_SCOPE	shift  232
    ';' 	shift  544
    '}' 	shift  744
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  305
    unop	shift  236
    expr	shift  545
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    decl	shift  546
    typed_declspecs	shift  547
    declmods	shift  548
    x_typespec	shift  308
    scoped_identifier	shift  251
    errstmt	shift  745
    compstmt	shift  550
    simple_if	shift  551
    stmt	shift  746
    try 	shift  553
    try_head	shift  554
    forhead.1	shift  555
    forhead.2	shift  556
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    SCSPEC	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)



state 550

    stmt  ->  compstmt .   (433)

    $default	reduce  433  (stmt)



state 551

    stmt  ->  simple_if . ELSE @12 stmt   (437)
    stmt  ->  simple_if .   (438)

    ELSE	shift  747

    $default	reduce  438  (stmt)



state 552

    stmts  ->  stmt .   (421)

    $default	reduce  421  (stmts)



state 553

    stmt  ->  try . EXCEPT identifier '{' @29 except_stmts '}'   (478)
    stmt  ->  try . RERAISE raise_identifiers   (479)
    stmt  ->  try .   (480)

    RERAISE	shift  748
    EXCEPT	shift  749

    $default	reduce  480  (stmt)



state 554

    try  ->  try_head . stmts '}'   (482)
    try  ->  try_head . error '}'   (483)

    error	shift  750
    IDENTIFIER	shift  528
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    IF  	shift  529
    WHILE	shift  530
    DO  	shift  531
    FOR 	shift  532
    SWITCH	shift  533
    CASE	shift  534
    DEFAULT	shift  535
    BREAK	shift  536
    CONTINUE	shift  537
    RETURN	shift  538
    GOTO	shift  539
    ASM 	shift  540
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    TYPENAME_COLON	shift  541
    '{' 	shift  177
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    RAISE	shift  542
    TRY 	shift  543
    TYPENAME_SCOPE	shift  232
    ';' 	shift  544
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  305
    unop	shift  236
    expr	shift  545
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    decl	shift  546
    typed_declspecs	shift  547
    declmods	shift  548
    x_typespec	shift  308
    scoped_identifier	shift  251
    stmts	shift  751
    compstmt	shift  550
    simple_if	shift  551
    stmt	shift  552
    try 	shift  553
    try_head	shift  554
    forhead.1	shift  555
    forhead.2	shift  556
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    SCSPEC	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)



state 555

    stmt  ->  forhead.1 . @17 xexpr ';' @18 xexpr ')' @19 stmt   (448)

    @17 	shift  752

    $default	reduce  445  (@17)



state 556

    stmt  ->  forhead.2 . @20 xexpr ';' @21 xexpr ')' @22 stmt   (452)

    @20 	shift  753

    $default	reduce  449  (@20)



state 557

    after_type_declarator  ->  after_type_declarator . '(' nonnull_exprlist ')' type_quals   (348)
    after_type_declarator  ->  after_type_declarator . '(' parmlist ')' type_quals   (349)
    after_type_declarator  ->  after_type_declarator . LEFT_RIGHT type_quals   (350)
    after_type_declarator  ->  after_type_declarator . '(' error ')' type_quals   (351)
    after_type_declarator  ->  after_type_declarator . '[' nonmomentary_expr ']'   (352)
    after_type_declarator  ->  after_type_declarator . '[' ']'   (353)
    after_type_declarator  ->  '(' '&' type_quals after_type_declarator . ')'   (359)

    LEFT_RIGHT	shift  191
    '(' 	shift  192
    '[' 	shift  193
    ')' 	shift  754



state 558

    after_type_declarator  ->  after_type_declarator . '(' nonnull_exprlist ')' type_quals   (348)
    after_type_declarator  ->  after_type_declarator . '(' parmlist ')' type_quals   (349)
    after_type_declarator  ->  after_type_declarator . LEFT_RIGHT type_quals   (350)
    after_type_declarator  ->  after_type_declarator . '(' error ')' type_quals   (351)
    after_type_declarator  ->  after_type_declarator . '[' nonmomentary_expr ']'   (352)
    after_type_declarator  ->  after_type_declarator . '[' ']'   (353)
    after_type_declarator  ->  '(' '*' type_quals after_type_declarator . ')'   (355)

    LEFT_RIGHT	shift  191
    '(' 	shift  192
    '[' 	shift  193
    ')' 	shift  755



state 559

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    after_type_declarator_no_typename  ->  '&' type_quals . after_type_declarator   (374)

    TYPENAME	shift  59
    TYPE_QUAL	shift  277
    '&' 	shift  756
    '*' 	shift  757
    PAREN_STAR_PAREN	shift  62
    PAREN_X_SCOPE_STAR_PAREN	shift  63
    PAREN_X_SCOPE_REF_PAREN	shift  64
    '(' 	shift  758
    after_type_declarator	shift  759



state 560

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    after_type_declarator_no_typename  ->  '*' type_quals . after_type_declarator   (373)

    TYPENAME	shift  59
    TYPE_QUAL	shift  277
    '&' 	shift  756
    '*' 	shift  757
    PAREN_STAR_PAREN	shift  62
    PAREN_X_SCOPE_STAR_PAREN	shift  63
    PAREN_X_SCOPE_REF_PAREN	shift  64
    '(' 	shift  758
    after_type_declarator	shift  760



state 561

    after_type_declarator_no_typename  ->  '(' dummy_decl . after_type_declarator_no_typename ')'   (369)

    '&' 	shift  347
    '*' 	shift  348
    PAREN_STAR_PAREN	shift  349
    PAREN_X_SCOPE_STAR_PAREN	shift  350
    PAREN_X_SCOPE_REF_PAREN	shift  351
    '(' 	shift  352
    after_type_declarator_no_typename	shift  761



state 562

    after_type_declarator_no_typename  ->  after_type_declarator_no_typename LEFT_RIGHT . type_quals   (365)

    type_quals	shift  762

    $default	reduce  344  (type_quals)



state 563

    after_type_declarator_no_typename  ->  after_type_declarator_no_typename '(' . nonnull_exprlist ')' type_quals   (363)
    after_type_declarator_no_typename  ->  after_type_declarator_no_typename '(' . parmlist ')' type_quals   (364)
    after_type_declarator_no_typename  ->  after_type_declarator_no_typename '(' . error ')' type_quals   (366)

    error	shift  763
    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    ELLIPSIS	shift  207
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    TYPENAME_ELLIPSIS	shift  208
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  305
    unop	shift  236
    nonnull_exprlist	shift  764
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  307
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    typed_declspecs	shift  210
    declmods	shift  211
    x_typespec	shift  308
    scoped_identifier	shift  251
    parmlist	shift  765
    parms	shift  213
    parm	shift  214
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    SCSPEC	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)
    ')' 	reduce  510  (parmlist)



state 564

    after_type_declarator_no_typename  ->  after_type_declarator_no_typename '[' . nonmomentary_expr ']'   (367)
    after_type_declarator_no_typename  ->  after_type_declarator_no_typename '[' . ']'   (368)

    ']' 	shift  766
    nonmomentary_expr	shift  767
    @10 	shift  312

    $default	reduce  346  (@10)



state 565

    after_type_declarator  ->  '(' dummy_decl after_type_declarator_no_typename ')' .   (354)

    $default	reduce  354  (after_type_declarator)



state 566

    initdcl0  ->  declarator maybe_raises maybeasm maybe_attribute . '=' @5 init   (234)
    initdcl0  ->  declarator maybe_raises maybeasm maybe_attribute .   (235)

    '=' 	shift  768

    $default	reduce  235  (initdcl0)



state 567

    after_type_declarator  ->  after_type_declarator '(' error ')' . type_quals   (351)

    type_quals	shift  769

    $default	reduce  344  (type_quals)



state 568

    after_type_declarator  ->  after_type_declarator '(' nonnull_exprlist ')' . type_quals   (348)

    type_quals	shift  770

    $default	reduce  344  (type_quals)



state 569

    after_type_declarator  ->  after_type_declarator '(' parmlist ')' . type_quals   (349)

    type_quals	shift  771

    $default	reduce  344  (type_quals)



state 570

    after_type_declarator  ->  after_type_declarator '[' nonmomentary_expr ']' .   (352)

    $default	reduce  352  (after_type_declarator)



state 571

    typespec  ->  TYPEOF '(' expr ')' .   (217)

    $default	reduce  217  (typespec)



state 572

    typespec  ->  TYPEOF '(' typename ')' .   (218)

    $default	reduce  218  (typespec)



state 573

    notype_declarator  ->  IDENTIFIER .   (384)
    absdcl1  ->  IDENTIFIER . SCOPE type_quals absdcl1   (418)
    absdcl1  ->  IDENTIFIER . SCOPE type_quals   (420)

    SCOPE	shift  455

    $default	reduce  384  (notype_declarator)



state 574

    notype_declarator  ->  LEFT_RIGHT . identifier   (388)
    notype_declarator  ->  LEFT_RIGHT . '?' identifier   (389)
    absdcl1  ->  LEFT_RIGHT . type_quals   (414)

    IDENTIFIER	shift  97
    TYPENAME	shift  98
    '?' 	shift  137
    identifier	shift  138
    type_quals	shift  456

    $default	reduce  344  (type_quals)



state 575

    notype_declarator  ->  '&' . type_quals notype_declarator   (381)
    absdcl1  ->  '&' . type_quals absdcl1   (407)
    absdcl1  ->  '&' . type_quals   (408)

    type_quals	shift  772

    $default	reduce  344  (type_quals)



state 576

    notype_declarator  ->  '*' . type_quals notype_declarator   (380)
    absdcl1  ->  '*' . type_quals absdcl1   (402)
    absdcl1  ->  '*' . type_quals   (403)

    type_quals	shift  773

    $default	reduce  344  (type_quals)



state 577

    notype_declarator  ->  '(' . notype_declarator ')'   (379)
    absdcl1  ->  '(' . absdcl1 ')'   (401)
    absdcl1  ->  '(' . parmlist ')' type_quals   (413)

    IDENTIFIER	shift  573
    ELLIPSIS	shift  207
    OPERATOR	shift  37
    LEFT_RIGHT	shift  574
    SCOPE	shift  40
    '&' 	shift  575
    '*' 	shift  576
    PAREN_STAR_PAREN	shift  262
    PAREN_X_SCOPE_STAR_PAREN	shift  263
    PAREN_X_SCOPE_REF_PAREN	shift  264
    '(' 	shift  577
    '[' 	shift  266
    TYPENAME_SCOPE	shift  578
    TYPENAME_ELLIPSIS	shift  208
    '~' 	shift  45
    dummy_decl	shift  209
    typed_declspecs	shift  210
    declmods	shift  211
    x_typespec	shift  19
    notype_declarator	shift  143
    absdcl1	shift  459
    parmlist	shift  460
    parms	shift  213
    parm	shift  214
    operator_name	shift  52

    ')' 	reduce  510  (parmlist)
    $default	reduce  19  (dummy_decl)



state 578

    notype_declarator  ->  TYPENAME_SCOPE . type_quals notype_declarator   (391)
    notype_declarator  ->  TYPENAME_SCOPE . TYPENAME   (392)
    notype_declarator  ->  TYPENAME_SCOPE . see_typename TYPENAME '(' nonnull_exprlist ')' type_quals   (393)
    notype_declarator  ->  TYPENAME_SCOPE . see_typename TYPENAME '(' parmlist ')' type_quals   (394)
    notype_declarator  ->  TYPENAME_SCOPE . see_typename TYPENAME LEFT_RIGHT type_quals   (395)
    notype_declarator  ->  TYPENAME_SCOPE . see_typename TYPENAME '(' error ')' type_quals   (396)
    absdcl1  ->  TYPENAME_SCOPE . type_quals absdcl1   (417)
    absdcl1  ->  TYPENAME_SCOPE . type_quals   (419)

    TYPENAME	shift  144
    type_quals	shift  774
    see_typename	shift  146

    TYPENAME	[reduce  344  (type_quals)]
    $default	reduce  344  (type_quals)



state 579

    parm  ->  typed_declspecs dont_see_typename absdcl .   (522)

    $default	reduce  522  (parm)



state 580

    notype_declarator  ->  notype_declarator . '(' nonnull_exprlist ')' type_quals   (375)
    notype_declarator  ->  notype_declarator . '(' parmlist ')' type_quals   (376)
    notype_declarator  ->  notype_declarator . LEFT_RIGHT type_quals   (377)
    notype_declarator  ->  notype_declarator . '(' error ')' type_quals   (378)
    notype_declarator  ->  notype_declarator . '[' nonmomentary_expr ']'   (382)
    notype_declarator  ->  notype_declarator . '[' ']'   (383)
    parm  ->  typed_declspecs dont_see_typename notype_declarator .   (521)

    LEFT_RIGHT	shift  162
    '(' 	shift  163
    '[' 	shift  164

    $default	reduce  521  (parm)



state 581

    parm  ->  declmods dont_see_typename absdcl .   (524)

    $default	reduce  524  (parm)



state 582

    notype_declarator  ->  notype_declarator . '(' nonnull_exprlist ')' type_quals   (375)
    notype_declarator  ->  notype_declarator . '(' parmlist ')' type_quals   (376)
    notype_declarator  ->  notype_declarator . LEFT_RIGHT type_quals   (377)
    notype_declarator  ->  notype_declarator . '(' error ')' type_quals   (378)
    notype_declarator  ->  notype_declarator . '[' nonmomentary_expr ']'   (382)
    notype_declarator  ->  notype_declarator . '[' ']'   (383)
    parm  ->  declmods dont_see_typename notype_declarator .   (523)

    LEFT_RIGHT	shift  162
    '(' 	shift  163
    '[' 	shift  164

    $default	reduce  523  (parm)



state 583

    fn.def1  ->  dummy_decl TYPENAME '(' parmlist ')' type_quals . maybe_raises   (41)
    type_quals  ->  type_quals . TYPE_QUAL   (345)

    TYPE_QUAL	shift  277
    RAISES	shift  165
    maybe_raises	shift  775

    $default	reduce  531  (maybe_raises)



state 584

    parmlist  ->  parms ',' ELLIPSIS .   (512)

    $default	reduce  512  (parmlist)



state 585

    declmods  ->  dummy_decl . TYPE_QUAL   (204)
    declmods  ->  dummy_decl . SCSPEC   (205)
    x_typespec  ->  dummy_decl . TYPESPEC   (222)
    x_typespec  ->  dummy_decl . structsp   (223)
    x_typespec  ->  dummy_decl . TYPENAME   (224)
    x_typespec  ->  dummy_decl . TYPEOF '(' expr ')'   (225)
    x_typespec  ->  dummy_decl . TYPEOF '(' typename ')'   (226)
    bad_parm  ->  dummy_decl . notype_declarator   (527)
    bad_parm  ->  dummy_decl . absdcl   (528)

    IDENTIFIER	shift  573
    TYPENAME	shift  256
    SCSPEC	shift  31
    TYPESPEC	shift  32
    TYPE_QUAL	shift  33
    ENUM	shift  34
    TYPEOF	shift  35
    AGGR	shift  36
    OPERATOR	shift  37
    DYNAMIC	shift  38
    LEFT_RIGHT	shift  574
    SCOPE	shift  40
    '&' 	shift  575
    '*' 	shift  576
    PAREN_STAR_PAREN	shift  262
    PAREN_X_SCOPE_STAR_PAREN	shift  263
    PAREN_X_SCOPE_REF_PAREN	shift  264
    '(' 	shift  577
    '[' 	shift  266
    TYPENAME_SCOPE	shift  578
    '~' 	shift  45
    structsp	shift  48
    aggr	shift  49
    class_head	shift  50
    absdcl	shift  776
    notype_declarator	shift  777
    absdcl1	shift  269
    operator_name	shift  52

    $default	reduce  340  (absdcl)



state 586

    parms  ->  parms ',' parm . opt.init   (519)

    '=' 	shift  170
    opt.init	shift  778

    $default	reduce  529  (opt.init)



state 587

    parms  ->  parms ',' bad_parm . opt.init   (520)

    '=' 	shift  170
    opt.init	shift  779

    $default	reduce  529  (opt.init)



state 588

    enumerator  ->  identifier '=' . expr_no_commas   (337)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  780
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 589

    maybecomma_warn  ->  ',' .   (269)
    enumlist  ->  enumlist ',' . enumerator   (335)

    IDENTIFIER	shift  97
    TYPENAME	shift  98
    identifier	shift  374
    enumerator	shift  781

    $default	reduce  269  (maybecomma_warn)



state 590

    structsp  ->  ENUM '{' @9 enumlist maybecomma_warn . '}'   (261)

    '}' 	shift  782



state 591

    structsp  ->  ENUM identifier '{' @8 enumlist . maybecomma_warn '}'   (259)
    enumlist  ->  enumlist . ',' enumerator   (335)

    ',' 	shift  589
    maybecomma_warn	shift  783

    $default	reduce  268  (maybecomma_warn)



state 592

    unary_expr  ->  SIZEOF '(' typename . ')'   (99)

    ')' 	shift  784



state 593

    unary_expr  ->  ALIGNOF '(' typename . ')'   (101)

    ')' 	shift  785



state 594

    new  ->  NEW DYNAMIC '(' . string ')'   (179)

    STRING	shift  89
    string	shift  786



state 595

    nonnull_exprlist  ->  nonnull_exprlist . ',' expr_no_commas   (91)
    nonnull_exprlist  ->  nonnull_exprlist . ',' error   (92)
    new  ->  NEW '{' nonnull_exprlist . '}'   (177)

    ',' 	shift  401
    '}' 	shift  787



state 596

    primary  ->  '(' error ')' .   (142)

    $default	reduce  142  (primary)



state 597

    primary  ->  '(' expr ')' .   (141)

    $default	reduce  141  (primary)



state 598

    primary  ->  '(' @3 compstmt . ')'   (144)

    ')' 	shift  788



state 599

    cast_expr  ->  '(' typename ')' . expr_no_commas   (111)
    cast_expr  ->  '(' typename ')' . '{' initlist maybecomma '}'   (112)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '{' 	shift  789
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  790
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 600

    primary  ->  dummy_decl TYPE_QUAL '(' . exprlist ')'   (153)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    exprlist	shift  791
    nonnull_exprlist	shift  336
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  307
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    ')' 	reduce  88  (exprlist)
    $default	reduce  19  (dummy_decl)



state 601

    nonnull_exprlist  ->  nonnull_exprlist ',' error .   (92)

    $default	reduce  92  (nonnull_exprlist)



state 602

    nonnull_exprlist  ->  nonnull_exprlist ',' expr_no_commas .   (91)
    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)

    ASSIGN	shift  402
    '=' 	shift  403
    '?' 	shift  404
    OROR	shift  405
    ANDAND	shift  406
    '|' 	shift  407
    '^' 	shift  408
    '&' 	shift  409
    MIN_MAX	shift  410
    EQCOMPARE	shift  411
    ARITHCOMPARE	shift  412
    LSHIFT	shift  413
    RSHIFT	shift  414
    '+' 	shift  415
    '-' 	shift  416
    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419

    $default	reduce  91  (nonnull_exprlist)



state 603

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)
    expr_no_commas  ->  expr_no_commas ASSIGN expr_no_commas .   (131)

    ASSIGN	shift  402
    '=' 	shift  403
    '?' 	shift  404
    OROR	shift  405
    ANDAND	shift  406
    '|' 	shift  407
    '^' 	shift  408
    '&' 	shift  409
    MIN_MAX	shift  410
    EQCOMPARE	shift  411
    ARITHCOMPARE	shift  412
    LSHIFT	shift  413
    RSHIFT	shift  414
    '+' 	shift  415
    '-' 	shift  416
    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419

    $default	reduce  131  (expr_no_commas)



state 604

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas '=' expr_no_commas .   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)

    ASSIGN	shift  402
    '=' 	shift  403
    '?' 	shift  404
    OROR	shift  405
    ANDAND	shift  406
    '|' 	shift  407
    '^' 	shift  408
    '&' 	shift  409
    MIN_MAX	shift  410
    EQCOMPARE	shift  411
    ARITHCOMPARE	shift  412
    LSHIFT	shift  413
    RSHIFT	shift  414
    '+' 	shift  415
    '-' 	shift  416
    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419

    $default	reduce  130  (expr_no_commas)



state 605

    xexpr  ->  error .   (502)

    $default	reduce  502  (xexpr)



state 606

    xexpr  ->  expr .   (501)

    $default	reduce  501  (xexpr)



state 607

    expr_no_commas  ->  expr_no_commas '?' xexpr . ':' expr_no_commas   (129)

    ':' 	shift  792



state 608

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas OROR expr_no_commas .   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)

    ANDAND	shift  406
    '|' 	shift  407
    '^' 	shift  408
    '&' 	shift  409
    MIN_MAX	shift  410
    EQCOMPARE	shift  411
    ARITHCOMPARE	shift  412
    LSHIFT	shift  413
    RSHIFT	shift  414
    '+' 	shift  415
    '-' 	shift  416
    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419

    $default	reduce  128  (expr_no_commas)



state 609

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas ANDAND expr_no_commas .   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)

    '|' 	shift  407
    '^' 	shift  408
    '&' 	shift  409
    MIN_MAX	shift  410
    EQCOMPARE	shift  411
    ARITHCOMPARE	shift  412
    LSHIFT	shift  413
    RSHIFT	shift  414
    '+' 	shift  415
    '-' 	shift  416
    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419

    $default	reduce  127  (expr_no_commas)



state 610

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas '|' expr_no_commas .   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)

    '^' 	shift  408
    '&' 	shift  409
    MIN_MAX	shift  410
    EQCOMPARE	shift  411
    ARITHCOMPARE	shift  412
    LSHIFT	shift  413
    RSHIFT	shift  414
    '+' 	shift  415
    '-' 	shift  416
    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419

    $default	reduce  125  (expr_no_commas)



state 611

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas '^' expr_no_commas .   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)

    '&' 	shift  409
    MIN_MAX	shift  410
    EQCOMPARE	shift  411
    ARITHCOMPARE	shift  412
    LSHIFT	shift  413
    RSHIFT	shift  414
    '+' 	shift  415
    '-' 	shift  416
    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419

    $default	reduce  126  (expr_no_commas)



state 612

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas '&' expr_no_commas .   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)

    MIN_MAX	shift  410
    EQCOMPARE	shift  411
    ARITHCOMPARE	shift  412
    LSHIFT	shift  413
    RSHIFT	shift  414
    '+' 	shift  415
    '-' 	shift  416
    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419

    $default	reduce  124  (expr_no_commas)



state 613

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas MIN_MAX expr_no_commas .   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)

    EQCOMPARE	shift  411
    ARITHCOMPARE	shift  412
    LSHIFT	shift  413
    RSHIFT	shift  414
    '+' 	shift  415
    '-' 	shift  416
    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419

    $default	reduce  123  (expr_no_commas)



state 614

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas EQCOMPARE expr_no_commas .   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)

    ARITHCOMPARE	shift  412
    LSHIFT	shift  413
    RSHIFT	shift  414
    '+' 	shift  415
    '-' 	shift  416
    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419

    $default	reduce  122  (expr_no_commas)



state 615

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas ARITHCOMPARE expr_no_commas .   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)

    LSHIFT	shift  413
    RSHIFT	shift  414
    '+' 	shift  415
    '-' 	shift  416
    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419

    $default	reduce  121  (expr_no_commas)



state 616

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas LSHIFT expr_no_commas .   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)

    '+' 	shift  415
    '-' 	shift  416
    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419

    $default	reduce  119  (expr_no_commas)



state 617

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas RSHIFT expr_no_commas .   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)

    '+' 	shift  415
    '-' 	shift  416
    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419

    $default	reduce  120  (expr_no_commas)



state 618

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas '+' expr_no_commas .   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)

    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419

    $default	reduce  114  (expr_no_commas)



state 619

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas '-' expr_no_commas .   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)

    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419

    $default	reduce  115  (expr_no_commas)



state 620

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas '*' expr_no_commas .   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)


    $default	reduce  116  (expr_no_commas)



state 621

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas '/' expr_no_commas .   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)


    $default	reduce  117  (expr_no_commas)



state 622

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas '%' expr_no_commas .   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)


    $default	reduce  118  (expr_no_commas)



state 623

    primary  ->  primary '(' exprlist . ')'   (145)

    ')' 	shift  793



state 624

    primary  ->  primary '[' expr . ']'   (147)

    ']' 	shift  794



state 625

    unary_expr  ->  new '(' typename . ')'   (106)

    ')' 	shift  795



state 626

    unary_expr  ->  new x_typespec LEFT_RIGHT .   (104)

    $default	reduce  104  (unary_expr)



state 627

    unary_expr  ->  new x_typespec '(' . exprlist ')'   (103)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    exprlist	shift  796
    nonnull_exprlist	shift  336
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  307
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    ')' 	reduce  88  (exprlist)
    $default	reduce  19  (dummy_decl)



state 628

    unary_expr  ->  new typename '=' . init   (105)

    error	shift  329
    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '{' 	shift  330
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  332
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    init	shift  797
    scoped_identifier	shift  251
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)



state 629

    unary_expr  ->  delete '[' expr . ']' cast_expr   (109)

    ']' 	shift  798



state 630

    wrapper  ->  LEFT_RIGHT '?' .   (80)

    $default	reduce  80  (wrapper)



state 631

    primary_no_id  ->  SCOPE IDENTIFIER .   (174)

    $default	reduce  174  (primary_no_id)



state 632

    primary_no_id  ->  SCOPE operator_name .   (175)

    $default	reduce  175  (primary_no_id)



state 633

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)
    expr_no_commas  ->  object '&' expr_no_commas .   (133)


    $default	reduce  133  (expr_no_commas)



state 634

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)
    expr_no_commas  ->  object '*' expr_no_commas .   (132)


    $default	reduce  132  (expr_no_commas)



state 635

    primary_no_id  ->  '(' error . ')'   (166)

    ')' 	shift  799



state 636

    primary_no_id  ->  '(' expr . ')'   (165)

    ')' 	shift  800



state 637

    primary_no_id  ->  '(' @4 . compstmt ')'   (168)

    '{' 	shift  177
    compstmt	shift  801



state 638

    expr_no_commas  ->  object '(' typename . ')' expr_no_commas   (135)

    ')' 	shift  802



state 639

    wrapper  ->  '~' LEFT_RIGHT .   (79)

    $default	reduce  79  (wrapper)



state 640

    identifier_or_opname  ->  '~' identifier .   (71)

    $default	reduce  71  (identifier_or_opname)



state 641

    primary  ->  object identifier_or_opname LEFT_RIGHT .   (162)

    $default	reduce  162  (primary)



state 642

    primary  ->  object identifier_or_opname '(' . exprlist ')'   (161)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    exprlist	shift  803
    nonnull_exprlist	shift  336
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  307
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    ')' 	reduce  88  (exprlist)
    $default	reduce  19  (dummy_decl)



state 643

    identifier_or_opname  ->  wrapper IDENTIFIER .   (73)
    scoped_identifier  ->  IDENTIFIER . SCOPE   (399)

    SCOPE	shift  378

    $default	reduce  73  (identifier_or_opname)



state 644

    identifier_or_opname  ->  wrapper TYPENAME .   (74)

    $default	reduce  74  (identifier_or_opname)



state 645

    identifier_or_opname  ->  wrapper scoped_identifier . IDENTIFIER   (76)
    identifier_or_opname  ->  wrapper scoped_identifier . operator_name   (77)
    scoped_identifier  ->  scoped_identifier . TYPENAME_SCOPE   (400)

    IDENTIFIER	shift  804
    OPERATOR	shift  37
    TYPENAME_SCOPE	shift  453
    operator_name	shift  805



state 646

    identifier_or_opname  ->  wrapper operator_name .   (75)

    $default	reduce  75  (identifier_or_opname)



state 647

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)
    expr_no_commas  ->  object unop expr_no_commas .   (134)


    $default	reduce  134  (expr_no_commas)



state 648

    primary_no_id  ->  primary_no_id LEFT_RIGHT .   (170)

    $default	reduce  170  (primary_no_id)



state 649

    primary_no_id  ->  primary_no_id PLUSPLUS .   (172)

    $default	reduce  172  (primary_no_id)



state 650

    primary_no_id  ->  primary_no_id MINUSMINUS .   (173)

    $default	reduce  173  (primary_no_id)



state 651

    primary_no_id  ->  primary_no_id '(' . exprlist ')'   (169)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    exprlist	shift  806
    nonnull_exprlist	shift  336
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  307
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    ')' 	reduce  88  (exprlist)
    $default	reduce  19  (dummy_decl)



state 652

    primary_no_id  ->  primary_no_id '[' . expr ']'   (171)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    expr	shift  807
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 653

    primary  ->  object scoped_identifier identifier_or_opname .   (149)
    primary  ->  object scoped_identifier identifier_or_opname . '(' exprlist ')'   (163)
    primary  ->  object scoped_identifier identifier_or_opname . LEFT_RIGHT   (164)

    LEFT_RIGHT	shift  808
    '(' 	shift  809

    $default	reduce  149  (primary)



state 654

    primary  ->  x_typespec '(' exprlist . ')'   (154)

    ')' 	shift  810



state 655

    primary  ->  scoped_identifier identifier_or_opname LEFT_RIGHT .   (160)

    $default	reduce  160  (primary)



state 656

    primary  ->  scoped_identifier identifier_or_opname '(' . exprlist ')'   (159)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    exprlist	shift  811
    nonnull_exprlist	shift  336
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  307
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    ')' 	reduce  88  (exprlist)
    $default	reduce  19  (dummy_decl)



state 657

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    absdcl1  ->  IDENTIFIER SCOPE type_quals . absdcl1   (418)
    absdcl1  ->  IDENTIFIER SCOPE type_quals .   (420)

    IDENTIFIER	shift  258
    TYPE_QUAL	shift  277
    LEFT_RIGHT	shift  259
    '&' 	shift  260
    '*' 	shift  261
    PAREN_STAR_PAREN	shift  262
    PAREN_X_SCOPE_STAR_PAREN	shift  263
    PAREN_X_SCOPE_REF_PAREN	shift  264
    '(' 	shift  265
    '[' 	shift  266
    TYPENAME_SCOPE	shift  267
    absdcl1	shift  812

    $default	reduce  420  (absdcl1)



state 658

    absdcl1  ->  '&' type_quals absdcl1 .   (407)
    absdcl1  ->  absdcl1 . '(' parmlist ')' type_quals   (409)
    absdcl1  ->  absdcl1 . LEFT_RIGHT type_quals   (410)
    absdcl1  ->  absdcl1 . '[' nonmomentary_expr ']'   (411)
    absdcl1  ->  absdcl1 . '[' ']'   (412)

    LEFT_RIGHT	shift  464
    '(' 	shift  465
    '[' 	shift  466

    $default	reduce  407  (absdcl1)



state 659

    absdcl1  ->  '*' type_quals absdcl1 .   (402)
    absdcl1  ->  absdcl1 . '(' parmlist ')' type_quals   (409)
    absdcl1  ->  absdcl1 . LEFT_RIGHT type_quals   (410)
    absdcl1  ->  absdcl1 . '[' nonmomentary_expr ']'   (411)
    absdcl1  ->  absdcl1 . '[' ']'   (412)

    LEFT_RIGHT	shift  464
    '(' 	shift  465
    '[' 	shift  466

    $default	reduce  402  (absdcl1)



state 660

    absdcl1  ->  '(' absdcl1 ')' .   (401)

    $default	reduce  401  (absdcl1)



state 661

    absdcl1  ->  '(' parmlist ')' . type_quals   (413)

    type_quals	shift  813

    $default	reduce  344  (type_quals)



state 662

    absdcl1  ->  '[' nonmomentary_expr ']' .   (415)

    $default	reduce  415  (absdcl1)



state 663

    absdcl1  ->  absdcl1 . '(' parmlist ')' type_quals   (409)
    absdcl1  ->  absdcl1 . LEFT_RIGHT type_quals   (410)
    absdcl1  ->  absdcl1 . '[' nonmomentary_expr ']'   (411)
    absdcl1  ->  absdcl1 . '[' ']'   (412)
    absdcl1  ->  TYPENAME_SCOPE type_quals absdcl1 .   (417)

    LEFT_RIGHT	shift  464
    '(' 	shift  465
    '[' 	shift  466

    $default	reduce  417  (absdcl1)



state 664

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    absdcl1  ->  absdcl1 LEFT_RIGHT type_quals .   (410)

    TYPE_QUAL	shift  277

    $default	reduce  410  (absdcl1)



state 665

    absdcl1  ->  absdcl1 '(' parmlist . ')' type_quals   (409)

    ')' 	shift  814



state 666

    absdcl1  ->  absdcl1 '[' ']' .   (412)

    $default	reduce  412  (absdcl1)



state 667

    absdcl1  ->  absdcl1 '[' nonmomentary_expr . ']'   (411)

    ']' 	shift  815



state 668

    aggr  ->  DYNAMIC '(' string ')' AGGR .   (272)

    $default	reduce  272  (aggr)



state 669

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    notype_declarator  ->  TYPENAME_SCOPE see_typename TYPENAME LEFT_RIGHT type_quals .   (395)

    TYPE_QUAL	shift  277

    $default	reduce  395  (notype_declarator)



state 670

    notype_declarator  ->  TYPENAME_SCOPE see_typename TYPENAME '(' error . ')' type_quals   (396)

    ')' 	shift  816



state 671

    nonnull_exprlist  ->  nonnull_exprlist . ',' expr_no_commas   (91)
    nonnull_exprlist  ->  nonnull_exprlist . ',' error   (92)
    notype_declarator  ->  TYPENAME_SCOPE see_typename TYPENAME '(' nonnull_exprlist . ')' type_quals   (393)

    ',' 	shift  401
    ')' 	shift  817



state 672

    notype_declarator  ->  TYPENAME_SCOPE see_typename TYPENAME '(' parmlist . ')' type_quals   (394)

    ')' 	shift  818



state 673

    initdcl  ->  declarator maybe_raises maybeasm . maybe_attribute '=' @6 init   (237)
    initdcl  ->  declarator maybe_raises maybeasm . maybe_attribute   (238)

    ATTRIBUTE	shift  513
    maybe_attribute	shift  819

    $default	reduce  242  (maybe_attribute)



state 674

    base_class_list  ->  base_class_list ',' identifier .   (284)

    $default	reduce  284  (base_class_list)



state 675

    base_class_list  ->  base_class_list ',' base_class_visibility_list . identifier   (285)
    base_class_visibility_list  ->  base_class_visibility_list . PUBLIC   (289)
    base_class_visibility_list  ->  base_class_visibility_list . PRIVATE   (290)
    base_class_visibility_list  ->  base_class_visibility_list . SCSPEC   (291)

    IDENTIFIER	shift  97
    TYPENAME	shift  98
    SCSPEC	shift  475
    PRIVATE	shift  476
    PUBLIC	shift  477
    identifier	shift  820



state 676

    component_decl  ->  ':' expr_no_commas ';' .   (316)

    $default	reduce  316  (component_decl)



state 677

    component_decl  ->  ':' expr_no_commas '}' .   (317)

    $default	reduce  317  (component_decl)



state 678

    fn.def2  ->  dummy_decl notype_declarator maybe_raises .   (50)
    component_decl  ->  dummy_decl notype_declarator maybe_raises . ';'   (321)
    component_decl  ->  dummy_decl notype_declarator maybe_raises . '}'   (322)

    ';' 	shift  821
    '}' 	shift  822

    $default	reduce  50  (fn.def2)



state 679

    component_declarator0  ->  IDENTIFIER ':' . expr_no_commas   (327)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  823
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 680

    component_decl  ->  typed_declspecs LEFT_RIGHT ';' .   (307)

    $default	reduce  307  (component_decl)



state 681

    component_decl  ->  typed_declspecs LEFT_RIGHT '}' .   (308)

    $default	reduce  308  (component_decl)



state 682

    fn.def2  ->  typed_declspecs LEFT_RIGHT type_quals . maybe_raises   (45)
    type_quals  ->  type_quals . TYPE_QUAL   (345)

    TYPE_QUAL	shift  277
    RAISES	shift  165
    maybe_raises	shift  824

    $default	reduce  531  (maybe_raises)



state 683

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)
    component_declarator0  ->  TYPENAME_COLON expr_no_commas .   (328)

    ASSIGN	shift  402
    '=' 	shift  403
    '?' 	shift  404
    OROR	shift  405
    ANDAND	shift  406
    '|' 	shift  407
    '^' 	shift  408
    '&' 	shift  409
    MIN_MAX	shift  410
    EQCOMPARE	shift  411
    ARITHCOMPARE	shift  412
    LSHIFT	shift  413
    RSHIFT	shift  414
    '+' 	shift  415
    '-' 	shift  416
    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419

    $default	reduce  328  (component_declarator0)



state 684

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)
    component_declarator0  ->  ':' expr_no_commas .   (329)

    ASSIGN	shift  402
    '=' 	shift  403
    '?' 	shift  404
    OROR	shift  405
    ANDAND	shift  406
    '|' 	shift  407
    '^' 	shift  408
    '&' 	shift  409
    MIN_MAX	shift  410
    EQCOMPARE	shift  411
    ARITHCOMPARE	shift  412
    LSHIFT	shift  413
    RSHIFT	shift  414
    '+' 	shift  415
    '-' 	shift  416
    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419

    $default	reduce  329  (component_declarator0)



state 685

    declmods  ->  dummy_decl . TYPE_QUAL   (204)
    declmods  ->  dummy_decl . SCSPEC   (205)
    x_typespec  ->  dummy_decl . TYPESPEC   (222)
    x_typespec  ->  dummy_decl . structsp   (223)
    x_typespec  ->  dummy_decl . TYPENAME   (224)
    x_typespec  ->  dummy_decl . TYPEOF '(' expr ')'   (225)
    x_typespec  ->  dummy_decl . TYPEOF '(' typename ')'   (226)
    after_type_declarator  ->  '(' dummy_decl . after_type_declarator_no_typename ')'   (354)

    TYPENAME	shift  256
    SCSPEC	shift  31
    TYPESPEC	shift  32
    TYPE_QUAL	shift  33
    ENUM	shift  34
    TYPEOF	shift  35
    AGGR	shift  36
    DYNAMIC	shift  38
    '&' 	shift  347
    '*' 	shift  348
    PAREN_STAR_PAREN	shift  349
    PAREN_X_SCOPE_STAR_PAREN	shift  350
    PAREN_X_SCOPE_REF_PAREN	shift  351
    '(' 	shift  352
    structsp	shift  48
    aggr	shift  49
    class_head	shift  50
    after_type_declarator_no_typename	shift  353



state 686

    fn.def2  ->  typed_declspecs '(' parmlist . ')' type_quals maybe_raises   (44)
    component_decl  ->  typed_declspecs '(' parmlist . ')' ';'   (305)
    component_decl  ->  typed_declspecs '(' parmlist . ')' '}'   (306)

    ')' 	shift  825



state 687

    fn.def2  ->  typed_declspecs declarator maybe_raises .   (46)
    component_declarator0  ->  declarator maybe_raises . maybeasm opt.init   (326)

    ASM 	shift  320
    maybeasm	shift  826

    '{' 	reduce  46  (fn.def2)
    ':' 	reduce  46  (fn.def2)
    ';' 	[reduce  231  (maybeasm)]
    $default	reduce  231  (maybeasm)



state 688

    components  ->  components ',' . component_declarator   (325)

    IDENTIFIER	shift  827
    TYPENAME	shift  59
    OPERATOR	shift  37
    LEFT_RIGHT	shift  39
    SCOPE	shift  40
    TYPENAME_COLON	shift  828
    ':' 	shift  829
    '&' 	shift  60
    '*' 	shift  61
    PAREN_STAR_PAREN	shift  62
    PAREN_X_SCOPE_STAR_PAREN	shift  63
    PAREN_X_SCOPE_REF_PAREN	shift  64
    '(' 	shift  65
    TYPENAME_SCOPE	shift  44
    '~' 	shift  45
    declarator	shift  830
    component_declarator	shift  831
    after_type_declarator	shift  70
    notype_declarator	shift  71
    operator_name	shift  52



state 689

    component_decl  ->  typed_declspecs components ';' .   (304)

    $default	reduce  304  (component_decl)



state 690

    component_decl  ->  declmods LEFT_RIGHT ';' .   (314)

    $default	reduce  314  (component_decl)



state 691

    component_decl  ->  declmods LEFT_RIGHT '}' .   (315)

    $default	reduce  315  (component_decl)



state 692

    fn.def2  ->  declmods LEFT_RIGHT type_quals . maybe_raises   (48)
    type_quals  ->  type_quals . TYPE_QUAL   (345)

    TYPE_QUAL	shift  277
    RAISES	shift  165
    maybe_raises	shift  832

    $default	reduce  531  (maybe_raises)



state 693

    fn.def2  ->  declmods '(' parmlist . ')' type_quals maybe_raises   (47)
    component_decl  ->  declmods '(' parmlist . ')' ';'   (312)
    component_decl  ->  declmods '(' parmlist . ')' '}'   (313)

    ')' 	shift  833



state 694

    component_decl  ->  declmods declarator ';' .   (310)

    $default	reduce  310  (component_decl)



state 695

    fn.def2  ->  declmods declarator maybe_raises .   (49)
    component_declarator0  ->  declarator maybe_raises . maybeasm opt.init   (326)

    ASM 	shift  320
    maybeasm	shift  826

    '{' 	reduce  49  (fn.def2)
    ':' 	reduce  49  (fn.def2)
    ';' 	[reduce  231  (maybeasm)]
    $default	reduce  231  (maybeasm)



state 696

    component_decl  ->  declmods components ';' .   (309)

    $default	reduce  309  (component_decl)



state 697

    component_decl  ->  declmods components '}' .   (311)

    $default	reduce  311  (component_decl)



state 698

    opt.component_decl_list  ->  opt.component_decl_list PRIVATE ':' . component_decl_list   (296)
    opt.component_decl_list  ->  opt.component_decl_list PRIVATE ':' .   (299)

    error	shift  294
    ':' 	shift  295
    dummy_decl	shift  296
    fn.def2	shift  297
    typed_declspecs	shift  298
    declmods	shift  299
    x_typespec	shift  19
    component_decl_list	shift  834
    component_decl	shift  302

    IDENTIFIER	reduce  19  (dummy_decl)
    TYPENAME	reduce  19  (dummy_decl)
    SCSPEC	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    PRIVATE	[reduce  299  (opt.component_decl_list)]
    PUBLIC	reduce  299  (opt.component_decl_list)
    PROTECTED	reduce  299  (opt.component_decl_list)
    OPERATOR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)
    LEFT_RIGHT	reduce  19  (dummy_decl)
    SCOPE	reduce  19  (dummy_decl)
    '&' 	reduce  19  (dummy_decl)
    '*' 	reduce  19  (dummy_decl)
    '(' 	reduce  19  (dummy_decl)
    TYPENAME_SCOPE	reduce  19  (dummy_decl)
    '}' 	reduce  299  (opt.component_decl_list)
    '~' 	reduce  19  (dummy_decl)



state 699

    opt.component_decl_list  ->  opt.component_decl_list PUBLIC ':' . component_decl_list   (295)
    opt.component_decl_list  ->  opt.component_decl_list PUBLIC ':' .   (298)

    error	shift  294
    ':' 	shift  295
    dummy_decl	shift  296
    fn.def2	shift  297
    typed_declspecs	shift  298
    declmods	shift  299
    x_typespec	shift  19
    component_decl_list	shift  835
    component_decl	shift  302

    IDENTIFIER	reduce  19  (dummy_decl)
    TYPENAME	reduce  19  (dummy_decl)
    SCSPEC	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    PRIVATE	[reduce  298  (opt.component_decl_list)]
    PUBLIC	reduce  298  (opt.component_decl_list)
    PROTECTED	reduce  298  (opt.component_decl_list)
    OPERATOR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)
    LEFT_RIGHT	reduce  19  (dummy_decl)
    SCOPE	reduce  19  (dummy_decl)
    '&' 	reduce  19  (dummy_decl)
    '*' 	reduce  19  (dummy_decl)
    '(' 	reduce  19  (dummy_decl)
    TYPENAME_SCOPE	reduce  19  (dummy_decl)
    '}' 	reduce  298  (opt.component_decl_list)
    '~' 	reduce  19  (dummy_decl)



state 700

    opt.component_decl_list  ->  opt.component_decl_list PROTECTED ':' . component_decl_list   (297)
    opt.component_decl_list  ->  opt.component_decl_list PROTECTED ':' .   (300)

    error	shift  294
    ':' 	shift  295
    dummy_decl	shift  296
    fn.def2	shift  297
    typed_declspecs	shift  298
    declmods	shift  299
    x_typespec	shift  19
    component_decl_list	shift  836
    component_decl	shift  302

    IDENTIFIER	reduce  19  (dummy_decl)
    TYPENAME	reduce  19  (dummy_decl)
    SCSPEC	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    PRIVATE	[reduce  300  (opt.component_decl_list)]
    PUBLIC	reduce  300  (opt.component_decl_list)
    PROTECTED	reduce  300  (opt.component_decl_list)
    OPERATOR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)
    LEFT_RIGHT	reduce  19  (dummy_decl)
    SCOPE	reduce  19  (dummy_decl)
    '&' 	reduce  19  (dummy_decl)
    '*' 	reduce  19  (dummy_decl)
    '(' 	reduce  19  (dummy_decl)
    TYPENAME_SCOPE	reduce  19  (dummy_decl)
    '}' 	reduce  300  (opt.component_decl_list)
    '~' 	reduce  19  (dummy_decl)



state 701

    structsp  ->  class_head LC opt.component_decl_list '}' ';' .   (264)

    $default	reduce  264  (structsp)



state 702

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    notype_declarator  ->  notype_declarator '(' error ')' type_quals .   (378)

    TYPE_QUAL	shift  277

    $default	reduce  378  (notype_declarator)



state 703

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    notype_declarator  ->  notype_declarator '(' nonnull_exprlist ')' type_quals .   (375)

    TYPE_QUAL	shift  277

    $default	reduce  375  (notype_declarator)



state 704

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    notype_declarator  ->  notype_declarator '(' parmlist ')' type_quals .   (376)

    TYPE_QUAL	shift  277

    $default	reduce  376  (notype_declarator)



state 705

    raise_identifiers  ->  raise_identifiers ',' raise_identifier .   (541)

    $default	reduce  541  (raise_identifiers)



state 706

    string  ->  string . STRING   (184)
    maybeasm  ->  ASM '(' string . ')'   (232)

    STRING	shift  202
    ')' 	shift  837



state 707

    maybe_attribute  ->  ATTRIBUTE '(' . '(' attribute_list ')' ')'   (243)

    '(' 	shift  838



state 708

    notype_initdcl0  ->  notype_declarator maybe_raises maybeasm maybe_attribute '=' . @7 init   (240)

    @7  	shift  839

    $default	reduce  239  (@7)



state 709

    member_init  ->  '(' exprlist ')' .   (61)

    $default	reduce  61  (member_init)



state 710

    member_init_list  ->  member_init_list ',' member_init .   (59)

    $default	reduce  59  (member_init_list)



state 711

    member_init  ->  identifier '(' exprlist . ')'   (63)

    ')' 	shift  840



state 712

    member_init  ->  scoped_identifier identifier LEFT_RIGHT .   (66)

    $default	reduce  66  (member_init)



state 713

    member_init  ->  scoped_identifier identifier '(' . exprlist ')'   (65)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    exprlist	shift  841
    nonnull_exprlist	shift  336
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  307
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    ')' 	reduce  88  (exprlist)
    $default	reduce  19  (dummy_decl)



state 714

    init  ->  '{' initlist ',' . '}'   (254)
    initlist  ->  initlist ',' . init   (257)

    error	shift  329
    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '{' 	shift  330
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '}' 	shift  842
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  332
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    init	shift  843
    scoped_identifier	shift  251
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)



state 715

    init  ->  '{' initlist '}' .   (253)

    $default	reduce  253  (init)



state 716

    compstmt  ->  '{' .pushlevel error '}' .   (430)

    $default	reduce  430  (compstmt)



state 717

    stmt  ->  IDENTIFIER ':' . @27 stmt   (471)

    @27 	shift  844

    $default	reduce  470  (@27)



state 718

    simple_if  ->  IF '(' . expr ')' @11 stmt   (432)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    expr	shift  845
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 719

    stmt  ->  WHILE @13 . '(' expr ')' @14 stmt   (441)

    '(' 	shift  846



state 720

    stmt  ->  DO @15 . stmt WHILE @16 '(' expr ')' ';'   (444)

    IDENTIFIER	shift  528
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    IF  	shift  529
    WHILE	shift  530
    DO  	shift  531
    FOR 	shift  532
    SWITCH	shift  533
    CASE	shift  534
    DEFAULT	shift  535
    BREAK	shift  536
    CONTINUE	shift  537
    RETURN	shift  538
    GOTO	shift  539
    ASM 	shift  540
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    TYPENAME_COLON	shift  541
    '{' 	shift  177
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    RAISE	shift  542
    TRY 	shift  543
    TYPENAME_SCOPE	shift  232
    ';' 	shift  544
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  305
    unop	shift  236
    expr	shift  545
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    decl	shift  546
    typed_declspecs	shift  547
    declmods	shift  548
    x_typespec	shift  308
    scoped_identifier	shift  251
    compstmt	shift  550
    simple_if	shift  551
    stmt	shift  847
    try 	shift  553
    try_head	shift  554
    forhead.1	shift  555
    forhead.2	shift  556
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 721

    forhead.1  ->  FOR '(' . ';'   (491)
    forhead.1  ->  FOR '(' . expr ';'   (492)
    forhead.1  ->  FOR '(' . '{' '}'   (493)
    forhead.2  ->  FOR '(' . decl   (494)
    forhead.2  ->  FOR '(' . error ';'   (495)
    forhead.2  ->  FOR '(' . '{' .pushlevel stmts '}'   (496)
    forhead.2  ->  FOR '(' . '{' .pushlevel error '}'   (497)

    error	shift  848
    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '{' 	shift  849
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    ';' 	shift  850
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  305
    unop	shift  236
    expr	shift  851
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    decl	shift  852
    typed_declspecs	shift  547
    declmods	shift  548
    x_typespec	shift  308
    scoped_identifier	shift  251
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    SCSPEC	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)



state 722

    stmt  ->  SWITCH '(' . expr ')' @23 stmt   (454)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    expr	shift  853
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 723

    stmt  ->  CASE expr . ':' @24 stmt   (456)
    stmt  ->  CASE expr . RANGE expr ':' @25 stmt   (458)

    ':' 	shift  854
    RANGE	shift  855



state 724

    stmt  ->  DEFAULT ':' . @26 stmt   (460)

    @26 	shift  856

    $default	reduce  459  (@26)



state 725

    stmt  ->  BREAK ';' .   (461)

    $default	reduce  461  (stmt)



state 726

    stmt  ->  CONTINUE ';' .   (462)

    $default	reduce  462  (stmt)



state 727

    stmt  ->  RETURN ';' .   (463)

    $default	reduce  463  (stmt)



state 728

    stmt  ->  RETURN expr . ';'   (464)

    ';' 	shift  857



state 729

    stmt  ->  GOTO identifier . ';'   (469)

    ';' 	shift  858



state 730

    maybe_type_qual  ->  TYPE_QUAL .   (499)

    $default	reduce  499  (maybe_type_qual)



state 731

    stmt  ->  ASM maybe_type_qual . '(' string ')' ';'   (465)
    stmt  ->  ASM maybe_type_qual . '(' string ':' asm_operands ')' ';'   (466)
    stmt  ->  ASM maybe_type_qual . '(' string ':' asm_operands ':' asm_operands ')' ';'   (467)
    stmt  ->  ASM maybe_type_qual . '(' string ':' asm_operands ':' asm_operands ':' asm_clobbers ')' ';'   (468)

    '(' 	shift  859



state 732

    stmt  ->  TYPENAME_COLON @28 . stmt   (473)

    IDENTIFIER	shift  528
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    IF  	shift  529
    WHILE	shift  530
    DO  	shift  531
    FOR 	shift  532
    SWITCH	shift  533
    CASE	shift  534
    DEFAULT	shift  535
    BREAK	shift  536
    CONTINUE	shift  537
    RETURN	shift  538
    GOTO	shift  539
    ASM 	shift  540
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    TYPENAME_COLON	shift  541
    '{' 	shift  177
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    RAISE	shift  542
    TRY 	shift  543
    TYPENAME_SCOPE	shift  232
    ';' 	shift  544
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  305
    unop	shift  236
    expr	shift  545
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    decl	shift  546
    typed_declspecs	shift  547
    declmods	shift  548
    x_typespec	shift  308
    scoped_identifier	shift  251
    compstmt	shift  550
    simple_if	shift  551
    stmt	shift  860
    try 	shift  553
    try_head	shift  554
    forhead.1	shift  555
    forhead.2	shift  556
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 733

    stmt  ->  RAISE raise_identifier . '(' exprlist ')' ';'   (475)
    stmt  ->  RAISE raise_identifier . LEFT_RIGHT ';'   (476)

    LEFT_RIGHT	shift  861
    '(' 	shift  862



state 734

    try  ->  TRY '{' . '}'   (481)
    try_head  ->  TRY '{' . @30 .pushlevel   (485)

    '}' 	shift  863
    @30 	shift  864

    $default	reduce  484  (@30)



state 735

    stmt  ->  expr ';' .   (435)

    $default	reduce  435  (stmt)



state 736

    decl  ->  typed_declspecs ';' .   (192)

    $default	reduce  192  (decl)



state 737

    decl  ->  typed_declspecs declarator . ';'   (189)
    initdcl0  ->  declarator . maybe_raises maybeasm maybe_attribute '=' @5 init   (234)
    initdcl0  ->  declarator . maybe_raises maybeasm maybe_attribute   (235)

    RAISES	shift  165
    ';' 	shift  865
    maybe_raises	shift  866

    ';' 	[reduce  531  (maybe_raises)]
    $default	reduce  531  (maybe_raises)



state 738

    decl  ->  typed_declspecs initdecls . ';'   (188)
    initdecls  ->  initdecls . ',' initdcl   (228)

    ',' 	shift  189
    ';' 	shift  867



state 739

    decl  ->  declmods ';' .   (193)

    $default	reduce  193  (decl)



state 740

    decl  ->  declmods declarator . ';'   (191)

    ';' 	shift  868



state 741

    decl  ->  declmods notype_initdecls . ';'   (190)
    notype_initdecls  ->  notype_initdecls . ',' initdcl   (230)

    ',' 	shift  150
    ';' 	shift  869



state 742

    declarator  ->  notype_declarator .   (195)
    notype_initdcl0  ->  notype_declarator . maybe_raises maybeasm maybe_attribute '=' @7 init   (240)
    notype_initdcl0  ->  notype_declarator . maybe_raises maybeasm maybe_attribute   (241)
    notype_declarator  ->  notype_declarator . '(' nonnull_exprlist ')' type_quals   (375)
    notype_declarator  ->  notype_declarator . '(' parmlist ')' type_quals   (376)
    notype_declarator  ->  notype_declarator . LEFT_RIGHT type_quals   (377)
    notype_declarator  ->  notype_declarator . '(' error ')' type_quals   (378)
    notype_declarator  ->  notype_declarator . '[' nonmomentary_expr ']'   (382)
    notype_declarator  ->  notype_declarator . '[' ']'   (383)

    LEFT_RIGHT	shift  162
    '(' 	shift  163
    '[' 	shift  164
    RAISES	shift  165
    maybe_raises	shift  870

    ';' 	reduce  195  (declarator)
    ';' 	[reduce  531  (maybe_raises)]
    $default	reduce  531  (maybe_raises)



state 743

    errstmt  ->  error . ';'   (424)

    ';' 	shift  871



state 744

    compstmt  ->  '{' .pushlevel stmts '}' .   (429)

    $default	reduce  429  (compstmt)



state 745

    stmts  ->  stmts errstmt .   (423)

    $default	reduce  423  (stmts)



state 746

    stmts  ->  stmts stmt .   (422)

    $default	reduce  422  (stmts)



state 747

    stmt  ->  simple_if ELSE . @12 stmt   (437)

    @12 	shift  872

    $default	reduce  436  (@12)



state 748

    stmt  ->  try RERAISE . raise_identifiers   (479)

    IDENTIFIER	shift  313
    TYPENAME	shift  314
    SCOPE	shift  315
    TYPENAME_SCOPE	shift  232
    ALL 	shift  316
    scoped_identifier	shift  317
    raise_identifier	shift  318
    raise_identifiers	shift  873



state 749

    stmt  ->  try EXCEPT . identifier '{' @29 except_stmts '}'   (478)

    IDENTIFIER	shift  97
    TYPENAME	shift  98
    identifier	shift  874



state 750

    try  ->  try_head error . '}'   (483)

    '}' 	shift  875



state 751

    stmts  ->  stmts . stmt   (422)
    stmts  ->  stmts . errstmt   (423)
    try  ->  try_head stmts . '}'   (482)

    error	shift  743
    IDENTIFIER	shift  528
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    IF  	shift  529
    WHILE	shift  530
    DO  	shift  531
    FOR 	shift  532
    SWITCH	shift  533
    CASE	shift  534
    DEFAULT	shift  535
    BREAK	shift  536
    CONTINUE	shift  537
    RETURN	shift  538
    GOTO	shift  539
    ASM 	shift  540
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    TYPENAME_COLON	shift  541
    '{' 	shift  177
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    RAISE	shift  542
    TRY 	shift  543
    TYPENAME_SCOPE	shift  232
    ';' 	shift  544
    '}' 	shift  876
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  305
    unop	shift  236
    expr	shift  545
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    decl	shift  546
    typed_declspecs	shift  547
    declmods	shift  548
    x_typespec	shift  308
    scoped_identifier	shift  251
    errstmt	shift  745
    compstmt	shift  550
    simple_if	shift  551
    stmt	shift  746
    try 	shift  553
    try_head	shift  554
    forhead.1	shift  555
    forhead.2	shift  556
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    SCSPEC	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)



state 752

    stmt  ->  forhead.1 @17 . xexpr ';' @18 xexpr ')' @19 stmt   (448)

    error	shift  605
    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    expr	shift  606
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    xexpr	shift  877
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)
    ';' 	reduce  500  (xexpr)



state 753

    stmt  ->  forhead.2 @20 . xexpr ';' @21 xexpr ')' @22 stmt   (452)

    error	shift  605
    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    expr	shift  606
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    xexpr	shift  878
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)
    ';' 	reduce  500  (xexpr)



state 754

    after_type_declarator  ->  '(' '&' type_quals after_type_declarator ')' .   (359)

    $default	reduce  359  (after_type_declarator)



state 755

    after_type_declarator  ->  '(' '*' type_quals after_type_declarator ')' .   (355)

    $default	reduce  355  (after_type_declarator)



state 756

    after_type_declarator  ->  '&' . type_quals after_type_declarator   (361)

    type_quals	shift  879

    $default	reduce  344  (type_quals)



state 757

    after_type_declarator  ->  '*' . type_quals after_type_declarator   (360)

    type_quals	shift  880

    $default	reduce  344  (type_quals)



state 758

    after_type_declarator  ->  '(' . dummy_decl after_type_declarator_no_typename ')'   (354)
    after_type_declarator  ->  '(' . '*' type_quals after_type_declarator ')'   (355)
    after_type_declarator  ->  '(' . '&' type_quals after_type_declarator ')'   (359)

    '&' 	shift  881
    '*' 	shift  882
    dummy_decl	shift  185

    '&' 	[reduce  19  (dummy_decl)]
    '*' 	[reduce  19  (dummy_decl)]
    $default	reduce  19  (dummy_decl)



state 759

    after_type_declarator  ->  after_type_declarator . '(' nonnull_exprlist ')' type_quals   (348)
    after_type_declarator  ->  after_type_declarator . '(' parmlist ')' type_quals   (349)
    after_type_declarator  ->  after_type_declarator . LEFT_RIGHT type_quals   (350)
    after_type_declarator  ->  after_type_declarator . '(' error ')' type_quals   (351)
    after_type_declarator  ->  after_type_declarator . '[' nonmomentary_expr ']'   (352)
    after_type_declarator  ->  after_type_declarator . '[' ']'   (353)
    after_type_declarator_no_typename  ->  '&' type_quals after_type_declarator .   (374)

    LEFT_RIGHT	shift  191
    '(' 	shift  192
    '[' 	shift  193

    $default	reduce  374  (after_type_declarator_no_typename)



state 760

    after_type_declarator  ->  after_type_declarator . '(' nonnull_exprlist ')' type_quals   (348)
    after_type_declarator  ->  after_type_declarator . '(' parmlist ')' type_quals   (349)
    after_type_declarator  ->  after_type_declarator . LEFT_RIGHT type_quals   (350)
    after_type_declarator  ->  after_type_declarator . '(' error ')' type_quals   (351)
    after_type_declarator  ->  after_type_declarator . '[' nonmomentary_expr ']'   (352)
    after_type_declarator  ->  after_type_declarator . '[' ']'   (353)
    after_type_declarator_no_typename  ->  '*' type_quals after_type_declarator .   (373)

    LEFT_RIGHT	shift  191
    '(' 	shift  192
    '[' 	shift  193

    $default	reduce  373  (after_type_declarator_no_typename)



state 761

    after_type_declarator_no_typename  ->  after_type_declarator_no_typename . '(' nonnull_exprlist ')' type_quals   (363)
    after_type_declarator_no_typename  ->  after_type_declarator_no_typename . '(' parmlist ')' type_quals   (364)
    after_type_declarator_no_typename  ->  after_type_declarator_no_typename . LEFT_RIGHT type_quals   (365)
    after_type_declarator_no_typename  ->  after_type_declarator_no_typename . '(' error ')' type_quals   (366)
    after_type_declarator_no_typename  ->  after_type_declarator_no_typename . '[' nonmomentary_expr ']'   (367)
    after_type_declarator_no_typename  ->  after_type_declarator_no_typename . '[' ']'   (368)
    after_type_declarator_no_typename  ->  '(' dummy_decl after_type_declarator_no_typename . ')'   (369)

    LEFT_RIGHT	shift  562
    '(' 	shift  563
    '[' 	shift  564
    ')' 	shift  883



state 762

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    after_type_declarator_no_typename  ->  after_type_declarator_no_typename LEFT_RIGHT type_quals .   (365)

    TYPE_QUAL	shift  277

    $default	reduce  365  (after_type_declarator_no_typename)



state 763

    after_type_declarator_no_typename  ->  after_type_declarator_no_typename '(' error . ')' type_quals   (366)

    ')' 	shift  884



state 764

    nonnull_exprlist  ->  nonnull_exprlist . ',' expr_no_commas   (91)
    nonnull_exprlist  ->  nonnull_exprlist . ',' error   (92)
    after_type_declarator_no_typename  ->  after_type_declarator_no_typename '(' nonnull_exprlist . ')' type_quals   (363)

    ',' 	shift  401
    ')' 	shift  885



state 765

    after_type_declarator_no_typename  ->  after_type_declarator_no_typename '(' parmlist . ')' type_quals   (364)

    ')' 	shift  886



state 766

    after_type_declarator_no_typename  ->  after_type_declarator_no_typename '[' ']' .   (368)

    $default	reduce  368  (after_type_declarator_no_typename)



state 767

    after_type_declarator_no_typename  ->  after_type_declarator_no_typename '[' nonmomentary_expr . ']'   (367)

    ']' 	shift  887



state 768

    initdcl0  ->  declarator maybe_raises maybeasm maybe_attribute '=' . @5 init   (234)

    @5  	shift  888

    $default	reduce  233  (@5)



state 769

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    after_type_declarator  ->  after_type_declarator '(' error ')' type_quals .   (351)

    TYPE_QUAL	shift  277

    $default	reduce  351  (after_type_declarator)



state 770

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    after_type_declarator  ->  after_type_declarator '(' nonnull_exprlist ')' type_quals .   (348)

    TYPE_QUAL	shift  277

    $default	reduce  348  (after_type_declarator)



state 771

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    after_type_declarator  ->  after_type_declarator '(' parmlist ')' type_quals .   (349)

    TYPE_QUAL	shift  277

    $default	reduce  349  (after_type_declarator)



state 772

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    notype_declarator  ->  '&' type_quals . notype_declarator   (381)
    absdcl1  ->  '&' type_quals . absdcl1   (407)
    absdcl1  ->  '&' type_quals .   (408)

    IDENTIFIER	shift  573
    TYPE_QUAL	shift  277
    OPERATOR	shift  37
    LEFT_RIGHT	shift  574
    SCOPE	shift  40
    '&' 	shift  575
    '*' 	shift  576
    PAREN_STAR_PAREN	shift  262
    PAREN_X_SCOPE_STAR_PAREN	shift  263
    PAREN_X_SCOPE_REF_PAREN	shift  264
    '(' 	shift  577
    '[' 	shift  266
    TYPENAME_SCOPE	shift  578
    '~' 	shift  45
    notype_declarator	shift  279
    absdcl1	shift  658
    operator_name	shift  52

    $default	reduce  408  (absdcl1)



state 773

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    notype_declarator  ->  '*' type_quals . notype_declarator   (380)
    absdcl1  ->  '*' type_quals . absdcl1   (402)
    absdcl1  ->  '*' type_quals .   (403)

    IDENTIFIER	shift  573
    TYPE_QUAL	shift  277
    OPERATOR	shift  37
    LEFT_RIGHT	shift  574
    SCOPE	shift  40
    '&' 	shift  575
    '*' 	shift  576
    PAREN_STAR_PAREN	shift  262
    PAREN_X_SCOPE_STAR_PAREN	shift  263
    PAREN_X_SCOPE_REF_PAREN	shift  264
    '(' 	shift  577
    '[' 	shift  266
    TYPENAME_SCOPE	shift  578
    '~' 	shift  45
    notype_declarator	shift  280
    absdcl1	shift  659
    operator_name	shift  52

    $default	reduce  403  (absdcl1)



state 774

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    notype_declarator  ->  TYPENAME_SCOPE type_quals . notype_declarator   (391)
    absdcl1  ->  TYPENAME_SCOPE type_quals . absdcl1   (417)
    absdcl1  ->  TYPENAME_SCOPE type_quals .   (419)
    see_typename  ->  type_quals .   (525)

    IDENTIFIER	shift  573
    TYPE_QUAL	shift  277
    OPERATOR	shift  37
    LEFT_RIGHT	shift  574
    SCOPE	shift  40
    '&' 	shift  575
    '*' 	shift  576
    PAREN_STAR_PAREN	shift  262
    PAREN_X_SCOPE_STAR_PAREN	shift  263
    PAREN_X_SCOPE_REF_PAREN	shift  264
    '(' 	shift  577
    '[' 	shift  266
    TYPENAME_SCOPE	shift  578
    '~' 	shift  45
    notype_declarator	shift  282
    absdcl1	shift  663
    operator_name	shift  52

    TYPENAME	reduce  525  (see_typename)
    $default	reduce  419  (absdcl1)



state 775

    fn.def1  ->  dummy_decl TYPENAME '(' parmlist ')' type_quals maybe_raises .   (41)

    $default	reduce  41  (fn.def1)



state 776

    bad_parm  ->  dummy_decl absdcl .   (528)

    $default	reduce  528  (bad_parm)



state 777

    notype_declarator  ->  notype_declarator . '(' nonnull_exprlist ')' type_quals   (375)
    notype_declarator  ->  notype_declarator . '(' parmlist ')' type_quals   (376)
    notype_declarator  ->  notype_declarator . LEFT_RIGHT type_quals   (377)
    notype_declarator  ->  notype_declarator . '(' error ')' type_quals   (378)
    notype_declarator  ->  notype_declarator . '[' nonmomentary_expr ']'   (382)
    notype_declarator  ->  notype_declarator . '[' ']'   (383)
    bad_parm  ->  dummy_decl notype_declarator .   (527)

    LEFT_RIGHT	shift  162
    '(' 	shift  163
    '[' 	shift  164

    $default	reduce  527  (bad_parm)



state 778

    parms  ->  parms ',' parm opt.init .   (519)

    $default	reduce  519  (parms)



state 779

    parms  ->  parms ',' bad_parm opt.init .   (520)

    $default	reduce  520  (parms)



state 780

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)
    enumerator  ->  identifier '=' expr_no_commas .   (337)

    ASSIGN	shift  402
    '=' 	shift  403
    '?' 	shift  404
    OROR	shift  405
    ANDAND	shift  406
    '|' 	shift  407
    '^' 	shift  408
    '&' 	shift  409
    MIN_MAX	shift  410
    EQCOMPARE	shift  411
    ARITHCOMPARE	shift  412
    LSHIFT	shift  413
    RSHIFT	shift  414
    '+' 	shift  415
    '-' 	shift  416
    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419

    $default	reduce  337  (enumerator)



state 781

    enumlist  ->  enumlist ',' enumerator .   (335)

    $default	reduce  335  (enumlist)



state 782

    structsp  ->  ENUM '{' @9 enumlist maybecomma_warn '}' .   (261)

    $default	reduce  261  (structsp)



state 783

    structsp  ->  ENUM identifier '{' @8 enumlist maybecomma_warn . '}'   (259)

    '}' 	shift  889



state 784

    unary_expr  ->  SIZEOF '(' typename ')' .   (99)

    $default	reduce  99  (unary_expr)



state 785

    unary_expr  ->  ALIGNOF '(' typename ')' .   (101)

    $default	reduce  101  (unary_expr)



state 786

    new  ->  NEW DYNAMIC '(' string . ')'   (179)
    string  ->  string . STRING   (184)

    STRING	shift  202
    ')' 	shift  890



state 787

    new  ->  NEW '{' nonnull_exprlist '}' .   (177)

    $default	reduce  177  (new)



state 788

    primary  ->  '(' @3 compstmt ')' .   (144)

    $default	reduce  144  (primary)



state 789

    cast_expr  ->  '(' typename ')' '{' . initlist maybecomma '}'   (112)

    error	shift  329
    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '{' 	shift  330
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  332
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    init	shift  522
    initlist	shift  891
    scoped_identifier	shift  251
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)



state 790

    cast_expr  ->  '(' typename ')' expr_no_commas .   (111)
    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)


    $default	reduce  111  (cast_expr)



state 791

    primary  ->  dummy_decl TYPE_QUAL '(' exprlist . ')'   (153)

    ')' 	shift  892



state 792

    expr_no_commas  ->  expr_no_commas '?' xexpr ':' . expr_no_commas   (129)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  893
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 793

    primary  ->  primary '(' exprlist ')' .   (145)

    $default	reduce  145  (primary)



state 794

    primary  ->  primary '[' expr ']' .   (147)

    $default	reduce  147  (primary)



state 795

    unary_expr  ->  new '(' typename ')' .   (106)

    $default	reduce  106  (unary_expr)



state 796

    unary_expr  ->  new x_typespec '(' exprlist . ')'   (103)

    ')' 	shift  894



state 797

    unary_expr  ->  new typename '=' init .   (105)

    $default	reduce  105  (unary_expr)



state 798

    unary_expr  ->  delete '[' expr ']' . cast_expr   (109)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  895
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  381
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 799

    primary_no_id  ->  '(' error ')' .   (166)

    $default	reduce  166  (primary_no_id)



state 800

    primary_no_id  ->  '(' expr ')' .   (165)

    $default	reduce  165  (primary_no_id)



state 801

    primary_no_id  ->  '(' @4 compstmt . ')'   (168)

    ')' 	shift  896



state 802

    expr_no_commas  ->  object '(' typename ')' . expr_no_commas   (135)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  897
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 803

    primary  ->  object identifier_or_opname '(' exprlist . ')'   (161)

    ')' 	shift  898



state 804

    identifier_or_opname  ->  wrapper scoped_identifier IDENTIFIER .   (76)

    $default	reduce  76  (identifier_or_opname)



state 805

    identifier_or_opname  ->  wrapper scoped_identifier operator_name .   (77)

    $default	reduce  77  (identifier_or_opname)



state 806

    primary_no_id  ->  primary_no_id '(' exprlist . ')'   (169)

    ')' 	shift  899



state 807

    primary_no_id  ->  primary_no_id '[' expr . ']'   (171)

    ']' 	shift  900



state 808

    primary  ->  object scoped_identifier identifier_or_opname LEFT_RIGHT .   (164)

    $default	reduce  164  (primary)



state 809

    primary  ->  object scoped_identifier identifier_or_opname '(' . exprlist ')'   (163)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    exprlist	shift  901
    nonnull_exprlist	shift  336
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  307
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    ')' 	reduce  88  (exprlist)
    $default	reduce  19  (dummy_decl)



state 810

    primary  ->  x_typespec '(' exprlist ')' .   (154)

    $default	reduce  154  (primary)



state 811

    primary  ->  scoped_identifier identifier_or_opname '(' exprlist . ')'   (159)

    ')' 	shift  902



state 812

    absdcl1  ->  absdcl1 . '(' parmlist ')' type_quals   (409)
    absdcl1  ->  absdcl1 . LEFT_RIGHT type_quals   (410)
    absdcl1  ->  absdcl1 . '[' nonmomentary_expr ']'   (411)
    absdcl1  ->  absdcl1 . '[' ']'   (412)
    absdcl1  ->  IDENTIFIER SCOPE type_quals absdcl1 .   (418)

    LEFT_RIGHT	shift  464
    '(' 	shift  465
    '[' 	shift  466

    $default	reduce  418  (absdcl1)



state 813

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    absdcl1  ->  '(' parmlist ')' type_quals .   (413)

    TYPE_QUAL	shift  277

    $default	reduce  413  (absdcl1)



state 814

    absdcl1  ->  absdcl1 '(' parmlist ')' . type_quals   (409)

    type_quals	shift  903

    $default	reduce  344  (type_quals)



state 815

    absdcl1  ->  absdcl1 '[' nonmomentary_expr ']' .   (411)

    $default	reduce  411  (absdcl1)



state 816

    notype_declarator  ->  TYPENAME_SCOPE see_typename TYPENAME '(' error ')' . type_quals   (396)

    type_quals	shift  904

    $default	reduce  344  (type_quals)



state 817

    notype_declarator  ->  TYPENAME_SCOPE see_typename TYPENAME '(' nonnull_exprlist ')' . type_quals   (393)

    type_quals	shift  905

    $default	reduce  344  (type_quals)



state 818

    notype_declarator  ->  TYPENAME_SCOPE see_typename TYPENAME '(' parmlist ')' . type_quals   (394)

    type_quals	shift  906

    $default	reduce  344  (type_quals)



state 819

    initdcl  ->  declarator maybe_raises maybeasm maybe_attribute . '=' @6 init   (237)
    initdcl  ->  declarator maybe_raises maybeasm maybe_attribute .   (238)

    '=' 	shift  907

    $default	reduce  238  (initdcl)



state 820

    base_class_list  ->  base_class_list ',' base_class_visibility_list identifier .   (285)

    $default	reduce  285  (base_class_list)



state 821

    component_decl  ->  dummy_decl notype_declarator maybe_raises ';' .   (321)

    $default	reduce  321  (component_decl)



state 822

    component_decl  ->  dummy_decl notype_declarator maybe_raises '}' .   (322)

    $default	reduce  322  (component_decl)



state 823

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)
    component_declarator0  ->  IDENTIFIER ':' expr_no_commas .   (327)

    ASSIGN	shift  402
    '=' 	shift  403
    '?' 	shift  404
    OROR	shift  405
    ANDAND	shift  406
    '|' 	shift  407
    '^' 	shift  408
    '&' 	shift  409
    MIN_MAX	shift  410
    EQCOMPARE	shift  411
    ARITHCOMPARE	shift  412
    LSHIFT	shift  413
    RSHIFT	shift  414
    '+' 	shift  415
    '-' 	shift  416
    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419

    $default	reduce  327  (component_declarator0)



state 824

    fn.def2  ->  typed_declspecs LEFT_RIGHT type_quals maybe_raises .   (45)

    $default	reduce  45  (fn.def2)



state 825

    fn.def2  ->  typed_declspecs '(' parmlist ')' . type_quals maybe_raises   (44)
    component_decl  ->  typed_declspecs '(' parmlist ')' . ';'   (305)
    component_decl  ->  typed_declspecs '(' parmlist ')' . '}'   (306)

    ';' 	shift  908
    '}' 	shift  909
    type_quals	shift  910

    $default	reduce  344  (type_quals)



state 826

    component_declarator0  ->  declarator maybe_raises maybeasm . opt.init   (326)

    '=' 	shift  170
    opt.init	shift  911

    $default	reduce  529  (opt.init)



state 827

    component_declarator  ->  IDENTIFIER . ':' expr_no_commas   (331)
    notype_declarator  ->  IDENTIFIER .   (384)

    ':' 	shift  912

    $default	reduce  384  (notype_declarator)



state 828

    component_declarator  ->  TYPENAME_COLON . expr_no_commas   (332)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  913
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 829

    component_declarator  ->  ':' . expr_no_commas   (333)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  914
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 830

    component_declarator  ->  declarator . maybe_raises maybeasm opt.init   (330)

    RAISES	shift  165
    maybe_raises	shift  915

    $default	reduce  531  (maybe_raises)



state 831

    components  ->  components ',' component_declarator .   (325)

    $default	reduce  325  (components)



state 832

    fn.def2  ->  declmods LEFT_RIGHT type_quals maybe_raises .   (48)

    $default	reduce  48  (fn.def2)



state 833

    fn.def2  ->  declmods '(' parmlist ')' . type_quals maybe_raises   (47)
    component_decl  ->  declmods '(' parmlist ')' . ';'   (312)
    component_decl  ->  declmods '(' parmlist ')' . '}'   (313)

    ';' 	shift  916
    '}' 	shift  917
    type_quals	shift  918

    $default	reduce  344  (type_quals)



state 834

    opt.component_decl_list  ->  opt.component_decl_list PRIVATE ':' component_decl_list .   (296)
    component_decl_list  ->  component_decl_list . component_decl   (302)
    component_decl_list  ->  component_decl_list . ';'   (303)

    error	shift  294
    ':' 	shift  295
    ';' 	shift  499
    dummy_decl	shift  296
    fn.def2	shift  297
    typed_declspecs	shift  298
    declmods	shift  299
    x_typespec	shift  19
    component_decl	shift  500

    IDENTIFIER	reduce  19  (dummy_decl)
    TYPENAME	reduce  19  (dummy_decl)
    SCSPEC	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    PRIVATE	[reduce  296  (opt.component_decl_list)]
    PUBLIC	reduce  296  (opt.component_decl_list)
    PROTECTED	reduce  296  (opt.component_decl_list)
    OPERATOR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)
    LEFT_RIGHT	reduce  19  (dummy_decl)
    SCOPE	reduce  19  (dummy_decl)
    '&' 	reduce  19  (dummy_decl)
    '*' 	reduce  19  (dummy_decl)
    '(' 	reduce  19  (dummy_decl)
    TYPENAME_SCOPE	reduce  19  (dummy_decl)
    '}' 	reduce  296  (opt.component_decl_list)
    '~' 	reduce  19  (dummy_decl)



state 835

    opt.component_decl_list  ->  opt.component_decl_list PUBLIC ':' component_decl_list .   (295)
    component_decl_list  ->  component_decl_list . component_decl   (302)
    component_decl_list  ->  component_decl_list . ';'   (303)

    error	shift  294
    ':' 	shift  295
    ';' 	shift  499
    dummy_decl	shift  296
    fn.def2	shift  297
    typed_declspecs	shift  298
    declmods	shift  299
    x_typespec	shift  19
    component_decl	shift  500

    IDENTIFIER	reduce  19  (dummy_decl)
    TYPENAME	reduce  19  (dummy_decl)
    SCSPEC	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    PRIVATE	[reduce  295  (opt.component_decl_list)]
    PUBLIC	reduce  295  (opt.component_decl_list)
    PROTECTED	reduce  295  (opt.component_decl_list)
    OPERATOR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)
    LEFT_RIGHT	reduce  19  (dummy_decl)
    SCOPE	reduce  19  (dummy_decl)
    '&' 	reduce  19  (dummy_decl)
    '*' 	reduce  19  (dummy_decl)
    '(' 	reduce  19  (dummy_decl)
    TYPENAME_SCOPE	reduce  19  (dummy_decl)
    '}' 	reduce  295  (opt.component_decl_list)
    '~' 	reduce  19  (dummy_decl)



state 836

    opt.component_decl_list  ->  opt.component_decl_list PROTECTED ':' component_decl_list .   (297)
    component_decl_list  ->  component_decl_list . component_decl   (302)
    component_decl_list  ->  component_decl_list . ';'   (303)

    error	shift  294
    ':' 	shift  295
    ';' 	shift  499
    dummy_decl	shift  296
    fn.def2	shift  297
    typed_declspecs	shift  298
    declmods	shift  299
    x_typespec	shift  19
    component_decl	shift  500

    IDENTIFIER	reduce  19  (dummy_decl)
    TYPENAME	reduce  19  (dummy_decl)
    SCSPEC	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    PRIVATE	[reduce  297  (opt.component_decl_list)]
    PUBLIC	reduce  297  (opt.component_decl_list)
    PROTECTED	reduce  297  (opt.component_decl_list)
    OPERATOR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)
    LEFT_RIGHT	reduce  19  (dummy_decl)
    SCOPE	reduce  19  (dummy_decl)
    '&' 	reduce  19  (dummy_decl)
    '*' 	reduce  19  (dummy_decl)
    '(' 	reduce  19  (dummy_decl)
    TYPENAME_SCOPE	reduce  19  (dummy_decl)
    '}' 	reduce  297  (opt.component_decl_list)
    '~' 	reduce  19  (dummy_decl)



state 837

    maybeasm  ->  ASM '(' string ')' .   (232)

    $default	reduce  232  (maybeasm)



state 838

    maybe_attribute  ->  ATTRIBUTE '(' '(' . attribute_list ')' ')'   (243)

    IDENTIFIER	shift  919
    attribute_list	shift  920
    attrib	shift  921



state 839

    notype_initdcl0  ->  notype_declarator maybe_raises maybeasm maybe_attribute '=' @7 . init   (240)

    error	shift  329
    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '{' 	shift  330
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  332
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    init	shift  922
    scoped_identifier	shift  251
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)



state 840

    member_init  ->  identifier '(' exprlist ')' .   (63)

    $default	reduce  63  (member_init)



state 841

    member_init  ->  scoped_identifier identifier '(' exprlist . ')'   (65)

    ')' 	shift  923



state 842

    init  ->  '{' initlist ',' '}' .   (254)

    $default	reduce  254  (init)



state 843

    initlist  ->  initlist ',' init .   (257)

    $default	reduce  257  (initlist)



state 844

    stmt  ->  IDENTIFIER ':' @27 . stmt   (471)

    IDENTIFIER	shift  528
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    IF  	shift  529
    WHILE	shift  530
    DO  	shift  531
    FOR 	shift  532
    SWITCH	shift  533
    CASE	shift  534
    DEFAULT	shift  535
    BREAK	shift  536
    CONTINUE	shift  537
    RETURN	shift  538
    GOTO	shift  539
    ASM 	shift  540
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    TYPENAME_COLON	shift  541
    '{' 	shift  177
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    RAISE	shift  542
    TRY 	shift  543
    TYPENAME_SCOPE	shift  232
    ';' 	shift  544
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  305
    unop	shift  236
    expr	shift  545
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    decl	shift  546
    typed_declspecs	shift  547
    declmods	shift  548
    x_typespec	shift  308
    scoped_identifier	shift  251
    compstmt	shift  550
    simple_if	shift  551
    stmt	shift  924
    try 	shift  553
    try_head	shift  554
    forhead.1	shift  555
    forhead.2	shift  556
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 845

    simple_if  ->  IF '(' expr . ')' @11 stmt   (432)

    ')' 	shift  925



state 846

    stmt  ->  WHILE @13 '(' . expr ')' @14 stmt   (441)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    expr	shift  926
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 847

    stmt  ->  DO @15 stmt . WHILE @16 '(' expr ')' ';'   (444)

    WHILE	shift  927



state 848

    forhead.2  ->  FOR '(' error . ';'   (495)

    ';' 	shift  928



state 849

    forhead.1  ->  FOR '(' '{' . '}'   (493)
    forhead.2  ->  FOR '(' '{' . .pushlevel stmts '}'   (496)
    forhead.2  ->  FOR '(' '{' . .pushlevel error '}'   (497)

    '}' 	shift  929
    .pushlevel	shift  930

    $default	reduce  425  (.pushlevel)



state 850

    forhead.1  ->  FOR '(' ';' .   (491)

    $default	reduce  491  (forhead.1)



state 851

    forhead.1  ->  FOR '(' expr . ';'   (492)

    ';' 	shift  931



state 852

    forhead.2  ->  FOR '(' decl .   (494)

    $default	reduce  494  (forhead.2)



state 853

    stmt  ->  SWITCH '(' expr . ')' @23 stmt   (454)

    ')' 	shift  932



state 854

    stmt  ->  CASE expr ':' . @24 stmt   (456)

    @24 	shift  933

    $default	reduce  455  (@24)



state 855

    stmt  ->  CASE expr RANGE . expr ':' @25 stmt   (458)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    expr	shift  934
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 856

    stmt  ->  DEFAULT ':' @26 . stmt   (460)

    IDENTIFIER	shift  528
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    IF  	shift  529
    WHILE	shift  530
    DO  	shift  531
    FOR 	shift  532
    SWITCH	shift  533
    CASE	shift  534
    DEFAULT	shift  535
    BREAK	shift  536
    CONTINUE	shift  537
    RETURN	shift  538
    GOTO	shift  539
    ASM 	shift  540
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    TYPENAME_COLON	shift  541
    '{' 	shift  177
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    RAISE	shift  542
    TRY 	shift  543
    TYPENAME_SCOPE	shift  232
    ';' 	shift  544
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  305
    unop	shift  236
    expr	shift  545
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    decl	shift  546
    typed_declspecs	shift  547
    declmods	shift  548
    x_typespec	shift  308
    scoped_identifier	shift  251
    compstmt	shift  550
    simple_if	shift  551
    stmt	shift  935
    try 	shift  553
    try_head	shift  554
    forhead.1	shift  555
    forhead.2	shift  556
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 857

    stmt  ->  RETURN expr ';' .   (464)

    $default	reduce  464  (stmt)



state 858

    stmt  ->  GOTO identifier ';' .   (469)

    $default	reduce  469  (stmt)



state 859

    stmt  ->  ASM maybe_type_qual '(' . string ')' ';'   (465)
    stmt  ->  ASM maybe_type_qual '(' . string ':' asm_operands ')' ';'   (466)
    stmt  ->  ASM maybe_type_qual '(' . string ':' asm_operands ':' asm_operands ')' ';'   (467)
    stmt  ->  ASM maybe_type_qual '(' . string ':' asm_operands ':' asm_operands ':' asm_clobbers ')' ';'   (468)

    STRING	shift  89
    string	shift  936



state 860

    stmt  ->  TYPENAME_COLON @28 stmt .   (473)

    $default	reduce  473  (stmt)



state 861

    stmt  ->  RAISE raise_identifier LEFT_RIGHT . ';'   (476)

    ';' 	shift  937



state 862

    stmt  ->  RAISE raise_identifier '(' . exprlist ')' ';'   (475)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    exprlist	shift  938
    nonnull_exprlist	shift  336
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  307
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    ')' 	reduce  88  (exprlist)
    $default	reduce  19  (dummy_decl)



state 863

    try  ->  TRY '{' '}' .   (481)

    $default	reduce  481  (try)



state 864

    try_head  ->  TRY '{' @30 . .pushlevel   (485)

    .pushlevel	shift  939

    $default	reduce  425  (.pushlevel)



state 865

    decl  ->  typed_declspecs declarator ';' .   (189)

    $default	reduce  189  (decl)



state 866

    initdcl0  ->  declarator maybe_raises . maybeasm maybe_attribute '=' @5 init   (234)
    initdcl0  ->  declarator maybe_raises . maybeasm maybe_attribute   (235)

    ASM 	shift  320
    maybeasm	shift  354

    $default	reduce  231  (maybeasm)



state 867

    decl  ->  typed_declspecs initdecls ';' .   (188)

    $default	reduce  188  (decl)



state 868

    decl  ->  declmods declarator ';' .   (191)

    $default	reduce  191  (decl)



state 869

    decl  ->  declmods notype_initdecls ';' .   (190)

    $default	reduce  190  (decl)



state 870

    notype_initdcl0  ->  notype_declarator maybe_raises . maybeasm maybe_attribute '=' @7 init   (240)
    notype_initdcl0  ->  notype_declarator maybe_raises . maybeasm maybe_attribute   (241)

    ASM 	shift  320
    maybeasm	shift  321

    $default	reduce  231  (maybeasm)



state 871

    errstmt  ->  error ';' .   (424)

    $default	reduce  424  (errstmt)



state 872

    stmt  ->  simple_if ELSE @12 . stmt   (437)

    IDENTIFIER	shift  528
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    IF  	shift  529
    WHILE	shift  530
    DO  	shift  531
    FOR 	shift  532
    SWITCH	shift  533
    CASE	shift  534
    DEFAULT	shift  535
    BREAK	shift  536
    CONTINUE	shift  537
    RETURN	shift  538
    GOTO	shift  539
    ASM 	shift  540
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    TYPENAME_COLON	shift  541
    '{' 	shift  177
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    RAISE	shift  542
    TRY 	shift  543
    TYPENAME_SCOPE	shift  232
    ';' 	shift  544
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  305
    unop	shift  236
    expr	shift  545
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    decl	shift  546
    typed_declspecs	shift  547
    declmods	shift  548
    x_typespec	shift  308
    scoped_identifier	shift  251
    compstmt	shift  550
    simple_if	shift  551
    stmt	shift  940
    try 	shift  553
    try_head	shift  554
    forhead.1	shift  555
    forhead.2	shift  556
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 873

    stmt  ->  try RERAISE raise_identifiers .   (479)
    raise_identifiers  ->  raise_identifiers . ',' raise_identifier   (541)

    ',' 	shift  511

    $default	reduce  479  (stmt)



state 874

    stmt  ->  try EXCEPT identifier . '{' @29 except_stmts '}'   (478)

    '{' 	shift  941



state 875

    try  ->  try_head error '}' .   (483)

    $default	reduce  483  (try)



state 876

    try  ->  try_head stmts '}' .   (482)

    $default	reduce  482  (try)



state 877

    stmt  ->  forhead.1 @17 xexpr . ';' @18 xexpr ')' @19 stmt   (448)

    ';' 	shift  942



state 878

    stmt  ->  forhead.2 @20 xexpr . ';' @21 xexpr ')' @22 stmt   (452)

    ';' 	shift  943



state 879

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    after_type_declarator  ->  '&' type_quals . after_type_declarator   (361)

    TYPENAME	shift  59
    TYPE_QUAL	shift  277
    '&' 	shift  756
    '*' 	shift  757
    PAREN_STAR_PAREN	shift  62
    PAREN_X_SCOPE_STAR_PAREN	shift  63
    PAREN_X_SCOPE_REF_PAREN	shift  64
    '(' 	shift  758
    after_type_declarator	shift  343



state 880

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    after_type_declarator  ->  '*' type_quals . after_type_declarator   (360)

    TYPENAME	shift  59
    TYPE_QUAL	shift  277
    '&' 	shift  756
    '*' 	shift  757
    PAREN_STAR_PAREN	shift  62
    PAREN_X_SCOPE_STAR_PAREN	shift  63
    PAREN_X_SCOPE_REF_PAREN	shift  64
    '(' 	shift  758
    after_type_declarator	shift  344



state 881

    after_type_declarator  ->  '(' '&' . type_quals after_type_declarator ')'   (359)

    type_quals	shift  944

    $default	reduce  344  (type_quals)



state 882

    after_type_declarator  ->  '(' '*' . type_quals after_type_declarator ')'   (355)

    type_quals	shift  945

    $default	reduce  344  (type_quals)



state 883

    after_type_declarator_no_typename  ->  '(' dummy_decl after_type_declarator_no_typename ')' .   (369)

    $default	reduce  369  (after_type_declarator_no_typename)



state 884

    after_type_declarator_no_typename  ->  after_type_declarator_no_typename '(' error ')' . type_quals   (366)

    type_quals	shift  946

    $default	reduce  344  (type_quals)



state 885

    after_type_declarator_no_typename  ->  after_type_declarator_no_typename '(' nonnull_exprlist ')' . type_quals   (363)

    type_quals	shift  947

    $default	reduce  344  (type_quals)



state 886

    after_type_declarator_no_typename  ->  after_type_declarator_no_typename '(' parmlist ')' . type_quals   (364)

    type_quals	shift  948

    $default	reduce  344  (type_quals)



state 887

    after_type_declarator_no_typename  ->  after_type_declarator_no_typename '[' nonmomentary_expr ']' .   (367)

    $default	reduce  367  (after_type_declarator_no_typename)



state 888

    initdcl0  ->  declarator maybe_raises maybeasm maybe_attribute '=' @5 . init   (234)

    error	shift  329
    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '{' 	shift  330
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  332
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    init	shift  949
    scoped_identifier	shift  251
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)



state 889

    structsp  ->  ENUM identifier '{' @8 enumlist maybecomma_warn '}' .   (259)

    $default	reduce  259  (structsp)



state 890

    new  ->  NEW DYNAMIC '(' string ')' .   (179)

    $default	reduce  179  (new)



state 891

    cast_expr  ->  '(' typename ')' '{' initlist . maybecomma '}'   (112)
    initlist  ->  initlist . ',' init   (257)

    ',' 	shift  950
    maybecomma	shift  951

    $default	reduce  266  (maybecomma)



state 892

    primary  ->  dummy_decl TYPE_QUAL '(' exprlist ')' .   (153)

    $default	reduce  153  (primary)



state 893

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas '?' xexpr ':' expr_no_commas .   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)

    '?' 	shift  404
    OROR	shift  405
    ANDAND	shift  406
    '|' 	shift  407
    '^' 	shift  408
    '&' 	shift  409
    MIN_MAX	shift  410
    EQCOMPARE	shift  411
    ARITHCOMPARE	shift  412
    LSHIFT	shift  413
    RSHIFT	shift  414
    '+' 	shift  415
    '-' 	shift  416
    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419

    $default	reduce  129  (expr_no_commas)



state 894

    unary_expr  ->  new x_typespec '(' exprlist ')' .   (103)

    $default	reduce  103  (unary_expr)



state 895

    unary_expr  ->  delete '[' expr ']' cast_expr .   (109)

    $default	reduce  109  (unary_expr)



state 896

    primary_no_id  ->  '(' @4 compstmt ')' .   (168)

    $default	reduce  168  (primary_no_id)



state 897

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)
    expr_no_commas  ->  object '(' typename ')' expr_no_commas .   (135)


    $default	reduce  135  (expr_no_commas)



state 898

    primary  ->  object identifier_or_opname '(' exprlist ')' .   (161)

    $default	reduce  161  (primary)



state 899

    primary_no_id  ->  primary_no_id '(' exprlist ')' .   (169)

    $default	reduce  169  (primary_no_id)



state 900

    primary_no_id  ->  primary_no_id '[' expr ']' .   (171)

    $default	reduce  171  (primary_no_id)



state 901

    primary  ->  object scoped_identifier identifier_or_opname '(' exprlist . ')'   (163)

    ')' 	shift  952



state 902

    primary  ->  scoped_identifier identifier_or_opname '(' exprlist ')' .   (159)

    $default	reduce  159  (primary)



state 903

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    absdcl1  ->  absdcl1 '(' parmlist ')' type_quals .   (409)

    TYPE_QUAL	shift  277

    $default	reduce  409  (absdcl1)



state 904

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    notype_declarator  ->  TYPENAME_SCOPE see_typename TYPENAME '(' error ')' type_quals .   (396)

    TYPE_QUAL	shift  277

    $default	reduce  396  (notype_declarator)



state 905

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    notype_declarator  ->  TYPENAME_SCOPE see_typename TYPENAME '(' nonnull_exprlist ')' type_quals .   (393)

    TYPE_QUAL	shift  277

    $default	reduce  393  (notype_declarator)



state 906

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    notype_declarator  ->  TYPENAME_SCOPE see_typename TYPENAME '(' parmlist ')' type_quals .   (394)

    TYPE_QUAL	shift  277

    $default	reduce  394  (notype_declarator)



state 907

    initdcl  ->  declarator maybe_raises maybeasm maybe_attribute '=' . @6 init   (237)

    @6  	shift  953

    $default	reduce  236  (@6)



state 908

    component_decl  ->  typed_declspecs '(' parmlist ')' ';' .   (305)

    $default	reduce  305  (component_decl)



state 909

    component_decl  ->  typed_declspecs '(' parmlist ')' '}' .   (306)

    $default	reduce  306  (component_decl)



state 910

    fn.def2  ->  typed_declspecs '(' parmlist ')' type_quals . maybe_raises   (44)
    type_quals  ->  type_quals . TYPE_QUAL   (345)

    TYPE_QUAL	shift  277
    RAISES	shift  165
    maybe_raises	shift  954

    $default	reduce  531  (maybe_raises)



state 911

    component_declarator0  ->  declarator maybe_raises maybeasm opt.init .   (326)

    $default	reduce  326  (component_declarator0)



state 912

    component_declarator  ->  IDENTIFIER ':' . expr_no_commas   (331)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  955
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 913

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)
    component_declarator  ->  TYPENAME_COLON expr_no_commas .   (332)

    ASSIGN	shift  402
    '=' 	shift  403
    '?' 	shift  404
    OROR	shift  405
    ANDAND	shift  406
    '|' 	shift  407
    '^' 	shift  408
    '&' 	shift  409
    MIN_MAX	shift  410
    EQCOMPARE	shift  411
    ARITHCOMPARE	shift  412
    LSHIFT	shift  413
    RSHIFT	shift  414
    '+' 	shift  415
    '-' 	shift  416
    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419

    $default	reduce  332  (component_declarator)



state 914

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)
    component_declarator  ->  ':' expr_no_commas .   (333)

    ASSIGN	shift  402
    '=' 	shift  403
    '?' 	shift  404
    OROR	shift  405
    ANDAND	shift  406
    '|' 	shift  407
    '^' 	shift  408
    '&' 	shift  409
    MIN_MAX	shift  410
    EQCOMPARE	shift  411
    ARITHCOMPARE	shift  412
    LSHIFT	shift  413
    RSHIFT	shift  414
    '+' 	shift  415
    '-' 	shift  416
    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419

    $default	reduce  333  (component_declarator)



state 915

    component_declarator  ->  declarator maybe_raises . maybeasm opt.init   (330)

    ASM 	shift  320
    maybeasm	shift  956

    $default	reduce  231  (maybeasm)



state 916

    component_decl  ->  declmods '(' parmlist ')' ';' .   (312)

    $default	reduce  312  (component_decl)



state 917

    component_decl  ->  declmods '(' parmlist ')' '}' .   (313)

    $default	reduce  313  (component_decl)



state 918

    fn.def2  ->  declmods '(' parmlist ')' type_quals . maybe_raises   (47)
    type_quals  ->  type_quals . TYPE_QUAL   (345)

    TYPE_QUAL	shift  277
    RAISES	shift  165
    maybe_raises	shift  957

    $default	reduce  531  (maybe_raises)



state 919

    attrib  ->  IDENTIFIER .   (246)
    attrib  ->  IDENTIFIER . '(' CONSTANT ')'   (247)
    attrib  ->  IDENTIFIER . '(' identifiers ')'   (248)

    '(' 	shift  958

    $default	reduce  246  (attrib)



state 920

    maybe_attribute  ->  ATTRIBUTE '(' '(' attribute_list . ')' ')'   (243)
    attribute_list  ->  attribute_list . ',' attrib   (245)

    ',' 	shift  959
    ')' 	shift  960



state 921

    attribute_list  ->  attrib .   (244)

    $default	reduce  244  (attribute_list)



state 922

    notype_initdcl0  ->  notype_declarator maybe_raises maybeasm maybe_attribute '=' @7 init .   (240)

    $default	reduce  240  (notype_initdcl0)



state 923

    member_init  ->  scoped_identifier identifier '(' exprlist ')' .   (65)

    $default	reduce  65  (member_init)



state 924

    stmt  ->  IDENTIFIER ':' @27 stmt .   (471)

    $default	reduce  471  (stmt)



state 925

    simple_if  ->  IF '(' expr ')' . @11 stmt   (432)

    @11 	shift  961

    $default	reduce  431  (@11)



state 926

    stmt  ->  WHILE @13 '(' expr . ')' @14 stmt   (441)

    ')' 	shift  962



state 927

    stmt  ->  DO @15 stmt WHILE . @16 '(' expr ')' ';'   (444)

    @16 	shift  963

    $default	reduce  443  (@16)



state 928

    forhead.2  ->  FOR '(' error ';' .   (495)

    $default	reduce  495  (forhead.2)



state 929

    forhead.1  ->  FOR '(' '{' '}' .   (493)

    $default	reduce  493  (forhead.1)



state 930

    forhead.2  ->  FOR '(' '{' .pushlevel . stmts '}'   (496)
    forhead.2  ->  FOR '(' '{' .pushlevel . error '}'   (497)

    error	shift  964
    IDENTIFIER	shift  528
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    IF  	shift  529
    WHILE	shift  530
    DO  	shift  531
    FOR 	shift  532
    SWITCH	shift  533
    CASE	shift  534
    DEFAULT	shift  535
    BREAK	shift  536
    CONTINUE	shift  537
    RETURN	shift  538
    GOTO	shift  539
    ASM 	shift  540
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    TYPENAME_COLON	shift  541
    '{' 	shift  177
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    RAISE	shift  542
    TRY 	shift  543
    TYPENAME_SCOPE	shift  232
    ';' 	shift  544
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  305
    unop	shift  236
    expr	shift  545
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    decl	shift  546
    typed_declspecs	shift  547
    declmods	shift  548
    x_typespec	shift  308
    scoped_identifier	shift  251
    stmts	shift  965
    compstmt	shift  550
    simple_if	shift  551
    stmt	shift  552
    try 	shift  553
    try_head	shift  554
    forhead.1	shift  555
    forhead.2	shift  556
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    SCSPEC	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)



state 931

    forhead.1  ->  FOR '(' expr ';' .   (492)

    $default	reduce  492  (forhead.1)



state 932

    stmt  ->  SWITCH '(' expr ')' . @23 stmt   (454)

    @23 	shift  966

    $default	reduce  453  (@23)



state 933

    stmt  ->  CASE expr ':' @24 . stmt   (456)

    IDENTIFIER	shift  528
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    IF  	shift  529
    WHILE	shift  530
    DO  	shift  531
    FOR 	shift  532
    SWITCH	shift  533
    CASE	shift  534
    DEFAULT	shift  535
    BREAK	shift  536
    CONTINUE	shift  537
    RETURN	shift  538
    GOTO	shift  539
    ASM 	shift  540
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    TYPENAME_COLON	shift  541
    '{' 	shift  177
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    RAISE	shift  542
    TRY 	shift  543
    TYPENAME_SCOPE	shift  232
    ';' 	shift  544
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  305
    unop	shift  236
    expr	shift  545
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    decl	shift  546
    typed_declspecs	shift  547
    declmods	shift  548
    x_typespec	shift  308
    scoped_identifier	shift  251
    compstmt	shift  550
    simple_if	shift  551
    stmt	shift  967
    try 	shift  553
    try_head	shift  554
    forhead.1	shift  555
    forhead.2	shift  556
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 934

    stmt  ->  CASE expr RANGE expr . ':' @25 stmt   (458)

    ':' 	shift  968



state 935

    stmt  ->  DEFAULT ':' @26 stmt .   (460)

    $default	reduce  460  (stmt)



state 936

    string  ->  string . STRING   (184)
    stmt  ->  ASM maybe_type_qual '(' string . ')' ';'   (465)
    stmt  ->  ASM maybe_type_qual '(' string . ':' asm_operands ')' ';'   (466)
    stmt  ->  ASM maybe_type_qual '(' string . ':' asm_operands ':' asm_operands ')' ';'   (467)
    stmt  ->  ASM maybe_type_qual '(' string . ':' asm_operands ':' asm_operands ':' asm_clobbers ')' ';'   (468)

    STRING	shift  202
    ':' 	shift  969
    ')' 	shift  970



state 937

    stmt  ->  RAISE raise_identifier LEFT_RIGHT ';' .   (476)

    $default	reduce  476  (stmt)



state 938

    stmt  ->  RAISE raise_identifier '(' exprlist . ')' ';'   (475)

    ')' 	shift  971



state 939

    try_head  ->  TRY '{' @30 .pushlevel .   (485)

    $default	reduce  485  (try_head)



state 940

    stmt  ->  simple_if ELSE @12 stmt .   (437)

    $default	reduce  437  (stmt)



state 941

    stmt  ->  try EXCEPT identifier '{' . @29 except_stmts '}'   (478)

    @29 	shift  972

    $default	reduce  477  (@29)



state 942

    stmt  ->  forhead.1 @17 xexpr ';' . @18 xexpr ')' @19 stmt   (448)

    @18 	shift  973

    $default	reduce  446  (@18)



state 943

    stmt  ->  forhead.2 @20 xexpr ';' . @21 xexpr ')' @22 stmt   (452)

    @21 	shift  974

    $default	reduce  450  (@21)



state 944

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    after_type_declarator  ->  '(' '&' type_quals . after_type_declarator ')'   (359)

    TYPENAME	shift  59
    TYPE_QUAL	shift  277
    '&' 	shift  756
    '*' 	shift  757
    PAREN_STAR_PAREN	shift  62
    PAREN_X_SCOPE_STAR_PAREN	shift  63
    PAREN_X_SCOPE_REF_PAREN	shift  64
    '(' 	shift  758
    after_type_declarator	shift  557



state 945

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    after_type_declarator  ->  '(' '*' type_quals . after_type_declarator ')'   (355)

    TYPENAME	shift  59
    TYPE_QUAL	shift  277
    '&' 	shift  756
    '*' 	shift  757
    PAREN_STAR_PAREN	shift  62
    PAREN_X_SCOPE_STAR_PAREN	shift  63
    PAREN_X_SCOPE_REF_PAREN	shift  64
    '(' 	shift  758
    after_type_declarator	shift  558



state 946

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    after_type_declarator_no_typename  ->  after_type_declarator_no_typename '(' error ')' type_quals .   (366)

    TYPE_QUAL	shift  277

    $default	reduce  366  (after_type_declarator_no_typename)



state 947

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    after_type_declarator_no_typename  ->  after_type_declarator_no_typename '(' nonnull_exprlist ')' type_quals .   (363)

    TYPE_QUAL	shift  277

    $default	reduce  363  (after_type_declarator_no_typename)



state 948

    type_quals  ->  type_quals . TYPE_QUAL   (345)
    after_type_declarator_no_typename  ->  after_type_declarator_no_typename '(' parmlist ')' type_quals .   (364)

    TYPE_QUAL	shift  277

    $default	reduce  364  (after_type_declarator_no_typename)



state 949

    initdcl0  ->  declarator maybe_raises maybeasm maybe_attribute '=' @5 init .   (234)

    $default	reduce  234  (initdcl0)



state 950

    initlist  ->  initlist ',' . init   (257)
    maybecomma  ->  ',' .   (267)

    error	shift  329
    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '{' 	shift  330
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  332
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    init	shift  843
    scoped_identifier	shift  251
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)
    '}' 	reduce  267  (maybecomma)



state 951

    cast_expr  ->  '(' typename ')' '{' initlist maybecomma . '}'   (112)

    '}' 	shift  975



state 952

    primary  ->  object scoped_identifier identifier_or_opname '(' exprlist ')' .   (163)

    $default	reduce  163  (primary)



state 953

    initdcl  ->  declarator maybe_raises maybeasm maybe_attribute '=' @6 . init   (237)

    error	shift  329
    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '{' 	shift  330
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  332
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    init	shift  976
    scoped_identifier	shift  251
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)



state 954

    fn.def2  ->  typed_declspecs '(' parmlist ')' type_quals maybe_raises .   (44)

    $default	reduce  44  (fn.def2)



state 955

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (114)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (115)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (116)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (117)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (118)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (119)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (120)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (121)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (122)
    expr_no_commas  ->  expr_no_commas . MIN_MAX expr_no_commas   (123)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (124)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (125)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (126)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (127)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (128)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (129)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (130)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (131)
    component_declarator  ->  IDENTIFIER ':' expr_no_commas .   (331)

    ASSIGN	shift  402
    '=' 	shift  403
    '?' 	shift  404
    OROR	shift  405
    ANDAND	shift  406
    '|' 	shift  407
    '^' 	shift  408
    '&' 	shift  409
    MIN_MAX	shift  410
    EQCOMPARE	shift  411
    ARITHCOMPARE	shift  412
    LSHIFT	shift  413
    RSHIFT	shift  414
    '+' 	shift  415
    '-' 	shift  416
    '*' 	shift  417
    '/' 	shift  418
    '%' 	shift  419

    $default	reduce  331  (component_declarator)



state 956

    component_declarator  ->  declarator maybe_raises maybeasm . opt.init   (330)

    '=' 	shift  170
    opt.init	shift  977

    $default	reduce  529  (opt.init)



state 957

    fn.def2  ->  declmods '(' parmlist ')' type_quals maybe_raises .   (47)

    $default	reduce  47  (fn.def2)



state 958

    attrib  ->  IDENTIFIER '(' . CONSTANT ')'   (247)
    attrib  ->  IDENTIFIER '(' . identifiers ')'   (248)

    IDENTIFIER	shift  978
    CONSTANT	shift  979
    identifiers	shift  980



state 959

    attribute_list  ->  attribute_list ',' . attrib   (245)

    IDENTIFIER	shift  919
    attrib	shift  981



state 960

    maybe_attribute  ->  ATTRIBUTE '(' '(' attribute_list ')' . ')'   (243)

    ')' 	shift  982



state 961

    simple_if  ->  IF '(' expr ')' @11 . stmt   (432)

    IDENTIFIER	shift  528
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    IF  	shift  529
    WHILE	shift  530
    DO  	shift  531
    FOR 	shift  532
    SWITCH	shift  533
    CASE	shift  534
    DEFAULT	shift  535
    BREAK	shift  536
    CONTINUE	shift  537
    RETURN	shift  538
    GOTO	shift  539
    ASM 	shift  540
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    TYPENAME_COLON	shift  541
    '{' 	shift  177
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    RAISE	shift  542
    TRY 	shift  543
    TYPENAME_SCOPE	shift  232
    ';' 	shift  544
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  305
    unop	shift  236
    expr	shift  545
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    decl	shift  546
    typed_declspecs	shift  547
    declmods	shift  548
    x_typespec	shift  308
    scoped_identifier	shift  251
    compstmt	shift  550
    simple_if	shift  551
    stmt	shift  983
    try 	shift  553
    try_head	shift  554
    forhead.1	shift  555
    forhead.2	shift  556
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 962

    stmt  ->  WHILE @13 '(' expr ')' . @14 stmt   (441)

    @14 	shift  984

    $default	reduce  440  (@14)



state 963

    stmt  ->  DO @15 stmt WHILE @16 . '(' expr ')' ';'   (444)

    '(' 	shift  985



state 964

    forhead.2  ->  FOR '(' '{' .pushlevel error . '}'   (497)

    '}' 	shift  986



state 965

    stmts  ->  stmts . stmt   (422)
    stmts  ->  stmts . errstmt   (423)
    forhead.2  ->  FOR '(' '{' .pushlevel stmts . '}'   (496)

    error	shift  743
    IDENTIFIER	shift  528
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    IF  	shift  529
    WHILE	shift  530
    DO  	shift  531
    FOR 	shift  532
    SWITCH	shift  533
    CASE	shift  534
    DEFAULT	shift  535
    BREAK	shift  536
    CONTINUE	shift  537
    RETURN	shift  538
    GOTO	shift  539
    ASM 	shift  540
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    TYPENAME_COLON	shift  541
    '{' 	shift  177
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    RAISE	shift  542
    TRY 	shift  543
    TYPENAME_SCOPE	shift  232
    ';' 	shift  544
    '}' 	shift  987
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  305
    unop	shift  236
    expr	shift  545
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    decl	shift  546
    typed_declspecs	shift  547
    declmods	shift  548
    x_typespec	shift  308
    scoped_identifier	shift  251
    errstmt	shift  745
    compstmt	shift  550
    simple_if	shift  551
    stmt	shift  746
    try 	shift  553
    try_head	shift  554
    forhead.1	shift  555
    forhead.2	shift  556
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    SCSPEC	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)



state 966

    stmt  ->  SWITCH '(' expr ')' @23 . stmt   (454)

    IDENTIFIER	shift  528
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    IF  	shift  529
    WHILE	shift  530
    DO  	shift  531
    FOR 	shift  532
    SWITCH	shift  533
    CASE	shift  534
    DEFAULT	shift  535
    BREAK	shift  536
    CONTINUE	shift  537
    RETURN	shift  538
    GOTO	shift  539
    ASM 	shift  540
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    TYPENAME_COLON	shift  541
    '{' 	shift  177
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    RAISE	shift  542
    TRY 	shift  543
    TYPENAME_SCOPE	shift  232
    ';' 	shift  544
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  305
    unop	shift  236
    expr	shift  545
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    decl	shift  546
    typed_declspecs	shift  547
    declmods	shift  548
    x_typespec	shift  308
    scoped_identifier	shift  251
    compstmt	shift  550
    simple_if	shift  551
    stmt	shift  988
    try 	shift  553
    try_head	shift  554
    forhead.1	shift  555
    forhead.2	shift  556
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 967

    stmt  ->  CASE expr ':' @24 stmt .   (456)

    $default	reduce  456  (stmt)



state 968

    stmt  ->  CASE expr RANGE expr ':' . @25 stmt   (458)

    @25 	shift  989

    $default	reduce  457  (@25)



state 969

    stmt  ->  ASM maybe_type_qual '(' string ':' . asm_operands ')' ';'   (466)
    stmt  ->  ASM maybe_type_qual '(' string ':' . asm_operands ':' asm_operands ')' ';'   (467)
    stmt  ->  ASM maybe_type_qual '(' string ':' . asm_operands ':' asm_operands ':' asm_clobbers ')' ';'   (468)

    STRING	shift  990
    asm_operands	shift  991
    nonnull_asm_operands	shift  992
    asm_operand	shift  993

    $default	reduce  503  (asm_operands)



state 970

    stmt  ->  ASM maybe_type_qual '(' string ')' . ';'   (465)

    ';' 	shift  994



state 971

    stmt  ->  RAISE raise_identifier '(' exprlist ')' . ';'   (475)

    ';' 	shift  995



state 972

    stmt  ->  try EXCEPT identifier '{' @29 . except_stmts '}'   (478)

    except_stmts	shift  996

    $default	reduce  486  (except_stmts)



state 973

    stmt  ->  forhead.1 @17 xexpr ';' @18 . xexpr ')' @19 stmt   (448)

    error	shift  605
    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    expr	shift  606
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    xexpr	shift  997
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)
    ')' 	reduce  500  (xexpr)



state 974

    stmt  ->  forhead.2 @20 xexpr ';' @21 . xexpr ')' @22 stmt   (452)

    error	shift  605
    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    expr	shift  606
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    xexpr	shift  998
    operator_name	shift  252

    TYPENAME	reduce  19  (dummy_decl)
    TYPESPEC	reduce  19  (dummy_decl)
    TYPE_QUAL	reduce  19  (dummy_decl)
    ENUM	reduce  19  (dummy_decl)
    TYPEOF	reduce  19  (dummy_decl)
    AGGR	reduce  19  (dummy_decl)
    DYNAMIC	reduce  19  (dummy_decl)
    ')' 	reduce  500  (xexpr)



state 975

    cast_expr  ->  '(' typename ')' '{' initlist maybecomma '}' .   (112)

    $default	reduce  112  (cast_expr)



state 976

    initdcl  ->  declarator maybe_raises maybeasm maybe_attribute '=' @6 init .   (237)

    $default	reduce  237  (initdcl)



state 977

    component_declarator  ->  declarator maybe_raises maybeasm opt.init .   (330)

    $default	reduce  330  (component_declarator)



state 978

    identifiers  ->  IDENTIFIER .   (249)

    $default	reduce  249  (identifiers)



state 979

    attrib  ->  IDENTIFIER '(' CONSTANT . ')'   (247)

    ')' 	shift  999



state 980

    attrib  ->  IDENTIFIER '(' identifiers . ')'   (248)
    identifiers  ->  identifiers . ',' IDENTIFIER   (250)

    ',' 	shift  1000
    ')' 	shift  1001



state 981

    attribute_list  ->  attribute_list ',' attrib .   (245)

    $default	reduce  245  (attribute_list)



state 982

    maybe_attribute  ->  ATTRIBUTE '(' '(' attribute_list ')' ')' .   (243)

    $default	reduce  243  (maybe_attribute)



state 983

    simple_if  ->  IF '(' expr ')' @11 stmt .   (432)

    $default	reduce  432  (simple_if)



state 984

    stmt  ->  WHILE @13 '(' expr ')' @14 . stmt   (441)

    IDENTIFIER	shift  528
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    IF  	shift  529
    WHILE	shift  530
    DO  	shift  531
    FOR 	shift  532
    SWITCH	shift  533
    CASE	shift  534
    DEFAULT	shift  535
    BREAK	shift  536
    CONTINUE	shift  537
    RETURN	shift  538
    GOTO	shift  539
    ASM 	shift  540
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    TYPENAME_COLON	shift  541
    '{' 	shift  177
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    RAISE	shift  542
    TRY 	shift  543
    TYPENAME_SCOPE	shift  232
    ';' 	shift  544
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  305
    unop	shift  236
    expr	shift  545
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    decl	shift  546
    typed_declspecs	shift  547
    declmods	shift  548
    x_typespec	shift  308
    scoped_identifier	shift  251
    compstmt	shift  550
    simple_if	shift  551
    stmt	shift  1002
    try 	shift  553
    try_head	shift  554
    forhead.1	shift  555
    forhead.2	shift  556
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 985

    stmt  ->  DO @15 stmt WHILE @16 '(' . expr ')' ';'   (444)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    expr	shift  1003
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 986

    forhead.2  ->  FOR '(' '{' .pushlevel error '}' .   (497)

    $default	reduce  497  (forhead.2)



state 987

    forhead.2  ->  FOR '(' '{' .pushlevel stmts '}' .   (496)

    $default	reduce  496  (forhead.2)



state 988

    stmt  ->  SWITCH '(' expr ')' @23 stmt .   (454)

    $default	reduce  454  (stmt)



state 989

    stmt  ->  CASE expr RANGE expr ':' @25 . stmt   (458)

    IDENTIFIER	shift  528
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    IF  	shift  529
    WHILE	shift  530
    DO  	shift  531
    FOR 	shift  532
    SWITCH	shift  533
    CASE	shift  534
    DEFAULT	shift  535
    BREAK	shift  536
    CONTINUE	shift  537
    RETURN	shift  538
    GOTO	shift  539
    ASM 	shift  540
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    TYPENAME_COLON	shift  541
    '{' 	shift  177
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    RAISE	shift  542
    TRY 	shift  543
    TYPENAME_SCOPE	shift  232
    ';' 	shift  544
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  305
    unop	shift  236
    expr	shift  545
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    decl	shift  546
    typed_declspecs	shift  547
    declmods	shift  548
    x_typespec	shift  308
    scoped_identifier	shift  251
    compstmt	shift  550
    simple_if	shift  551
    stmt	shift  1004
    try 	shift  553
    try_head	shift  554
    forhead.1	shift  555
    forhead.2	shift  556
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 990

    asm_operand  ->  STRING . '(' expr ')'   (507)

    '(' 	shift  1005



state 991

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands . ')' ';'   (466)
    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands . ':' asm_operands ')' ';'   (467)
    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands . ':' asm_operands ':' asm_clobbers ')' ';'   (468)

    ':' 	shift  1006
    ')' 	shift  1007



state 992

    asm_operands  ->  nonnull_asm_operands .   (504)
    nonnull_asm_operands  ->  nonnull_asm_operands . ',' asm_operand   (506)

    ',' 	shift  1008

    $default	reduce  504  (asm_operands)



state 993

    nonnull_asm_operands  ->  asm_operand .   (505)

    $default	reduce  505  (nonnull_asm_operands)



state 994

    stmt  ->  ASM maybe_type_qual '(' string ')' ';' .   (465)

    $default	reduce  465  (stmt)



state 995

    stmt  ->  RAISE raise_identifier '(' exprlist ')' ';' .   (475)

    $default	reduce  475  (stmt)



state 996

    stmt  ->  try EXCEPT identifier '{' @29 except_stmts . '}'   (478)
    except_stmts  ->  except_stmts . raise_identifier @31 compstmt   (488)
    except_stmts  ->  except_stmts . DEFAULT @32 compstmt   (490)

    IDENTIFIER	shift  313
    TYPENAME	shift  314
    DEFAULT	shift  1009
    SCOPE	shift  315
    TYPENAME_SCOPE	shift  232
    ALL 	shift  316
    '}' 	shift  1010
    scoped_identifier	shift  317
    raise_identifier	shift  1011



state 997

    stmt  ->  forhead.1 @17 xexpr ';' @18 xexpr . ')' @19 stmt   (448)

    ')' 	shift  1012



state 998

    stmt  ->  forhead.2 @20 xexpr ';' @21 xexpr . ')' @22 stmt   (452)

    ')' 	shift  1013



state 999

    attrib  ->  IDENTIFIER '(' CONSTANT ')' .   (247)

    $default	reduce  247  (attrib)



state 1000

    identifiers  ->  identifiers ',' . IDENTIFIER   (250)

    IDENTIFIER	shift  1014



state 1001

    attrib  ->  IDENTIFIER '(' identifiers ')' .   (248)

    $default	reduce  248  (attrib)



state 1002

    stmt  ->  WHILE @13 '(' expr ')' @14 stmt .   (441)

    $default	reduce  441  (stmt)



state 1003

    stmt  ->  DO @15 stmt WHILE @16 '(' expr . ')' ';'   (444)

    ')' 	shift  1015



state 1004

    stmt  ->  CASE expr RANGE expr ':' @25 stmt .   (458)

    $default	reduce  458  (stmt)



state 1005

    asm_operand  ->  STRING '(' . expr ')'   (507)

    IDENTIFIER	shift  217
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    TYPENAME_SCOPE	shift  232
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  331
    unop	shift  236
    expr	shift  1016
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    x_typespec	shift  333
    scoped_identifier	shift  251
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 1006

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ':' . asm_operands ')' ';'   (467)
    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ':' . asm_operands ':' asm_clobbers ')' ';'   (468)

    STRING	shift  990
    asm_operands	shift  1017
    nonnull_asm_operands	shift  992
    asm_operand	shift  993

    $default	reduce  503  (asm_operands)



state 1007

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ')' . ';'   (466)

    ';' 	shift  1018



state 1008

    nonnull_asm_operands  ->  nonnull_asm_operands ',' . asm_operand   (506)

    STRING	shift  990
    asm_operand	shift  1019



state 1009

    except_stmts  ->  except_stmts DEFAULT . @32 compstmt   (490)

    @32 	shift  1020

    $default	reduce  489  (@32)



state 1010

    stmt  ->  try EXCEPT identifier '{' @29 except_stmts '}' .   (478)

    $default	reduce  478  (stmt)



state 1011

    except_stmts  ->  except_stmts raise_identifier . @31 compstmt   (488)

    @31 	shift  1021

    $default	reduce  487  (@31)



state 1012

    stmt  ->  forhead.1 @17 xexpr ';' @18 xexpr ')' . @19 stmt   (448)

    @19 	shift  1022

    $default	reduce  447  (@19)



state 1013

    stmt  ->  forhead.2 @20 xexpr ';' @21 xexpr ')' . @22 stmt   (452)

    @22 	shift  1023

    $default	reduce  451  (@22)



state 1014

    identifiers  ->  identifiers ',' IDENTIFIER .   (250)

    $default	reduce  250  (identifiers)



state 1015

    stmt  ->  DO @15 stmt WHILE @16 '(' expr ')' . ';'   (444)

    ';' 	shift  1024



state 1016

    asm_operand  ->  STRING '(' expr . ')'   (507)

    ')' 	shift  1025



state 1017

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ':' asm_operands . ')' ';'   (467)
    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ':' asm_operands . ':' asm_clobbers ')' ';'   (468)

    ':' 	shift  1026
    ')' 	shift  1027



state 1018

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ')' ';' .   (466)

    $default	reduce  466  (stmt)



state 1019

    nonnull_asm_operands  ->  nonnull_asm_operands ',' asm_operand .   (506)

    $default	reduce  506  (nonnull_asm_operands)



state 1020

    except_stmts  ->  except_stmts DEFAULT @32 . compstmt   (490)

    '{' 	shift  177
    compstmt	shift  1028



state 1021

    except_stmts  ->  except_stmts raise_identifier @31 . compstmt   (488)

    '{' 	shift  177
    compstmt	shift  1029



state 1022

    stmt  ->  forhead.1 @17 xexpr ';' @18 xexpr ')' @19 . stmt   (448)

    IDENTIFIER	shift  528
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    IF  	shift  529
    WHILE	shift  530
    DO  	shift  531
    FOR 	shift  532
    SWITCH	shift  533
    CASE	shift  534
    DEFAULT	shift  535
    BREAK	shift  536
    CONTINUE	shift  537
    RETURN	shift  538
    GOTO	shift  539
    ASM 	shift  540
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    TYPENAME_COLON	shift  541
    '{' 	shift  177
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    RAISE	shift  542
    TRY 	shift  543
    TYPENAME_SCOPE	shift  232
    ';' 	shift  544
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  305
    unop	shift  236
    expr	shift  545
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    decl	shift  546
    typed_declspecs	shift  547
    declmods	shift  548
    x_typespec	shift  308
    scoped_identifier	shift  251
    compstmt	shift  550
    simple_if	shift  551
    stmt	shift  1030
    try 	shift  553
    try_head	shift  554
    forhead.1	shift  555
    forhead.2	shift  556
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 1023

    stmt  ->  forhead.2 @20 xexpr ';' @21 xexpr ')' @22 . stmt   (452)

    IDENTIFIER	shift  528
    CONSTANT	shift  218
    STRING	shift  89
    SIZEOF	shift  219
    IF  	shift  529
    WHILE	shift  530
    DO  	shift  531
    FOR 	shift  532
    SWITCH	shift  533
    CASE	shift  534
    DEFAULT	shift  535
    BREAK	shift  536
    CONTINUE	shift  537
    RETURN	shift  538
    GOTO	shift  539
    ASM 	shift  540
    ALIGNOF	shift  220
    DELETE	shift  221
    NEW 	shift  222
    THIS	shift  223
    OPERATOR	shift  37
    SCOPE	shift  224
    TYPENAME_COLON	shift  541
    '{' 	shift  177
    '&' 	shift  225
    '+' 	shift  226
    '-' 	shift  227
    '*' 	shift  228
    PLUSPLUS	shift  229
    MINUSMINUS	shift  230
    '(' 	shift  231
    RAISE	shift  542
    TRY 	shift  543
    TYPENAME_SCOPE	shift  232
    ';' 	shift  544
    '~' 	shift  233
    '!' 	shift  234
    dummy_decl	shift  305
    unop	shift  236
    expr	shift  545
    nonnull_exprlist	shift  238
    unary_expr	shift  239
    cast_expr	shift  240
    expr_no_commas	shift  241
    primary	shift  242
    new 	shift  243
    delete	shift  244
    string	shift  245
    object	shift  246
    decl	shift  546
    typed_declspecs	shift  547
    declmods	shift  548
    x_typespec	shift  308
    scoped_identifier	shift  251
    compstmt	shift  550
    simple_if	shift  551
    stmt	shift  1031
    try 	shift  553
    try_head	shift  554
    forhead.1	shift  555
    forhead.2	shift  556
    operator_name	shift  252

    $default	reduce  19  (dummy_decl)



state 1024

    stmt  ->  DO @15 stmt WHILE @16 '(' expr ')' ';' .   (444)

    $default	reduce  444  (stmt)



state 1025

    asm_operand  ->  STRING '(' expr ')' .   (507)

    $default	reduce  507  (asm_operand)



state 1026

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ':' asm_operands ':' . asm_clobbers ')' ';'   (468)

    STRING	shift  1032
    asm_clobbers	shift  1033



state 1027

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ':' asm_operands ')' . ';'   (467)

    ';' 	shift  1034



state 1028

    except_stmts  ->  except_stmts DEFAULT @32 compstmt .   (490)

    $default	reduce  490  (except_stmts)



state 1029

    except_stmts  ->  except_stmts raise_identifier @31 compstmt .   (488)

    $default	reduce  488  (except_stmts)



state 1030

    stmt  ->  forhead.1 @17 xexpr ';' @18 xexpr ')' @19 stmt .   (448)

    $default	reduce  448  (stmt)



state 1031

    stmt  ->  forhead.2 @20 xexpr ';' @21 xexpr ')' @22 stmt .   (452)

    $default	reduce  452  (stmt)



state 1032

    asm_clobbers  ->  STRING .   (508)

    $default	reduce  508  (asm_clobbers)



state 1033

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ':' asm_operands ':' asm_clobbers . ')' ';'   (468)
    asm_clobbers  ->  asm_clobbers . ',' STRING   (509)

    ',' 	shift  1035
    ')' 	shift  1036



state 1034

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ':' asm_operands ')' ';' .   (467)

    $default	reduce  467  (stmt)



state 1035

    asm_clobbers  ->  asm_clobbers ',' . STRING   (509)

    STRING	shift  1037



state 1036

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ':' asm_operands ':' asm_clobbers ')' . ';'   (468)

    ';' 	shift  1038



state 1037

    asm_clobbers  ->  asm_clobbers ',' STRING .   (509)

    $default	reduce  509  (asm_clobbers)



state 1038

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ':' asm_operands ':' asm_clobbers ')' ';' .   (468)

    $default	reduce  468  (stmt)



state 1039

    $   	shift  1040



state 1040

    $   	shift  1041



state 1041

    NO ACTIONS
