head     1.3;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @@;


1.3
date     88.12.30.09.57.48;  author ouster;  state Exp;
branches ;
next     1.2;

1.2
date     88.12.22.10.11.55;  author ouster;  state Exp;
branches ;
next     1.1;

1.1
date     88.12.22.10.04.20;  author ouster;  state Exp;
branches ;
next     ;


desc
@@


1.3
log
@More format upgrades.
@
text
@' $Header: /a/newcmds/mkversion/RCS/mkversion.man,v 1.2 88/12/22 10:11:55 ouster Exp Locker: ouster $ SPRITE (Berkeley)
.so \*(]ltmac.sprite
.HS MKVERSION cmds
.BS
.SH NAME
mkversion \- print version string
.SH SYNOPSIS
\fBmkversion\fR [\fB\-dtp\fR]
.br
\fBmkversion\fR [\fB\-p\fR] \fIprogName\fR
.SH OPTIONS
.IP \fB\-d\fR 20
Include the path to the current directory in the version string.
.IP \fB\-t\fR 20
Do not put the date in the version string.
.IP "\fB\-p \fIprogName\fR"
The \fB\-p\fR option must be followed by a string (giving the name of the program).
The string \fIprogName\fR will be included in the version string.
.BE
.SH DESCRIPTION
Mkversion prints out a version string useful for inclusion in header files
and program strings and easily generated by calling mkversion in a Makefile.
.SH EXAMPLES
\fBmkversion\fR generates:
.br
#define VERSION "(31 Oct 88 18:07:55)"
.sp
\fBmkversion \-t\fR generates:
.br
#define VERSION ""
.sp
\fBmkversion \-d\fR generates:
.br
#define VERSION "/a/newcmds/mkversion (31 Oct 88 18:08:07)"
.sp
\fBmkversion \-p flea\fR generates:
.br
#define VERSION "flea (31 Oct 88 18:08:17)"
.sp
\fBmkversion \-dp flea\fR generates:
.br
#define VERSION "/a/newcmds/mkversion/flea (31 Oct 88 18:09:54)"
.SH KEYWORDS
version, Makefile, date
@


1.2
log
@Updates to new official man format.
@
text
@d1 1
a1 1
' $Header$ SPRITE (Berkeley)
d8 1
a8 1
\fBmkversion\fR -[\fBdtp\fR]
d10 1
a10 1
\fBmkversion\fR -[\fBp\fR] \fIprogName\fR
d12 1
a12 1
.IP \fB-d\fR 20
d14 1
a14 1
.IP \fB-t\fR 20
d16 2
a17 2
.IP "\fB-p \fIprogName\fR"
The \fB-p\fR option must be followed by a string (giving the name of the program).
d28 1
a28 1
\fBmkversion -t\fR generates:
d32 1
a32 1
\fBmkversion -d\fR generates:
d36 1
a36 1
\fBmkversion -p flea\fR generates:
d40 1
a40 1
\fBmkversion -dp flea\fR generates:
@


1.1
log
@Initial revision
@
text
@d17 1
a17 1
The -p option must be followed by a string (giving the name of the program).
@
