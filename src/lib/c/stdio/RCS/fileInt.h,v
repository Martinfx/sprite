head     1.4;
branch   ;
access   ;
symbols  sprited:1.4.1;
locks    ; strict;
comment  @ * @;


1.4
date     90.09.11.14.27.27;  author kupfer;  state Exp;
branches 1.4.1.1;
next     1.3;

1.3
date     89.06.19.14.15.16;  author jhh;  state Exp;
branches ;
next     1.2;

1.2
date     88.07.20.18.12.20;  author ouster;  state Exp;
branches ;
next     1.1;

1.1
date     88.06.10.16.24.27;  author ouster;  state Exp;
branches ;
next     ;

1.4.1.1
date     91.12.02.19.56.24;  author kupfer;  state Exp;
branches ;
next     ;


desc
@@


1.4
log
@Use function prototypes. Lint.
@
text
@/*
 * fileInt.h --
 *
 *	Declarations for things shared by the various stdio procedures
 *	that implement I/O to and from files.  The stuff in here is
 *	only used internally by stdio, and isn't exported to the outside
 *	world.
 *
 * Copyright 1988 Regents of the University of California
 * Permission to use, copy, modify, and distribute this
 * software and its documentation for any purpose and without
 * fee is hereby granted, provided that the above copyright
 * notice appear in all copies.  The University of California
 * makes no representations about the suitability of this
 * software for any purpose.  It is provided "as is" without
 * express or implied warranty.
 *
 * $Header: /sprite/src/lib/c/stdio/RCS/fileInt.h,v 1.3 89/06/19 14:15:16 jhh Exp Locker: kupfer $ SPRITE (Berkeley)
 */

#ifndef _FILEINT
#define _FILEINT

#ifndef _STDIO
#include "stdio.h"
#endif

#include <cfuncproto.h>

/*
 * The streams for files are kept in a linked list pointed to by
 * stdioFileStreams.
 */

extern FILE		*stdioFileStreams;

extern unsigned char	stdioTempBuffer[];	/* Temporary buffer to use for
						 * writable streams. */

extern unsigned char 	stdioStderrBuffer[];	/* Static buffer for stderr */

extern int	StdioFileCloseProc _ARGS_((FILE *stream));
extern int	StdioFileOpenMode _ARGS_((char *access));
extern void	StdioFileReadProc _ARGS_((FILE *stream));
extern void	StdioFileWriteProc _ARGS_((FILE *stream, int flush));

#endif _FILEINT
@


1.4.1.1
log
@Initial branch for Sprite server.
@
text
@d18 1
a18 1
 * $Header: /sprite/src/lib/c/stdio/RCS/fileInt.h,v 1.4 90/09/11 14:27:27 kupfer Exp $ SPRITE (Berkeley)
@


1.3
log
@Made stderr buffer static
@
text
@d18 1
a18 1
 * $Header: /sprite/src/lib/c/stdio/RCS/fileInt.h,v 1.2 88/07/20 18:12:20 ouster Exp Locker: jhh $ SPRITE (Berkeley)
d28 2
d42 4
a45 4
extern int	StdioFileCloseProc();
extern int	StdioFileOpenMode();
extern void	StdioFileReadProc();
extern void	StdioFileWriteProc();
@


1.2
log
@Change file streams so that fdopen can be called more than once
for a given stream id, and get separate buffers.
@
text
@d18 1
a18 1
 * $Header: fileInt.h,v 1.1 88/06/10 16:24:27 ouster Exp $ SPRITE (Berkeley)
d37 2
@


1.1
log
@Initial revision
@
text
@d18 1
a18 1
 * $Header: proto.h,v 1.2 88/03/11 08:39:40 ouster Exp $ SPRITE (Berkeley)
d29 2
a30 4
 * The streams for files are accessible through an array of pointers.
 * The array starts off small, but expands dynamically to whatever
 * size is needed.  Each entry points to a FILE, or contains 0 if there's
 * nothing open in that slot.
d33 1
a33 3
#define			INIT_NUM_STREAMS 5
extern int		stdioNumFileStreams;	/* Current size of array. */
extern FILE		**stdioFileStreams;	/* Array of pointers. */
@
