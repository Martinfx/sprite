head     1.4;
branch   ;
access   ;
symbols  sprited:1.4.1;
locks    ; strict;
comment  @ * @;


1.4
date     90.09.10.17.08.38;  author rab;  state Exp;
branches 1.4.1.1;
next     1.3;

1.3
date     89.03.22.00.46.46;  author rab;  state Exp;
branches ;
next     1.2;

1.2
date     88.07.11.09.17.37;  author ouster;  state Exp;
branches ;
next     1.1;

1.1
date     88.05.21.17.30.58;  author ouster;  state Exp;
branches ;
next     ;

1.4.1.1
date     91.12.03.12.04.40;  author kupfer;  state Exp;
branches ;
next     ;


desc
@@


1.4
log
@Changed abort to give a SIG_ILL_INST instead of a SIG_DEBUG.
@
text
@/* 
 * abort.c --
 *
 *	Source code for the "abort" library procedure.
 *
 * Copyright 1988 Regents of the University of California
 * Permission to use, copy, modify, and distribute this
 * software and its documentation for any purpose and without
 * fee is hereby granted, provided that the above copyright
 * notice appear in all copies.  The University of California
 * makes no representations about the suitability of this
 * software for any purpose.  It is provided "as is" without
 * express or implied warranty.
 */

#ifndef lint
static char rcsid[] = "$Header: /sprite/src/lib/c/stdlib/RCS/abort.c,v 1.3 89/03/22 00:46:46 rab Exp Locker: rab $ SPRITE (Berkeley)";
#endif not lint

#include <sprite.h>
#include <stdlib.h>
#include <proc.h>
#include <sig.h>

/*
 *----------------------------------------------------------------------
 *
 * abort --
 *
 *	Cause abnormal termination of the process.  For now, this
 *	puts the process into the debugger.
 *
 * Results:
 *	None.
 *
 * Side effects:
 *	The process drops into the debugger.
 *
 *----------------------------------------------------------------------
 */

void
abort()
{
    extern void _cleanup();

    _cleanup();
    Sig_SetHoldMask(0, 0);
    Sig_Send(SIG_ILL_INST, PROC_MY_PID, FALSE);
    _exit(1);				/* Never return to caller, even
					 * if the debugger lets us continue. */
}
@


1.4.1.1
log
@Initial branch for Sprite server.
@
text
@d17 1
a17 1
static char rcsid[] = "$Header: /sprite/src/lib/c/stdlib/RCS/abort.c,v 1.4 90/09/10 17:08:38 rab Exp $ SPRITE (Berkeley)";
@


1.3
log
@*** empty log message ***
@
text
@d17 1
a17 1
static char rcsid[] = "$Header: /sprite/src/lib/c/stdlib/RCS/abort.c,v 1.2 88/07/11 09:17:37 ouster Exp Locker: rab $ SPRITE (Berkeley)";
d46 1
a46 1
    
d49 1
a49 1
    Sig_Send(SIG_DEBUG, PROC_MY_PID, FALSE);
d51 1
a51 1
    					 * if the debugger lets us continue. */
@


1.2
log
@Be sure to call _cleanup to flush I/O streams.
@
text
@d17 1
a17 1
static char rcsid[] = "$Header: abort.c,v 1.1 88/05/21 17:30:58 ouster Exp $ SPRITE (Berkeley)";
d21 1
@


1.1
log
@Initial revision
@
text
@d17 1
a17 1
static char rcsid[] = "$Header: proto.c,v 1.2 88/03/11 08:39:08 ouster Exp $ SPRITE (Berkeley)";
d44 3
@
