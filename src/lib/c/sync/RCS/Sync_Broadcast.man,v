head     1.2;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @@;


1.2
date     90.06.27.11.20.55;  author shirriff;  state Exp;
branches ;
next     1.1;

1.1
date     88.12.30.16.07.21;  author ouster;  state Exp;
branches ;
next     ;


desc
@@


1.2
log
@Changed include.
@
text
@' $Header: /sprite/src/lib/c/sync/RCS/Sync_Broadcast.man,v 1.1 88/12/30 16:07:21 ouster Exp Locker: shirriff $ SPRITE (Berkeley)
.so \*(]ltmac.sprite
.HS Sync_Broadcast lib 
.BS
.SH NAME
Sync_Broadcast \- awaken all processes waiting on a condition
.SH SYNOPSIS
\fB#include <sync.h>\fR
.sp .5
\fBSync_Broadcast\fR(\fIconditionPtr\fP)
.SH ARGUMENTS
.AS Sync_Condition *conditionPtr
.AP Sync_Condition *conditionPtr in
Condition variable for which processes may be awaiting notification.
.BE
.SH DESCRIPTION
.PP
\fBSync_Broadcast\fR notifies other processes that a condition has been met.
If no process is awaiting this condition, then the call has no effect.
If more than one process is waiting, all of
them will be awakened simultaneously and may execute in any
order.
This routine needs to be called with the monitor lock held.
.SH SEE ALSO
Sync, Sync_Wait
.SH KEYWORDS
synchronization, wait, block, process, monitor, condition variable, 
wakeup, broadcast
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
' $Header: Sync_Broadcast,v 1.7 86/12/16 20:33:09 andrew Exp $ SPRITE (Berkeley)
d8 1
a8 1
\fB#include <symcMonitor.h>\fR
@
