head     1.18;
branch   ;
access   ;
symbols  sprited:1.15.1;
locks    ; strict;
comment  @ * @;


1.18
date     92.11.13.11.28.06;  author mottsmth;  state Exp;
branches ;
next     1.17;

1.17
date     92.09.24.15.53.48;  author ouster;  state Exp;
branches ;
next     1.16;

1.16
date     91.11.01.15.11.58;  author rab;  state Exp;
branches ;
next     1.15;

1.15
date     91.09.25.17.00.12;  author kupfer;  state Exp;
branches 1.15.1.1;
next     1.14;

1.14
date     91.09.22.17.37.00;  author jhh;  state Exp;
branches ;
next     1.13;

1.13
date     91.03.30.17.24.38;  author kupfer;  state Exp;
branches ;
next     1.12;

1.12
date     90.12.01.23.42.31;  author kupfer;  state Exp;
branches ;
next     1.11;

1.11
date     90.09.11.17.09.41;  author mendel;  state Exp;
branches ;
next     1.10;

1.10
date     90.05.02.14.43.33;  author rab;  state Exp;
branches ;
next     1.9;

1.9
date     90.05.02.14.39.04;  author shirriff;  state Exp;
branches ;
next     1.8;

1.8
date     90.03.09.13.31.52;  author brent;  state Exp;
branches ;
next     1.7;

1.7
date     89.06.29.18.20.55;  author douglis;  state Exp;
branches ;
next     1.6;

1.6
date     89.06.21.11.57.51;  author douglis;  state Exp;
branches ;
next     1.5;

1.5
date     89.06.17.19.31.03;  author rab;  state Exp;
branches ;
next     1.4;

1.4
date     89.03.30.09.38.12;  author rab;  state Exp;
branches ;
next     1.3;

1.3
date     88.10.08.14.55.02;  author mendel;  state Exp;
branches ;
next     1.2;

1.2
date     88.06.29.14.48.27;  author ouster;  state Exp;
branches ;
next     1.1;

1.1
date     88.06.21.12.01.47;  author ouster;  state Exp;
branches ;
next     ;

1.15.1.1
date     91.09.28.18.29.45;  author kupfer;  state Exp;
branches ;
next     ;


desc
@@


1.18
log
@Fix ifdef around size_t
@
text
@/*
 * Copyright (c) 1982 Regents of the University of California.
 * All rights reserved.  The Berkeley software License Agreement
 * specifies the terms and conditions for redistribution.
 *
 *	@@(#)types.h	7.3 (Berkeley) 6/20/87
 *  $Header: /sprite/src/lib/include/sys/RCS/types.h,v 1.17 92/09/24 15:53:48 ouster Exp Locker: mottsmth $
 */

#ifndef _TYPES
#define	_TYPES
/*
 * Basic system types and major/minor device constructing/busting macros.
 *
 * Note that these are also defined as unix_major and unix_minor to
 * avoid conflict with the major and minor fields in the Fs_FileID struct.
 * That structure is defined in <fs.h>, which undefines the major() and
 * minor() macros if you aren't using an ANSI C compiler like gcc.
 */
#ifndef KERNEL
/* major part of a device */
#define	major(x)	((int)(((unsigned)(x)>>8)&0377))
#endif
#define unix_major(x)	((int)(((unsigned)(x)>>8)&0377))

#ifndef KERNEL
/* minor part of a device */
#define	minor(x)	((int)((x)&0377))
#endif
#define	unix_minor(x)	((int)((x)&0377))

/* make a device number */
#define	makedev(x,y)	((dev_t)(((x)<<8) | (y)))

typedef	unsigned char	u_char;
typedef	unsigned short	u_short;
typedef	unsigned int	u_int;
typedef	unsigned long	u_long;
typedef	unsigned short	ushort;		/* sys III compat */

#if defined(vax) || defined(tahoe)
typedef	struct	_physadr { int r[1]; } *physadr;
typedef	struct	label_t	{
	int	val[14];
} label_t;
#endif
#if defined(mc68000)
typedef	struct	_physadr { short r[1]; } *physadr;
typedef	struct	label_t	{
	int	val[13];
} label_t;
#endif

#if defined(mips)
typedef struct  _physadr { int r[1]; } *physadr;
typedef struct  label_t {
        int     val[12];
} label_t;
#endif mips

/* 
 * See <quad.h> for operations on these data types.
 */
typedef struct _quad {long val[2]; } quad;
typedef	struct	_uquad {unsigned long val[2]; } u_quad;

typedef	long	daddr_t;
typedef	char *	caddr_t;
typedef	long *	qaddr_t;	/* should be typedef quad * qaddr_t; */
typedef	u_long	ino_t;
typedef	long	swblk_t;
#ifndef _MODE_T
#define _MODE_T
typedef	unsigned short  mode_t;
#endif
#ifndef _SIZE_T
#define _SIZE_T
typedef	int	size_t;
#endif
#ifndef _TIME_T
#define _TIME_T
typedef	long	time_t;
#endif
#ifndef _CLOCK_T
#define _CLOCK_T
typedef	long	clock_t;
#endif
typedef	short	dev_t;
typedef	long	off_t;
typedef	short	uid_t;
typedef	short	gid_t;
/* 
 * A Sprite Proc_PID is an unsigned int, but UNIX code expects to be able 
 * to check for pid's that are less than 0 (e.g., error return from 
 * fork()), so we make pid_t be signed.
 */
#ifndef _PID_T
#define _PID_T
typedef int	pid_t;
#endif
typedef long	key_t;		/* sys V compat */

#define	NBBY	8		/* number of bits in a byte */
/*
 * Select uses bit masks of file descriptors in longs.
 * These macros manipulate such bit fields (the filesystem macros use chars).
 * FD_SETSIZE may be defined by the user, but the default here
 * should be >= NOFILE (param.h).
 */
#ifndef	FD_SETSIZE
#define	FD_SETSIZE	256
#endif

typedef long	fd_mask;
#define NFDBITS	(sizeof(fd_mask) * NBBY)	/* bits per mask */
#ifndef howmany
#define	howmany(x, y)	(((x)+((y)-1))/(y))
#endif

typedef	struct fd_set {
	fd_mask	fds_bits[howmany(FD_SETSIZE, NFDBITS)];
} fd_set;

#define	FD_SET(n, p)	((p)->fds_bits[(n)/NFDBITS] |= (1 << ((n) % NFDBITS)))
#define	FD_CLR(n, p)	((p)->fds_bits[(n)/NFDBITS] &= ~(1 << ((n) % NFDBITS)))
#define	FD_ISSET(n, p)	((p)->fds_bits[(n)/NFDBITS] & (1 << ((n) % NFDBITS)))
#define FD_ZERO(p)	bzero((char *)(p), sizeof(*(p)))

#endif /* _TYPES */
@


1.17
log
@Define "mode_t" in types.h as well as stdtypes.h, but make sure
they don't interfere with each other.
@
text
@d7 1
a7 1
 *  $Header: /sprite/src/lib/include/sys/RCS/types.h,v 1.16 91/11/01 15:11:58 rab Exp Locker: ouster $
d76 2
a77 2
#ifndef _MODE_T
#define _MODE_T
@


1.16
log
@Put #ifdef around clock_t.
@
text
@d7 1
a7 1
 *  $Header: /sprite/src/lib/include/sys/RCS/types.h,v 1.15 91/09/25 17:00:12 kupfer Exp Locker: rab $
d72 6
a77 2
#ifndef _SIZE_T
#define _SIZE_T
@


1.15
log
@Add pid_t.
@
text
@d7 1
a7 1
 *  $Header: /sprite/src/lib/include/sys/RCS/types.h,v 1.14 91/09/22 17:37:00 jhh Exp Locker: kupfer $
d79 3
d93 2
d96 1
@


1.15.1.1
log
@Initial branch for Sprite server.
@
text
@d7 1
a7 1
 *  $Header: /sprite/src/lib/include/sys/RCS/types.h,v 1.15 91/09/25 17:00:12 kupfer Exp $
@


1.14
log
@added some things used in mips core files
@
text
@d7 1
a7 1
 *  $Header: /sprite/src/lib/include/sys/RCS/types.h,v 1.13 91/03/30 17:24:38 kupfer Exp Locker: jhh $
d85 6
@


1.13
log
@Mary checking this in for Mike.
@
text
@d7 1
a7 1
 *  $Header$
d53 7
@


1.12
log
@More support for 64-bit (quad) integers.
@
text
@d7 1
d55 1
a55 3
 * 64-bit integers.  (I would prefer having two longs, "hi" and "lo",
 * rather than a 2-word array.  Unfortunately, that would be
 * incompatible with the BSD definition.)  
a56 1

a58 35

/* 
 * Some useful operations for dealing with unsigned quads (e.g.,
 * counters).  Word 0 is assumed to be least-significant.
 * 
 * This list is far from complete, but we might as well 
 * put the things we need in a central place.
 */

#define UQUAD_PLUS_ULONG(uquadVal, ulongVal) \
    {unsigned long tmp; \
     tmp = (uquadVal).val[0] + (ulongVal); \
     if (tmp < (uquadVal).val[0] && tmp < (ulongVal)) \
	 (uquadVal).val[1]++; \
     (uquadVal).val[0] = tmp; \
    }

/* 
 * Note the order of operations.  This is so that a u_quad can be 
 * added to itself.
 */
#define UQUAD_PLUS_UQUAD(uq1, uq2) \
    {unsigned long tmp; \
     tmp = (uq1).val[0] + (uq2).val[0]; \
     (uq1).val[1] += (uq2).val[1]; \
     if (tmp < (uq1).val[0] && tmp < (uq2).val[0]) \
	 (uq1).val[1]++; \
     (uq1).val[0] = tmp; \
    }

/* 
 * Evaluates to non-zero if the given quad (or u_quad) is zero.
 */
#define QUAD_IS_ZERO(q) \
    ((q).val[0] == 0 && (q).val[1] == 0)
@


1.11
log
@Remove defines for minor from kernel compiles.
@
text
@d52 45
a96 1
typedef	struct	_quad { long val[2]; } quad;
@


1.10
log
@Added typedef for clock_t and put ifdefs around time_t so it doesn't
conflict with the typedef in time.h.
@
text
@d19 1
a19 1

d22 1
d25 1
d28 1
@


1.9
log
@Added key_t for system V compatibility.
@
text
@d59 2
d62 2
@


1.8
log
@Added unix_major and unix_minor
@
text
@d64 1
@


1.7
log
@made uid_t and gid_t shorts instead of ints.
@
text
@d13 5
d22 1
d26 1
@


1.6
log
@changed uid/gid types to ints
@
text
@d55 2
a56 2
typedef	int	uid_t;
typedef	int	gid_t;
@


1.5
log
@*** empty log message ***
@
text
@d55 2
a56 2
typedef	u_short	uid_t;
typedef	u_short	gid_t;
@


1.4
log
@*** empty log message ***
@
text
@d84 1
a84 1
#endif _TYPES
@


1.3
log
@Added #ifdef for mc68000 for the declaration of struct label_t.
@
text
@d48 4
a51 1
typedef	long	size_t;
@


1.2
log
@Add ifdefs to prevent files from being included multiple times.
@
text
@d36 6
@


1.1
log
@Initial revision
@
text
@d9 2
a10 2
#ifndef _TYPES_
#define	_TYPES_
d75 1
a75 1
#endif
@
