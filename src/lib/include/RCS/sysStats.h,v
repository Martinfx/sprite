head     2.45;
branch   ;
access   ;
symbols  sprited:2.35.1;
locks    ; strict;
comment  @ * @;


2.45
date     92.09.21.11.34.02;  author mgbaker;  state Exp;
branches ;
next     2.44;

2.44
date     92.07.30.13.06.12;  author mgbaker;  state Exp;
branches ;
next     2.43;

2.43
date     92.05.31.16.52.49;  author kupfer;  state Exp;
branches ;
next     2.42;

2.42
date     92.05.18.11.36.31;  author mgbaker;  state Exp;
branches ;
next     2.41;

2.41
date     91.11.07.13.33.41;  author mgbaker;  state Exp;
branches ;
next     2.40;

2.40
date     91.10.01.00.19.20;  author mgbaker;  state Exp;
branches ;
next     2.39;

2.39
date     91.09.13.12.47.29;  author mgbaker;  state Exp;
branches ;
next     2.38;

2.38
date     91.08.21.15.03.08;  author mgbaker;  state Exp;
branches ;
next     2.37;

2.37
date     91.08.21.14.58.37;  author mgbaker;  state Exp;
branches ;
next     2.36;

2.36
date     91.08.21.14.43.45;  author mendel;  state Exp;
branches ;
next     2.35;

2.35
date     91.05.29.09.12.19;  author mendel;  state Exp;
branches 2.35.1.1;
next     2.34;

2.34
date     91.03.07.16.41.57;  author mgbaker;  state Exp;
branches ;
next     2.33;

2.33
date     91.03.06.22.25.17;  author jhh;  state Exp;
branches ;
next     2.32;

2.32
date     91.01.25.12.39.19;  author mgbaker;  state Exp;
branches ;
next     2.31;

2.31
date     91.01.24.16.26.15;  author mgbaker;  state Exp;
branches ;
next     2.30;

2.30
date     91.01.08.16.39.30;  author shirriff;  state Exp;
branches ;
next     2.29;

2.29
date     90.12.11.00.43.17;  author mgbaker;  state Exp;
branches ;
next     2.28;

2.28
date     90.12.07.19.40.45;  author mgbaker;  state Exp;
branches ;
next     2.27;

2.27
date     90.12.07.19.29.31;  author mgbaker;  state Exp;
branches ;
next     2.26;

2.26
date     90.12.07.15.06.07;  author mgbaker;  state Exp;
branches ;
next     2.25;

2.25
date     90.12.06.22.10.49;  author shirriff;  state Exp;
branches ;
next     2.24;

2.24
date     90.11.27.12.02.47;  author mgbaker;  state Exp;
branches ;
next     2.23;

2.23
date     90.11.27.11.58.49;  author shirriff;  state Exp;
branches ;
next     2.22;

2.22
date     90.06.21.12.46.50;  author mgbaker;  state Exp;
branches 2.22.1.1;
next     2.21;

2.21
date     90.05.30.19.06.59;  author mgbaker;  state Exp;
branches ;
next     2.20;

2.20
date     90.04.18.16.31.48;  author mgbaker;  state Exp;
branches ;
next     2.19;

2.19
date     90.03.26.12.11.40;  author mgbaker;  state Exp;
branches ;
next     2.18;

2.18
date     90.02.03.15.33.49;  author mgbaker;  state Exp;
branches ;
next     2.17;

2.17
date     89.10.10.16.27.23;  author brent;  state Exp;
branches ;
next     2.16;

2.16
date     89.10.10.16.25.45;  author jhh;  state Exp;
branches ;
next     2.15;

2.15
date     89.07.28.17.19.59;  author douglis;  state Exp;
branches ;
next     2.14;

2.14
date     89.07.28.17.07.35;  author douglis;  state Exp;
branches ;
next     2.13;

2.13
date     89.07.28.17.06.58;  author douglis;  state Exp;
branches ;
next     2.12;

2.12
date     89.07.14.09.10.02;  author rab;  state Exp;
branches ;
next     2.11;

2.11
date     89.06.25.20.08.40;  author jhh;  state Exp;
branches ;
next     2.10;

2.10
date     89.06.23.12.11.29;  author brent;  state Exp;
branches ;
next     2.9;

2.9
date     89.04.07.10.15.26;  author douglis;  state Exp;
branches ;
next     2.8;

2.8
date     89.03.27.22.25.01;  author jhh;  state Exp;
branches ;
next     2.7;

2.7
date     88.11.18.09.57.31;  author douglis;  state Exp;
branches ;
next     2.6;

2.6
date     88.09.09.10.13.50;  author brent;  state Exp;
branches ;
next     2.5;

2.5
date     88.09.06.14.26.11;  author nelson;  state Exp;
branches ;
next     2.4;

2.4
date     88.07.12.14.01.58;  author douglis;  state Exp;
branches ;
next     2.3;

2.3
date     88.07.12.14.00.00;  author douglis;  state Exp;
branches ;
next     2.2;

2.2
date     87.12.10.08.59.49;  author brent;  state Exp;
branches ;
next     2.1;

2.1
date     87.09.29.09.42.57;  author brent;  state Exp;
branches ;
next     2.0;

2.0
date     87.08.11.09.32.53;  author brent;  state Exp;
branches ;
next     ;

2.22.1.1
date     90.08.07.18.21.14;  author mgbaker;  state Exp;
branches ;
next     ;

2.35.1.1
date     91.10.21.21.20.06;  author kupfer;  state Exp;
branches ;
next     ;


desc
@@


2.45
log
@New param.
@
text
@/*
 * sysStat.h --
 *
 *	User-level definitions of routines and types for system statistics
 *	returned by the Sys_Stats system call.  Instead of a /dev/kmem
 *	type interface, we have calls to return specific kernel structure.
 *	The kernel call takes the following arguments:
 *	Sys_Stats(command, option, argPtr)
 *	commands are defined below, and option and argPtr are interpreted
 *	differently by each command.  Typically argPtr is a buffer that
 *	gets filled in with a system structure, and option is used to
 *	indicate the size, or to control tracing, or isn't used at all.
 *
 * Copyright 1986, 1988 Regents of the University of California
 * Permission to use, copy, modify, and distribute this
 * software and its documentation for any purpose and without
 * fee is hereby granted, provided that the above copyright
 * notice appear in all copies.  The University of California
 * makes no representations about the suitability of this
 * software for any purpose.  It is provided "as is" without
 * express or implied warranty.
 *
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.44 92/07/30 13:06:12 mgbaker Exp Locker: mgbaker $ SPRITE (Berkeley)
 *
 */

#ifndef _SYSSTATS
#define _SYSSTATS

/*
 * Commands for the Sys_Stats system call.
 *	SYS_RPC_CLT_STATS - Return the Rpc_CltStats structure that contains
 *		client-side statistics for the RPC system. (see rpc.h)
 *	SYS_RPC_SRV_STATS - Return the Rpc_SrvStats structure that contains
 *		server-side statistics for the RPC system. (see rpc.h)
 *	SYS_SYNC_STATS - Return the Sync_Instrument structure which
 *		contains lock and wakeup counts. (see kernel/sync.h)
 *	SYS_SCHED_STATS - Return the Sched_Instrument structure which
 *		contains idle time and context switch counts (kernel/sched.h)
 *	SYS_VM_STATS - Return the Vm_Stat structure which contains every
 *		concievable VM statistic, fault counts etc. (kernel/vmStat.h)
 *	SYS_RPC_TRACE_STATS - Used to both return the trace of recent RPCs,
 *		and to enable/disable the trace, see options below.
 *	SYS_FS_PREFIX_STATS - Return entries from the prefix table. (see fs.h)
 *	SYS_PROC_TRACE_STATS - Used to both return the process migration
 *		trace, and to enable/disable the trace, see options below.
 *	SYS_SYS_CALL_STATS - Return the array of system call counters.
 *		option indicates how many integers the buffer argPtr contains.
 *	SYS_RPC_SERVER_HIST - Return the service time histogram for the RPC
 *		indicated by option. (see kernel/rpcHistogram.h)  If option
 *		is less than or equal to zero the histogram is cleared.
 *	SYS_RPC_CLIENT_HIST - Return service time as obseved by a client.
 *	SYS_NET_GET_ROUTE - Return the route table entry for a particular host.
 *		The data returned are three integers: flags, spriteID, and
 *		route type.  This is then followed by type specific data,
 *		either an ethernet address or an internet address.
 *	SYS_RPC_SRV_STATE - Return the RpcServerState structure for the
 *		RPC server indexed by option.  (see kernel/rpcServer.h)
 *	SYS_RPC_CLT_STATE - Return the RpcClientState structure for the
 *		RPC client channel indexed by option.  (see kernel/rpcClient.h)
 *	SYS_NET_ETHER_STATS - Return the Net_EtherStats structure which
 *		contains interface statistics.  (see kernel/net.h)
 *	 SYS_RPC_ENABLE_SERVICE - Enable/disable the service side of the RPC
 *		system.  A non-zero option value enables, zero disables.
 *	SYS_GET_VERSION_STRING - Return the kernel version string.  option
 *		indicates how big the users buffer is.
 *	SYS_PROC_MIGRATION - Enable/Disable process migration to this host.
 *		See options defined below.
 *	SYS_DISK_STATS - Return the Sys_DiskStats structure defined below.
 *		option corresponds to a kernel controller table index.
 *	SYS_FS_PREFIX_EXPORT - Return the export list of a prefix.  The
 *		option parameter indicates the size of the buffer argPtr.
 *		argPtr should contain the prefix upon entry, and is
 *		overwritten with an integer array of SpriteIDs that
 *		corresponds to the export list for the prefix.
 *	SYS_LOCK_STATS - Return the locking statistics. option indicates the
 *		size of the buffer in units of Sync_LockStat structures.
 *	SYS_RPC_SRV_COUNTS - Return the count of RPC service calls.  The
 *		option argument is unused.  If argPtr == NULL then the
 *		counts are printed on the console, otherwise it should be
 *		the address of an integer array size RPC_LAST_COMMAND+1
 *	SYS_RPC_CALL_COUNTS - Return the count of RPC calls.  The
 *		option argument is unused.  If argPtr == NULL then the
 *		counts are printed on the console, otherwise it should be
 *		the address of an integer array size RPC_LAST_COMMAND+1
 *	SYS_LOCK_RESET_STATS - Reset the locking statistics.
 *	SYS_INST_COUNTS - Return information from instruction counts. This
 *		only works on special spur kernels.
 *	SYS_RESET_INST_COUNTS - Reset instruction counts.
 *	SYS_RECOV_STATS - Return information about the recov module.
 *	SYS_RECOV_PRINT - Change printing level of recov module traces.
 *	SYS_FS_RECOV_INFO - Return info with names about the state of
 *		files for recovery testing.
 *	SYS_RECOV_CLIENT_INFO - Dump state on server about per-client recovery.
 *	SYS_RPC_SERVER_TRACE - Turn tracing of rpc servers on or off.
 *	SYS_RPC_SERVER_INFO - Return rpc server tracing info to user.
 *	SYS_RPC_SERVER_FREE - Free up space used by rpc server tracing.
 *	SYS_RPC_SET_MAX - Set the maximum number of server processes.
 *	SYS_RPC_SET_NUM - Create enough server processes to have this many.
 *	SYS_RPC_NEG_ACKS - Turn on or off negative acks on the server.
 *	SYS_RPC_CHANNEL_NEG_ACKS -  Set client policy on or off for handling
 *		neg acks by ramping down the number of client channels.
 *	SYS_RECOV_ABS_PINGS - Whether to use absolute ping intervals or not.
 *	SYS_RECOV_PRINT - Set the recovery print level.
 *	SYS_RPC_NUM_NACK_BUFS - Set the number of negative acknowledgement
 *		buffers.
 *	SYS_START_STATS - Turn on the kernel's periodic printing of sched
 *		and io stats.  TEMPORARY for recovery measurements.
 *	SYS_END_STATS - Turn off the kernel's periodic printing of sched
 *		and io stats.  TEMPORARY for recovery measurements.
 *      SYS_DEV_CHANGE_SCSI_DEBUG - Change debug level for scsi driver.
 *      SYS_SYS_CALL_STATS_ENABLE - Turn on or off system call profiling.
 *      SYS_SYS_CALL_TIMES - Get the system call counts and profiling times.
 *	SYS_RPC_SANITY_CHECK - Toggle sanity checks on rpc packets.
 *	SYS_FS_EXTRA_STATS - Extra fs stats that should go into fsStats for
 *				the next global compile.
 *	SYS_PROC_ADD_SERVERS - Add proc server processes to the kernel.
 *	SYS_FAST_RESTART - With option -1: restart the kernel from scratch with
 *		no download.  With other options, set the debug level for
 *		printing error messages to the level given by the option.
 *	SYS_RECOV_BOX - Command operating on the recovery box.
 *	SYS_DONT_PRINT - Turn off the ability to print.  Useful for testing
 *		speed of booting.
 *	SYS_MACH_PRINT_DEV_TREE - For the sparcstations only: traverse and
 *		print sbus device information tree in prom.
 *	SYS_RECOV_PARAMS - Change recovery parameters.
 */

#define SYS_RPC_CLT_STATS	1
#define SYS_RPC_SRV_STATS	2
#define SYS_SYNC_STATS		3
#define SYS_SCHED_STATS		4
#define SYS_VM_STATS		5
#define SYS_RPC_TRACE_STATS	6
#define SYS_FS_PREFIX_STATS	7
#define SYS_PROC_TRACE_STATS	8
#define SYS_SYS_CALL_STATS	9
#define SYS_RPC_SERVER_HIST	10
#define SYS_RPC_CLIENT_HIST	11
#define SYS_NET_GET_ROUTE	12
#define SYS_RPC_SRV_STATE	13
#define SYS_RPC_CLT_STATE	14
#define	SYS_NET_ETHER_STATS	15
#define SYS_RPC_ENABLE_SERVICE	16
#define SYS_GET_VERSION_STRING	17
#define SYS_PROC_MIGRATION	18
#define	SYS_DISK_STATS		19
#define SYS_FS_PREFIX_EXPORT	20
#define SYS_LOCK_STATS		21
#define SYS_RPC_SRV_COUNTS	22
#define SYS_RPC_CALL_COUNTS	23
#define SYS_LOCK_RESET_STATS	24
#define SYS_INST_COUNTS		25
#define SYS_RESET_INST_COUNTS	26
#define SYS_RECOV_STATS		27
#define SYS_FS_RECOV_INFO	28
#define	SYS_RECOV_CLIENT_INFO	29
#define	SYS_RPC_SERVER_TRACE 	30
#define	SYS_RPC_SERVER_INFO	31
#define	SYS_RPC_SERVER_FREE	32
#define	SYS_RPC_SET_MAX		33
#define	SYS_RPC_SET_NUM		34
#define	SYS_RPC_NEG_ACKS	35
#define	SYS_RPC_CHANNEL_NEG_ACKS	36
#define SYS_RECOV_ABS_PINGS	37
#define SYS_RECOV_PRINT		38
#define	SYS_RPC_NUM_NACK_BUFS	39
#define	SYS_TRACELOG_STATS	40
#define SYS_START_STATS		100
#define SYS_END_STATS		101
#define SYS_DEV_CHANGE_SCSI_DEBUG 102
#define SYS_SYS_CALL_STATS_ENABLE 103
#define SYS_SYS_CALL_TIMES	104
/* Space for more numbers in here. */
#define SYS_RPC_SANITY_CHECK	107
#define SYS_FS_EXTRA_STATS	108
#define	SYS_PROC_ADD_SERVERS	109
#define SYS_FAST_RESTART	110
#define SYS_RECOV_BOX		111
#define	SYS_DONT_PRINT		112
#define	SYS_MACH_PRINT_DEV_TREE 113
#define	SYS_RECOV_PARAMS 	114

/*
 * Options for the Sys_Stats SYS_RPC_TRACE_STATS command.  If the option
 * is a positive value then that number of trace records are returned
 * into the buffer referenced by argPtr.
 */
#define SYS_RPC_TRACING_PRINT	-1
#define SYS_RPC_TRACING_OFF	-2
#define SYS_RPC_TRACING_ON	-3

/*
 * Options for the Sys_Stats SYS_PROC_TRACE_STATS command.  Use these
 * values for the option argument to the Test_Stats call when using
 * the PROC_TRACE_STATS command.  Any argument greater than the
 * largest positive defined constant is the number of trace records to
 * copy into the output buffer (i.e., it is not permissible to copy
 * only 1-3 records).
 */
#define SYS_PROC_TRACING_PRINT	1
#define SYS_PROC_TRACING_OFF	2
#define SYS_PROC_TRACING_ON	3

/*
 * Options for the Sys_Stats SYS_PROC_MIGRATION command.
 * ALLOW, REFUSE, and GET_STATUS are obsoleted by GET_STATE and SET_STATE.
 *
 *   SYS_PROC_MIG_ALLOW		- allow all migrations to this machine.
 *   SYS_PROC_MIG_REFUSE	- refuse all migrations to this machine.
 *   SYS_PROC_MIG_GET_STATUS	- get whether all migrations are allowed
 *				  or refused.
 *   SYS_PROC_MIG_SET_DEBUG	- set the migration debug level.
 *   SYS_PROC_MIG_GET_VERSION	- get the migration version.
 *   SYS_PROC_MIG_GET_STATE	- get the general migration state.
 *   SYS_PROC_MIG_SET_STATE	- set it.
 *   SYS_PROC_MIG_SET_VERSION	- set the migration version.
 *   SYS_PROC_MIG_GET_STATS	- get statistics.
 *   SYS_PROC_MIG_RESET_STATS	- reset statistics.
 */
#define SYS_PROC_MIG_ALLOW		0
#define SYS_PROC_MIG_REFUSE		1
#define SYS_PROC_MIG_GET_STATUS		2
#define SYS_PROC_MIG_SET_DEBUG		3
#define SYS_PROC_MIG_GET_VERSION	4
#define SYS_PROC_MIG_GET_STATE		5
#define SYS_PROC_MIG_SET_STATE		6
#define SYS_PROC_MIG_SET_VERSION	7
#define SYS_PROC_MIG_GET_STATS		8
#define SYS_PROC_MIG_RESET_STATS	9

/*
 * Options for SYS_TRACELOG_STATS.
 */
#define SYS_TRACELOG_ON		1
#define SYS_TRACELOG_OFF	2
#define SYS_TRACELOG_DUMP	3
#define SYS_TRACELOG_RESET	4
/* 
 * Structure to return SYS_TRACELOG_STATS.
 */
typedef struct Sys_TracelogRecord {
    int		recordLen;	/* Size of this record in bytes. */
    int		time[2];	/* (Timer_Ticks) Timestamp. */
    ClientData	data;		/* Arbitrarily long data. */
} Sys_TracelogRecord;

#define SYS_TRACELOG_KERNELLEN 32
#define SYS_TRACELOG_TYPELEN 8
/*
 * This is the header we write to the user level file.
 * Note: things are in somewhat of a state of flux.  The current status is:
 * File is stored as:
 *   magic #
 *   Sys_TracelogHeader
 *   A bunch of records
 * The fields: numBytes, numRecs, and lostRecords are not used.
 * The traceDir is filled in by the user-level dump program.
 * Lost records are indicated by a special record type in the file.
 * The reason for this format is that it is inconvenient to have the length
 * in the header, since any routine post-processing data and writing a
 * new file would have to go back and modify the header after it knew
 * how many records it had.  This way, you write out a fixed header and
 * then whatever records you want.
 */
typedef struct Sys_TracelogHeader {
    int		numBytes;	/* Total size of the records in bytes. */
				/* Flags are stored in the high 2 bytes. */
    int		numRecs;	/* Number of records. */
    int		machineID;	/* ID of this machine. */
    char	kernel[SYS_TRACELOG_KERNELLEN];	/* Kernel we're running. */
    char	machineType[SYS_TRACELOG_TYPELEN]; /* Machine type. */
    int		bootTime[2];	/* Time of boot (to convert of trace time. */
    int		lostRecords;	/* Records lost from overflow. */
    int		traceDir[4];	/* FileID of the trace directory. */
} Sys_TracelogHeader;

/*
 * This is the structure returned by the kernel.
 */
typedef struct Sys_TracelogHeaderKern {
    int		numBytes;	/* Total size of the records in bytes. */
				/* Flags are stored in the high 2 bytes. */
    int		numRecs;	/* Number of records. */
    int		machineID;	/* ID of this machine. */
    char	kernel[SYS_TRACELOG_KERNELLEN];	/* Kernel we're running. */
    char	machineType[SYS_TRACELOG_TYPELEN]; /* Machine type. */
    int		bootTime[2];	/* Time of boot (to convert of trace time. */
    int		lostRecords;	/* Records lost from overflow. */
} Sys_TracelogHeaderKern;

#define LOST_TYPE 128

#define TRACELOG_FLAGMASK 0xf0000000
#define TRACELOG_TYPEMASK 0x0fff0000
#define TRACELOG_BYTEMASK 0x0000ffff

#define TRACELOG_MAGIC 0x44554d50
#define TRACELOG_MAGIC2 0x44554d51

/*
 * Structure to return for disk stats.
 */
#define	SYS_DISK_NAME_LENGTH	100
typedef struct Sys_DiskStats {
    char	name[SYS_DISK_NAME_LENGTH];	/* Type of disk. */
    int		controllerID;			/* Which controller it is. */
    int		numSamples;			/* Number of times idle time
						 * was sampled. */
    int		idleCount;			/* Number of times disk was
						 * idle when sampled. */
    int		diskReads;			/* The number of sector reads 
						 * from this disk. */
    int		diskWrites;			/* The number of sector writes
						 * from this disk. */
} Sys_DiskStats;

extern ReturnStatus		Sys_Stats();

#endif /* _SYSSTATS */
@


2.44
log
@For testing.
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.43 92/05/31 16:52:49 kupfer Exp Locker: mgbaker $ SPRITE (Berkeley)
d126 1
d182 1
@


2.43
log
@Add SYS_SYS_CALL_STATS_ENABLE and SYS_SYS_CALL_TIMES.
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.42 92/05/18 11:36:31 mgbaker Exp Locker: kupfer $ SPRITE (Berkeley)
d124 2
d180 1
@


2.42
log
@*** empty log message ***
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.41 91/11/07 13:33:41 mgbaker Exp Locker: mgbaker $ SPRITE (Berkeley)
d112 2
d169 2
@


2.41
log
@Added a comment about another option.
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.40 91/10/01 00:19:20 mgbaker Exp Locker: mgbaker $ SPRITE (Berkeley)
d120 2
a121 6
#ifdef MGB
		This stuff can be removed after SOSP. -Mary 10/1/91
 *	SYS_MGB_TRACE_ON - Start quickie sosp traces.
 *	SYS_MGB_TRACE_OFF - Stop quickie sosp traces.
 *	SYS_MGB_WRITE_TRACE - Write out quickie sosp traces to a user buffer.
#endif MGB
d173 1
a173 6
#ifdef MGB
    /* This stuff can be removed after SOSP.  -Mary 10/1/91 */
#define SYS_MGB_TRACE_ON	112
#define SYS_MGB_TRACE_OFF	113
#define SYS_MGB_WRITE_TRACE	114
#endif MGB
@


2.40
log
@Added defines for quickie sosp traces.
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.39 91/09/13 12:47:29 mgbaker Exp Locker: mgbaker $ SPRITE (Berkeley)
d116 3
a118 1
 *	SYS_FAST_RESTART - Restart the kernel from scratch with no download.
@


2.39
log
@Took out sosp code.
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.38 91/08/21 15:03:08 mgbaker Exp Locker: mgbaker $ SPRITE (Berkeley)
d118 6
d175 6
@


2.38
log
@Added recovery box command hook.
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.37 91/08/21 14:58:37 mgbaker Exp Locker: mgbaker $ SPRITE (Berkeley)
a110 1
 *	SYS_TRACELOG_STATS - Trace log buffer commands (for SOSP91 paper).
a111 4
 *	SYS_SCHED_MORE_STATS - More counters from the sched module (SOSP91).
 *	SYS_FS_SOSP_MIG_STATS - Counters from the fs module (SOSP91).
 *	SYS_FS_SOSP_NAME_STATS - Undocumented flag of Ken's (SOSP91).
 *	SYS_FSCACHE_EXTRA_STATS - Info about cache blocks (SOSP91).
d163 1
a163 6
#ifdef SOSP91
#define	SYS_SCHED_MORE_STATS	103
#define	SYS_FS_SOSP_MIG_STATS	104
#define	SYS_FS_SOSP_NAME_STATS	105
#define	SYS_FSCACHE_EXTRA_STATS	106
#endif SOSP91
a302 24

#ifdef SOSP91

#include <spriteTime.h>

typedef	struct	Sys_SchedOverallTimes {
    Time	kernelTime;
    Time	userTime;
    Time	userTimeMigrated;
} Sys_SchedOverallTimes;

/*
 * Statistics for name lookup on client.
 */
typedef struct Sys_SospNameStats {
    Time	totalNameTime;
    Time	nameTime;
    Time	prefixTime;
    Time	miscTime;
    int		numPrefixLookups;
    int		numComponents;
    int		numPrefixComponents;
} Sys_SospNameStats;
#endif SOSP91
@


2.37
log
@Added fast restart hook.
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.36 91/08/21 14:43:45 mendel Exp Locker: mgbaker $ SPRITE (Berkeley)
d122 1
d178 1
@


2.36
log
@Added SYS_PROC_ADD_SERVERS.
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.35 91/05/29 09:12:19 mendel Exp $ SPRITE (Berkeley)
d121 1
d176 1
@


2.35
log
@Modified comment in Sys_DiskStats structure to match new usages.
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.34 91/03/07 16:41:57 mgbaker Exp $ SPRITE (Berkeley)
d120 1
d174 1
a174 1

@


2.35.1.1
log
@Initial branch for Sprite server.
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.35 91/05/29 09:12:19 mendel Exp $ SPRITE (Berkeley)
@


2.34
log
@New temporary stats.
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.33 91/03/06 22:25:17 jhh Exp Locker: mgbaker $ SPRITE (Berkeley)
d303 4
a306 4
    int		diskReads;			/* The number of reads from
						 * this disk. */
    int		diskWrites;			/* The number of writes from
						 * this disk. */
@


2.33
log
@added SYS_RPC_SANITY_CHECK, deleted SYS_RPC_EXTRA_SRV_STATS
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.32 91/01/25 12:39:19 mgbaker Exp Locker: jhh $ SPRITE (Berkeley)
d118 2
d172 1
@


2.32
log
@Fixed comment bug.
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.31 91/01/24 16:26:15 mgbaker Exp Locker: mgbaker $ SPRITE (Berkeley)
a106 2
 *	SYS_RPC_EXTRA_SRV_STATS - TEMPORARY way of getting extra server side
 *		rpc statistics until it's okay to change rpcStat structures.
d117 1
a159 1
#define	SYS_RPC_EXTRA_SRV_STATS	99
d169 1
@


2.31
log
@Added another sosp flag.
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.30 91/01/08 16:39:30 shirriff Exp Locker: mgbaker $ SPRITE (Berkeley)
a116 1
 *	SYS_FSCACHE_EXTRA_STATS - Counters from the fscache module (SOSP91).
@


2.30
log
@Added statistics for name lookup.
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.29 90/12/11 00:43:17 mgbaker Exp $ SPRITE (Berkeley)
d117 3
d170 1
@


2.29
log
@Sosp counters
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.28 90/12/07 19:40:45 mgbaker Exp Locker: mgbaker $ SPRITE (Berkeley)
d166 1
d285 1
d313 13
@


2.28
log
@bug fix.
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.27 90/12/07 19:29:31 mgbaker Exp Locker: mgbaker $ SPRITE (Berkeley)
d116 1
d165 1
@


2.27
log
@Added more sosp stuff.
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.26 90/12/07 15:06:07 mgbaker Exp Locker: mgbaker $ SPRITE (Berkeley)
d301 3
@


2.26
log
@More sosp counter stubs
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.25 90/12/06 22:10:49 shirriff Exp Locker: mgbaker $ SPRITE (Berkeley)
d299 8
@


2.25
log
@Changes for SOSP91 tracing.
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.24 90/11/27 12:02:47 mgbaker Exp $ SPRITE (Berkeley)
d115 1
d162 3
@


2.24
log
@scsi driver debug stat stub flag
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.23 90/11/27 11:58:49 shirriff Exp Locker: mgbaker $ SPRITE (Berkeley)
d229 16
d254 1
d257 16
d276 2
@


2.23
log
@Mary checking in Ken's SOSP trace stuff.
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.22 90/06/21 12:46:50 mgbaker Exp Locker: shirriff $ SPRITE (Berkeley)
d114 1
d160 1
@


2.22
log
@sys stat num for disk and cpu stats.
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.21 90/05/30 19:06:59 mgbaker Exp Locker: mgbaker $ SPRITE (Berkeley)
d113 1
d155 1
d180 1
a180 1
#define SYS_PROC_TRACING_ON		3
d209 32
@


2.22.1.1
log
@Contains asplos statistics-gathering code.
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.22 90/06/21 12:46:50 mgbaker Exp $ SPRITE (Berkeley)
a112 4
 *	SYS_MACH_STATS - Get temporary statistics from the mach module for
 *		the asplos paper.
 *      SYS_SCHED_MORE_STATS - Get the extra temporary sched stats for
 *              the asplos paper.
a156 2
#define SYS_MACH_STATS		102
#define SYS_SCHED_MORE_STATS	103
@


2.21
log
@Added flag to set number of nack bufs.
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.20 90/04/18 16:31:48 mgbaker Exp Locker: mgbaker $ SPRITE (Berkeley)
d107 6
d154 3
@


2.20
log
@Added new recov hook for printing.
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.19 90/03/26 12:11:40 mgbaker Exp Locker: mgbaker $ SPRITE (Berkeley)
d104 3
d147 1
@


2.19
log
@Checkin before install of kernel.  Added rpc, etc, hooks to Sys_Stat
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.18 90/02/03 15:33:49 mgbaker Exp Locker: mgbaker $ SPRITE (Berkeley)
d91 1
d143 1
@


2.18
log
@Added another rpc/recovery info gathering entrance into Sys_Stat().
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.17 89/10/10 16:27:23 brent Exp Locker: mgbaker $ SPRITE (Berkeley)
d97 6
d137 5
@


2.17
log
@Added SYS_RECOV_STATS
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.16 89/10/10 16:25:45 jhh Exp Locker: brent $ SPRITE (Berkeley)
d91 6
d126 5
@


2.16
log
@Added SPUR intruction counting #defines
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.15 89/07/28 17:19:59 douglis Exp Locker: jhh $ SPRITE (Berkeley)
d90 1
d119 1
@


2.15
log
@changed ZERO to RESET and added documentation for MIG args.
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.14 89/07/28 17:07:35 douglis Exp Locker: douglis $ SPRITE (Berkeley)
d87 3
d116 2
@


2.14
log
@added ZERO_STATS for migration too
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.13 89/07/28 17:06:58 douglis Exp Locker: douglis $ SPRITE (Berkeley)
d139 12
d161 1
a161 1
#define SYS_PROC_MIG_ZERO_STATS		9
@


2.13
log
@added SET_VERSION and GET_STATS for migration
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.12 89/07/14 09:10:02 rab Exp Locker: douglis $ SPRITE (Berkeley)
d149 1
@


2.12
log
@*** empty log message ***
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.11 89/06/25 20:08:40 jhh Exp Locker: rab $ SPRITE (Berkeley)
d147 3
@


2.11
log
@added SYS_LOCK_RESET_STATS
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.10 89/06/23 12:11:29 brent Exp Locker: jhh $ SPRITE (Berkeley)
d167 1
a167 1
#endif _SYSSTATS
@


2.10
log
@Added RPC_SRV_COUNT and RPC_CALL_COUNT
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.9 89/04/07 10:15:26 douglis Exp Locker: rab $ SPRITE (Berkeley)
d86 1
d112 1
@


2.9
log
@added SYS_PROC_MIG_*_STATE, which replace ALLOW/REFUSE/GET_STATUS.
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.8 89/03/27 22:25:01 jhh Exp Locker: douglis $ SPRITE (Berkeley)
d78 8
d109 2
@


2.8
log
@added command to return locking statistics
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.7 88/11/18 09:57:31 douglis Exp Locker: jhh $ SPRITE (Berkeley)
d126 1
d133 2
@


2.7
log
@added SYS_PROC_MIG_GET_VERSION
@
text
@d23 1
a23 1
 * $Header: /sprite/src/lib/include/RCS/sysStats.h,v 2.6 88/09/09 10:13:50 brent Exp Locker: douglis $ SPRITE (Berkeley)
d76 2
d100 1
@


2.6
log
@Added comments and SYS_FS_PREFIX_EXPORT for returning export lists.
@
text
@d23 1
a23 1
 * $Header: sysStats.h,v 2.5 88/09/06 14:26:11 nelson Exp $ SPRITE (Berkeley)
d124 5
a128 4
#define SYS_PROC_MIG_ALLOW	0
#define SYS_PROC_MIG_REFUSE	1
#define SYS_PROC_MIG_GET_STATUS	2
#define SYS_PROC_MIG_SET_DEBUG	3
@


2.5
log
@Added call to get disk stats.
@
text
@d4 9
a12 1
 *     User-level definitions of routines and types for system statistics.
d23 1
a23 1
 * $Header: sysStats.h,v 2.5 88/07/25 12:07:09 douglis Exp $ SPRITE (Berkeley)
d32 44
d77 1
d97 1
d99 1
d101 3
a103 1
 * Options for the Sys_Stats SYS_RPC_TRACE_STATS command.
@


2.4
log
@changed the copyright
@
text
@d15 1
a15 1
 * $Header: sysStats.h,v 2.3 88/07/12 14:00:00 douglis Exp $ SPRITE (Berkeley)
d42 2
a43 2
#define SYS_PROC_SET_MIG_DEBUG	18
#define SYS_PROC_REFUSE_MIG	19
d63 25
@


2.3
log
@added a couple of process migration defines
@
text
@d6 8
a13 2
 * Copyright 1986 Regents of the University of California
 * All rights reserved.
d15 1
a15 1
 * $Header: sysStats.h,v 2.2 87/12/10 08:59:49 brent Exp $ SPRITE (Berkeley)
@


2.2
log
@Added SYS_GET_VERSION_STRING
@
text
@d9 1
a9 1
 * $Header: sysStats.h,v 2.1 87/09/29 09:42:57 brent Exp $ SPRITE (Berkeley)
d36 2
d47 6
a52 7
 * Options for the Sys_Stats SYS_PROC_TRACE_STATS command.  Use these values
 * for the option argument to the Test_Stats call when using
 * the PROC_TRACE_STATS command.  A negative argument is used to indicate
 * a new value for proc_MigDebugLevel (the negative of the argument).
 * Any argument greater than the largest positive defined constant is the
 * number of trace records to copy into the output buffer (i.e., it is
 * not permissible to copy only 1-3 records).
@


2.1
log
@Added command to enable RPC service.
@
text
@d9 1
a9 1
 * $Header: sysStats.h,v 2.0 87/08/11 09:32:53 brent Exp $ SPRITE (Berkeley)
d35 1
@


2.0
log
@First Sprite native copy
@
text
@d9 1
a9 1
 * $Header: sysStats.h,v 1.1 87/08/04 12:42:10 nelson Exp $ SPRITE (Berkeley)
d34 1
@
