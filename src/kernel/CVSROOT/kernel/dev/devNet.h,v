head     9.4;
branch   ;
access   ;
symbols  ds3100:9.4 sun3:9.4 sun4nw:9.4 symm:9.4 spur:9.4 Summer89:9.0 newlib:8.0 Summer88:6.0;
locks    ; strict;
comment  @ * @;


9.4
date     91.04.16.17.12.56;  author jhh;  state Exp;
branches ;
next     9.3;

9.3
date     90.12.06.21.59.29;  author jhh;  state Exp;
branches ;
next     9.2;

9.2
date     90.10.09.11.51.25;  author jhh;  state Exp;
branches ;
next     9.1;

9.1
date     90.09.11.12.12.51;  author rab;  state Exp;
branches ;
next     9.0;

9.0
date     89.09.12.14.57.07;  author douglis;  state Stable;
branches ;
next     8.2;

8.2
date     89.08.15.18.33.55;  author rab;  state Exp;
branches ;
next     8.1;

8.1
date     89.06.15.08.40.12;  author brent;  state Exp;
branches ;
next     8.0;

8.0
date     88.11.11.18.10.16;  author douglis;  state Stable;
branches ;
next     6.0;

6.0
date     88.08.11.12.26.30;  author douglis;  state Stable;
branches ;
next     1.1;

1.1
date     88.07.15.16.58.18;  author mendel;  state Exp;
branches ;
next     ;


desc
@Network device file system stubs. Moved here from net module.
@


9.4
log
@fixed include statements
@
text
@/*
 * devNet.h --
 *
 *	This defines the interface to the file system net device.
 *
 * Copyright 1985, 1988 Regents of the University of California
 * Permission to use, copy, modify, and distribute this
 * software and its documentation for any purpose and without
 * fee is hereby granted, provided that the above copyright
 * notice appear in all copies.  The University of California
 * makes no representations about the suitability of this
 * software for any purpose.  It is provided "as is" without
 * express or implied warranty.
 *
 *
 * $Header: /sprite/src/kernel/dev/RCS/devNet.h,v 9.3 90/12/06 21:59:29 jhh Exp Locker: jhh $ SPRITE (Berkeley)
 */

#ifndef _DEVNET
#define _DEVNET

#include <sprite.h>
#include <user/fs.h>
#include <fs.h>

/*
 * These macros are used to access the information in the unit of the
 * device. The NetType is used to determine the type of the network
 * interface.  See net.h for definitions.  The Number is used to determine
 * which interface to open.  Interfaces of the same type are numbered
 * consecutively as they are attached, starting at 0.  The Proto information
 * is used to determine the type of packets the device handles.  See
 * below.
 */

#define DEV_NET_NETTYPE_MASK		0xf000
#define DEV_NET_NETTYPE_SHIFT 		12
#define DEV_NET_NUMBER_MASK		0xf00
#define DEV_NET_NUMBER_SHIFT		8
#define DEV_NET_PROTO_MASK		0xff
#define DEV_NET_PROTO_SHIFT		0

#define DEV_NET_NETTYPE_FROM_UNIT(unit) \
    (Net_NetworkType) ((DEV_NET_NETTYPE_MASK & (unit)) >> DEV_NET_NETTYPE_SHIFT)

#define DEV_NET_NUMBER_FROM_UNIT(unit) \
    (int) ((DEV_NET_NUMBER_MASK & (unit)) >> DEV_NET_NUMBER_SHIFT)

#define DEV_NET_PROTO_FROM_UNIT(unit) \
    (int) ((DEV_NET_PROTO_MASK & (unit)) >> DEV_NET_PROTO_SHIFT)

/*
 * We set a high bit in the unit so we can distinguish new unit values
 * from old.
 */

#define DEV_NET_COMPAT_BIT	0x4000

/*
 * The protocol field in the device unit number is used to select which
 * packets the device handles.  The following are the legal values for
 * the protocol field. Note that the packets handled by a device is also
 * dependent on the type of network associated with the device, so it is
 * ok for the protocol values to overlap between different types of
 * networks.
 */

#define DEV_NET_PROTO_NONE	0x0	/* If the protocol field is set
					 * to this value then read/write
					 * are not supported on the device,
					 * but ioctls are. */
#define DEV_NET_PROTO_ARP	0x1	/* Arp packets. */
#define DEV_NET_PROTO_RARP	0x2	/* Rarp packets. */
#define DEV_NET_PROTO_IP	0x3	/* IP packets. */
#define DEV_NET_PROTO_DEBUG	0x4	/* Sprite debugger packets. */
#define DEV_NET_PROTO_MOP	0x5	/* MOP packets. */

#define DEV_NET_NUM_PROTO	6

/*
 * Forward routines.
 */

extern ReturnStatus DevNet_FsOpen _ARGS_((Fs_Device *devicePtr, int useFlags,
    Fs_NotifyToken data, int *flagsPtr));
extern ReturnStatus DevNet_FsReopen _ARGS_((Fs_Device *devicePtr, int refs,
    int writers, Fs_NotifyToken data, int *flagsPtr));
extern ReturnStatus DevNet_FsRead _ARGS_((Fs_Device *devicePtr,
    Fs_IOParam *readPtr, Fs_IOReply *replyPtr));
extern ReturnStatus DevNet_FsWrite _ARGS_((Fs_Device *devicePtr,
    Fs_IOParam *writePtr, Fs_IOReply *replyPtr));
extern ReturnStatus DevNet_FsClose _ARGS_((Fs_Device *devicePtr, int useFlags,
    int openCount, int writerCount));
extern ReturnStatus DevNet_FsSelect _ARGS_((Fs_Device *devicePtr, int *readPtr,
    int *writePtr, int *exceptPtr));
extern ReturnStatus DevNet_FsIOControl _ARGS_((Fs_Device *devicePtr,
    Fs_IOCParam *ioctlPtr, Fs_IOReply *replyPtr));
extern void DevNetEtherHandler _ARGS_((Address packetPtr, int size));

#endif /* _DEVNET */

@


9.3
log
@added the mop protocol
@
text
@d16 1
a16 1
 * $Header: /sprite/src/kernel/dev/RCS/devNet.h,v 9.2 90/10/09 11:51:25 jhh Exp $ SPRITE (Berkeley)
d22 3
a24 3
#include "sprite.h"
#include "user/fs.h"
#include "fs.h"
@


9.2
log
@new net module
@
text
@d16 1
a16 1
 * $Header: /sprite/src/kernel/dev/RCS/devNet.h,v 9.1 90/09/11 12:12:51 rab Exp Locker: jhh $ SPRITE (Berkeley)
d76 1
d78 1
a78 1
#define DEV_NET_NUM_PROTO	5
@


9.1
log
@Added prototypes.
@
text
@d16 1
a16 1
 * $Header: /sprite/src/kernel/dev/RCS/devNet.h,v 9.0 89/09/12 14:57:07 douglis Stable Locker: rab $ SPRITE (Berkeley)
d27 53
a96 1

@


9.0
log
@Changing version numbers.
@
text
@d16 1
a16 1
 * $Header: /sprite/src/kernel/dev/RCS/devNet.h,v 8.2 89/08/15 18:33:55 rab Exp Locker: douglis $ SPRITE (Berkeley)
d23 2
d30 14
d45 1
a45 9
extern	ReturnStatus	DevNet_FsOpen();
extern	ReturnStatus	DevNet_FsReopen();
extern	ReturnStatus	DevNet_FsRead();
extern	ReturnStatus	DevNet_FsWrite();
extern	ReturnStatus	DevNet_FsIOControl();
extern	ReturnStatus	DevNet_FsClose();
extern	ReturnStatus	DevNet_FsSelect();

extern	void	DevNetEtherHandler();
@


8.2
log
@Commented #endif labels.
@
text
@d16 1
a16 1
 * $Header: /sprite/src/kernel/dev/RCS/devNet.h,v 8.1 89/06/15 08:40:12 brent Exp Locker: rab $ SPRITE (Berkeley)
@


8.1
log
@added reopen extern
@
text
@d4 1
a4 1
 *	This defines the interface to the file system net device. 
d16 1
a16 1
 * $Header: /sprite/src/kernel/dev/RCS/devNet.h,v 8.0 88/11/11 18:10:16 douglis Stable Locker: brent $ SPRITE (Berkeley)
d25 1
a25 1
 * Forward routines. 
d39 1
a39 1
#endif _DEVNET
@


8.0
log
@Changing version numbers.
@
text
@d16 1
a16 1
 * $Header: /sprite/src/kernel/dev/RCS/devNet.h,v 6.0 88/08/11 12:26:30 douglis Stable Locker: douglis $ SPRITE (Berkeley)
d30 1
@


6.0
log
@Changing version numbers.
@
text
@d16 1
a16 1
 * $Header: devNet.h,v 1.1 88/07/15 16:58:18 mendel Exp $ SPRITE (Berkeley)
@


1.1
log
@Initial revision
@
text
@d16 1
a16 1
 * $Header: net.h,v 5.4 88/06/27 10:43:21 mendel Exp $ SPRITE (Berkeley)
@
