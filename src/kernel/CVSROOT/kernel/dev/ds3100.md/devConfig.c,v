head     9.2;
branch   ;
access   ;
symbols  ds3100:9.2 sun3:9.2 sun4nw:9.2 symm:9.2 spur:9.2 Summer89:9.0;
locks    ; strict;
comment  @ * @;


9.2
date     90.11.27.13.34.12;  author mgbaker;  state Exp;
branches ;
next     9.1;

9.1
date     90.07.30.16.28.08;  author jhh;  state Exp;
branches ;
next     9.0;

9.0
date     89.09.12.15.01.08;  author douglis;  state Stable;
branches ;
next     1.1;

1.1
date     89.07.10.19.51.40;  author nelson;  state Exp;
branches ;
next     ;


desc
@First code from DECWRL.
@


9.2
log
@Got rid of devTypesInt.h
@
text
@/* 
 * devConfig.c --
 *
 *	Configuration table for the devices in the system.  There is
 *	a table for the possible controllers in the system, and
 *	then a table for devices.  Devices are implicitly associated
 *	with a controller.  This file should be automatically generated
 *	by a config program, but it isn't.
 *
 *	Copyright (C) 1989 Digital Equipment Corporation.
 *	Permission to use, copy, modify, and distribute this software and
 *	its documentation for any purpose and without fee is hereby granted,
 *	provided that the above copyright notice appears in all copies.  
 *	Digital Equipment Corporation makes no representations about the
 *	suitability of this software for any purpose.  It is provided "as is"
 *	without express or implied warranty.
 */

#ifndef lint
static char rcsid[] = "$Header: /sprite/src/kernel/dev/ds3100.md/RCS/devConfig.c,v 9.1 90/07/30 16:28:08 jhh Exp Locker: mgbaker $ SPRITE (Berkeley)";
#endif not lint

#include "sprite.h"
#include "devInt.h"
#include "scsiHBA.h"
#include "fs.h"
#include "devTypes.h"

/*
 * Per device include files.
 */
#include "sii.h"

/*
 * The controller configuration table.
 */
DevConfigController devCntrlr[] = {
   /* Name	Address		ID	InitProc	IntrRoutine. */
    { "SII",	0xBA000000,  	0,  	DevSIIInit, 	Dev_SIIIntr },
};
int devNumConfigCntrlrs = sizeof(devCntrlr) / sizeof(DevConfigController);

/*
 * Table of SCSI HBA types attached to this system.
 */

ScsiDevice *((*devScsiAttachProcs[])()) = {
    DevSIIAttachDevice,		/* SCSI Controller type 0. */
};
int devScsiNumHBATypes = sizeof(devScsiAttachProcs) / 
			 sizeof(devScsiAttachProcs[0]);

/*
 * A list of disk devices that is used when probing for a root partition.
 * Note that we put the default partition as partition C so as to use the
 * entire disk.
 */
Fs_Device devFsDefaultDiskPartitions[] = {
    { -1, SCSI_MAKE_DEVICE_TYPE(DEV_SCSI_DISK, DEV_SII_HBA, 0, 0, 0, 0),
          SCSI_MAKE_DEVICE_UNIT(DEV_SCSI_DISK, DEV_SII_HBA, 0, 0, 0, 0),
                (ClientData) NIL },
    { -1, SCSI_MAKE_DEVICE_TYPE(DEV_SCSI_DISK, DEV_SII_HBA, 0, 0, 0, 2),
          SCSI_MAKE_DEVICE_UNIT(DEV_SCSI_DISK, DEV_SII_HBA, 0, 0, 0, 2),
                (ClientData) NIL },
    };
int devNumDefaultDiskPartitions = sizeof(devFsDefaultDiskPartitions) /
                          sizeof(Fs_Device);

@


9.1
log
@made separate defaults for a and c partitions 
@
text
@d20 1
a20 1
static char rcsid[] = "$Header: /sprite/src/kernel/dev/ds3100.md/devConfig.c,v 1.1 89/07/10 19:51:40 nelson Exp $ SPRITE (Berkeley)";
d27 1
a27 1
#include "devTypesInt.h"
@


9.0
log
@Changing version numbers.
@
text
@d20 1
a20 1
static char rcsid[] = "$Header: /sprite/src/kernel/dev/ds3100.md/RCS/devConfig.c,v 1.1 89/07/10 19:51:40 nelson Exp Locker: douglis $ SPRITE (Berkeley)";
d60 3
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
static char rcsid[] = "$Header: devConfig.c,v 1.5 89/06/29 09:48:58 mnelson Exp $ SPRITE (Berkeley)";
@
