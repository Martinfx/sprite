head     1.3;
branch   ;
access   ;
symbols  ds3100:1.3 sun3:1.3 sun4nw:1.2 symm:1.2 spur:1.2;
locks    ; strict;
comment  @ * @;


1.3
date     92.09.03.18.13.24;  author shirriff;  state Exp;
branches ;
next     1.2;

1.2
date     91.08.08.17.51.53;  author mendel;  state Exp;
branches ;
next     1.1;

1.1
date     90.10.19.16.05.49;  author mendel;  state Exp;
branches ;
next     ;


desc
@Internal data structures and routines for LFS descriptors.
@


1.3
log
@Moved type declarations into lfsTypes.h.
@
text
@/*
 * lfsDescInt.h --
 *
 *	Declarations of data structures for file descriptors internal to 
 *	a LFS file system.
 *
 * Copyright 1990 Regents of the University of California
 * Permission to use, copy, modify, and distribute this
 * software and its documentation for any purpose and without
 * fee is hereby granted, provided that the above copyright
 * notice appear in all copies.  The University of California
 * makes no representations about the suitability of this
 * software for any purpose.  It is provided "as is" without
 * express or implied warranty.
 *
 * $Header: /sprite/src/kernel/Cvsroot/kernel/lfs/lfsDescInt.h,v 1.2 91/08/08 17:51:53 mendel Exp $ SPRITE (Berkeley)
 */

#ifndef _LFSDESCINT
#define _LFSDESCINT

#include <fsioFile.h>

/* constants */

/* procedures */

extern void LfsDescCacheInit _ARGS_((struct Lfs *lfsPtr));
extern void LfsDescCacheDestory _ARGS_((struct Lfs *lfsPtr));
extern ClientData LfsDescCacheBlockInit _ARGS_((struct Lfs *lfsPtr, 
		LfsDiskAddr diskBlockAddr, 
		Boolean cantBlock, char **blockStartPtr));
extern void LfsDescCacheBlockRelease _ARGS_((struct Lfs *lfsPtr, 
		ClientData clientData, Boolean deleteBlock));

#endif /* _LFSDESCINT */

@


1.2
log
@Added declaration of LfsDescCacheDestory.
@
text
@d16 1
a16 1
 * $Header: /sprite/src/kernel/lfs/RCS/lfsDescInt.h,v 1.1 90/10/19 16:05:49 mendel Exp $ SPRITE (Berkeley)
a25 12
/* data structures */

/*
 * LfsDescCache - Data structure defining the cache of file descriptor blocks
 *		  maintained by a LFS file system.  The current implementation
 *		  caches descriptor map blocks in files the file cache.
 */

typedef struct LfsDescCache {
    Fsio_FileIOHandle handle; /* File handle use to cache descriptor
			       * block under. */
} LfsDescCache;
@


1.1
log
@Initial revision
@
text
@d16 1
a16 1
 * $Header: /sprite/lib/forms/RCS/proto.h,v 1.5 90/01/12 12:03:25 douglis Exp $ SPRITE (Berkeley)
d41 1
@
