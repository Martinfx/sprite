head     9.2;
branch   ;
access   ;
symbols  ds3100:9.2 sun3:9.2 sun4nw:9.2 symm:9.2 spur:9.2 sprited:9.2.1 Summer89:9.0 newlib:8.0 Summer88:6.0;
locks    ; strict;
comment  @ * @;


9.2
date     90.10.02.16.30.39;  author mgbaker;  state Exp;
branches 9.2.1.1;
next     9.1;

9.1
date     90.09.11.11.35.34;  author mgbaker;  state Exp;
branches ;
next     9.0;

9.0
date     89.09.12.15.17.53;  author douglis;  state Stable;
branches ;
next     8.0;

8.0
date     88.11.11.18.35.10;  author douglis;  state Stable;
branches ;
next     6.3;

6.3
date     88.10.07.14.54.37;  author mlgray;  state Exp;
branches ;
next     6.2;

6.2
date     88.08.29.14.29.26;  author mlgray;  state Exp;
branches ;
next     6.1;

6.1
date     88.08.26.18.27.50;  author mlgray;  state Exp;
branches ;
next     6.0;

6.0
date     88.08.11.12.24.53;  author brent;  state Stable;
branches ;
next     5.1;

5.1
date     88.02.29.12.04.33;  author brent;  state Exp;
branches ;
next     5.0;

5.0
date     87.08.11.10.48.30;  author sprite;  state Exp;
branches ;
next     ;

9.2.1.1
date     91.10.21.21.12.37;  author kupfer;  state Exp;
branches ;
next     ;


desc
@@


9.2
log
@More prototyping garbage.
@
text
@/*
 * rpcTrace.h --
 *
 *	The Trace utilities are used to keep a circular trace of packets
 *	sent and received through the RPC protocol.
 *
 * Copyright (C) 1985 Regents of the University of California
 * All rights reserved.
 *
 *
 * $Header: /sprite/src/kernel/rpc/RCS/rpcTrace.h,v 9.1 90/09/11 11:35:34 mgbaker Exp Locker: mgbaker $ SPRITE (Berkeley)
 */

#ifndef _RPCTRACE
#define _RPCTRACE

#include <spriteTime.h>
#ifdef KERNEL
#include <rpcTypes.h>
#include <rpcPacket.h>
#include <trace.h>
#include <sync.h>
#else
#include <kernel/rpcTypes.h>
#include <kernel/rpcPacket.h>
#include <kernel/trace.h>
#include <kernel/sync.h>
#endif /* KERNEL */

/*
 * RPC_TRACE_LEN determines how big the circular buffer of trace records is.
 */
#define RPC_TRACE_LEN	100

/*
 * Converting to use general trace routines.
 */
#define RpcTrace(rpcHdrPtr, type, comment) \
	Trace_Insert(rpcTraceHdrPtr, type, (ClientData) rpcHdrPtr)

/*
 * Macros to make the trace calls take up less room and be easier
 * to change.
 */
#ifndef CLEAN
#define RPC_NIL_TRACE(type, comment) \
    if (rpc_Tracing) { \
	RpcTrace((Address)NIL, type, comment); \
    }
#define RPC_TRACE(rpcHdrPtr, type, comment) \
    if (rpc_Tracing) { \
	RpcTrace(rpcHdrPtr, type, comment); \
    }
#else
#define RPC_NIL_TRACE(type, comment)
#define RPC_TRACE(rpcHdrPtr, type, comment)
#endif

/*
 * This is the trace record written to the trace file by Rpc_DumpTrace
 */
typedef struct Rpc_Trace {
    RpcHdr rpcHdr;	/* An optional copy of the rpc Header of the packet */
    Time   time;	/* The time at which the trace record was made */
    int	   type;	/* A type field which is interpreted by the print
			 * routine.  Defined below */
} Rpc_Trace;

/*
 * The original header on the trace file.
 */
typedef struct Rpc_TraceHdr1 {
    int version;		/* == 1 */
    Time rpcDeltaTime;
    int numRecords;
} Rpc_TraceHdr1;

/*
 * A new header that also includes time stamps
 */
typedef struct Rpc_TraceHdr2 {
    int version;		/* == 2 */
    Time rpcDeltaTime;
    int numRecords;
    int emptyStampMicroseconds;
    int fullStampMicroseconds;
} Rpc_TraceHdr2;

typedef Rpc_TraceHdr2 Rpc_TraceFileHdr;

/* #define RPC_TRACE_VERSION	1	 Jan 29 '86 */
/* #define RPC_TRACE_VERSION	2	 Jan 31 '86 */
#define RPC_TRACE_VERSION	3	 /* Nov 19 '86 */

/*
 * Tracing related defines.  These are values for the second
 * parameter of RpcTrace.  They get placed in the type field of an
 * Rpc_Trace struct.
 */
#define RPC_INPUT	1
#define RPC_OUTPUT	2
#define RPC_CLIENT_A	3
#define RPC_CLIENT_B	4
#define RPC_CLIENT_C	5
#define RPC_CLIENT_D	6
#define RPC_CLIENT_E	7
#define RPC_CLIENT_F	8
#define RPC_CLIENT_a	103
#define RPC_CLIENT_b	104
#define RPC_CLIENT_c	105
#define RPC_CLIENT_d	106
#define RPC_CLIENT_e	107
#define RPC_CLIENT_f	108
#define RPC_CLIENT_OUT	9
#define RPC_SERVER_A	10
#define RPC_SERVER_B	11
#define RPC_SERVER_C	12
#define RPC_SERVER_D	13
#define RPC_SERVER_E	14
#define RPC_SERVER_F	15
#define RPC_SERVER_a	110
#define RPC_SERVER_b	111
#define RPC_SERVER_c	112
#define RPC_SERVER_d	113
#define RPC_SERVER_e	114
#define RPC_SERVER_f	115
#define RPC_SERVER_OUT	16

#define	RPC_ETHER_OUT	17

extern Trace_Header *rpcTraceHdrPtr;
extern Boolean rpc_Tracing;

/*
 * Cached results of tests.
 */
extern Time rpcDeltaTime;

#endif /* _RPCTRACE */
@


9.2.1.1
log
@Initial branch for Sprite server.
@
text
@d11 1
a11 1
 * $Header: /sprite/src/kernel/rpc/RCS/rpcTrace.h,v 9.2 90/10/02 16:30:39 mgbaker Exp $ SPRITE (Berkeley)
@


9.1
log
@Added function prototypes (Mendel checking for mary)
@
text
@d11 1
a11 1
 * $Header: /sprite/src/kernel/rpc/RCS/rpcTrace.h,v 9.0 89/09/12 15:17:53 douglis Stable Locker: mgbaker $ SPRITE (Berkeley)
d17 12
a28 5
#include "rpcInt.h"
#include "rpcPacket.h"
#include "spriteTime.h"
#include "trace.h"
#include "sync.h"
d91 3
a93 3
/* #define RPC_TRACE_VERSION	1	/* Jan 29 '86 */
/* #define RPC_TRACE_VERSION	2	/* Jan 31 '86 */
#define RPC_TRACE_VERSION	3	/* Nov 19 '86 */
@


9.0
log
@Changing version numbers.
@
text
@d11 1
a11 1
 * $Header: /sprite/src/kernel/rpc/RCS/rpcTrace.h,v 8.0 88/11/11 18:35:10 douglis Stable Locker: douglis $ SPRITE (Berkeley)
d17 1
@


8.0
log
@Changing version numbers.
@
text
@d11 1
a11 1
 * $Header: /sprite/src/kernel/rpc/RCS/rpcTrace.h,v 6.3 88/10/07 14:54:37 mlgray Exp Locker: douglis $ SPRITE (Berkeley)
@


6.3
log
@Fixed include file references.
@
text
@d11 1
a11 1
 * $Header: rpcTrace.h,v 6.2 88/08/29 14:29:26 mlgray Exp $ SPRITE (Berkeley)
@


6.2
log
@lint
@
text
@d11 1
a11 1
 * $Header: rpcTrace.h,v 6.1 88/08/26 18:27:50 mlgray Exp $ SPRITE (Berkeley)
d18 1
a18 1
#include "time.h"
@


6.1
log
@Fixed some lint errors.
@
text
@d11 1
a11 1
 * $Header: rpcTrace.h,v 6.0 88/08/11 12:24:53 brent Stable $ SPRITE (Berkeley)
d31 1
a31 1
	Trace_Insert(rpcTraceHdrPtr, type, rpcHdrPtr)
@


6.0
log
@Changing version numbers.
@
text
@d11 1
a11 1
 * $Header: rpcTrace.h,v 5.1 88/02/29 12:04:33 brent Exp $ SPRITE (Berkeley)
d88 1
a88 1
 * Tracing related defines.  These are values for the second 
d131 1
a131 1
#endif _RPCTRACE
@


5.1
log
@Setup things to be compiled with -DCLEAN
@
text
@d11 1
a11 1
 * $Header: rpcTrace.h,v 5.0 87/08/11 10:48:30 sprite Exp $ SPRITE (Berkeley)
@


5.0
log
@First Sprite native copy
@
text
@d11 1
a11 1
 * $Header: rpcTrace.h,v 3.5 86/12/09 22:02:35 brent Exp $ SPRITE (Berkeley)
d37 1
d46 5
@
