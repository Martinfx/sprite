head     8.1;
branch   ;
access   ;
symbols  symm:8.1 spur:8.1 newlib:8.0;
locks    ; strict;
comment  @ * @;


8.1
date     89.01.11.09.38.56;  author mendel;  state Exp;
branches ;
next     8.0;

8.0
date     88.11.11.18.06.57;  author douglis;  state Stable;
branches ;
next     1.2;

1.2
date     88.11.11.15.36.46;  author mendel;  state Exp;
branches ;
next     1.1;

1.1
date     88.10.21.17.18.06;  author mendel;  state Exp;
branches ;
next     ;


desc
@SPUR system configuration declarations.
@


8.1
log
@Added declarations for split 32 megabyte boards.
@
text
@/*
 * machConfig.h --
 *
 *	Declarations of routines and data structures specifying the 
 *	configuration of a SPUR processor.
 *
 * Copyright 1988 Regents of the University of California
 * Permission to use, copy, modify, and distribute this
 * software and its documentation for any purpose and without
 * fee is hereby granted, provided that the above copyright
 * notice appear in all copies.  The University of California
 * makes no representations about the suitability of this
 * software for any purpose.  It is provided "as is" without
 * express or implied warranty.
 *
 * $Header: /sprite/src/kernel/mach/spur.md/RCS/machConfig.h,v 1.2 88/11/11 15:36:46 mendel Exp $ SPRITE (Berkeley)
 */

#ifndef _MACHCONFIG
#define _MACHCONFIG

/*
 * Entry specifing each board in system. 
 */

typedef struct {
    int		slotId;		/* Slot ID of board. */
    int		boardType;	/* Board type, see below. */
    int		number; 	/* Logical number for the board type. */
    int		flags;		/* Flags, see blow. */
} Mach_Board;

/*
 * Board type values.
 */
#define	MACH_CONFIG_NO_BOARD		0x0	/* No board in slot. */
#define	MACH_CONFIG_CPU_BOARD		0x1	/* SPUR processor board. */
#define	MACH_CONFIG_ETHER_BOARD		0x2	/* NuBus ether net board. */
#define	MACH_CONFIG_MEMORY_MASK		0xf0	/* Mask for memory boards. */
#define	MACH_CONFIG_HALF_MEG_BOARD	0x10	/* 1/2 meg memory board. */
#define	MACH_CONFIG_2_MEG_BOARD		0x20	/* 2 meg memory board. */
#define	MACH_CONFIG_8_MEG_BOARD		0x30	/* 8 meg memory board. */
#define	MACH_CONFIG_16_MEG_BOARD	0x40	/* 16 meg memory board. */
#define	MACH_CONFIG_32_MEG_BOARD	0x50	/* 32 meg memory board. */
#define	MACH_CONFIG_24_MEG_BOARD	0x60	/* 24 meg memory board. */

/*
 * Board flag values. Valid for all types
 */
#define	MACH_CONFIG_NO_ACCESS_FLAG	0x1	/* No access to Sprite. */
 /*
  * Flags for CPU boards.
  */
#define	MACH_CONFIG_MASTER_FLAG		0x100	/* Master CPU board. */
 /*
  * Flags for memory boards.
  */
#define	MACH_CONFIG_INITIALIZED_FLAG	0x100	/* Memory board has been
						 * initialized. 
						 */
#define	MACH_CONFIG_KERNEL_MEM_FLAG	0x200	/* Board containing kernel. */

#define	MACH_CONFIG_MUST_MAP		0x400
#define	MACH_CONFIG_SPLIT_MEM		0x800

extern ReturnStatus Mach_FindBoardDescription();
extern int	    Mach_ConfigMemSize();
extern unsigned int Mach_ConfigInitMem();

#endif

@


8.0
log
@Changing version numbers.
@
text
@d16 1
a16 1
 * $Header: /sprite/src/kernel/mach/spur.md/RCS/machConfig.h,v 1.2 88/11/11 15:36:46 mendel Exp Locker: douglis $ SPRITE (Berkeley)
d45 1
d62 4
@


1.2
log
@Changes for multiprocessor, ibuffer, and new libc.a.
@
text
@d16 1
a16 1
 * $Header: /sprite/src/kernel/mach/spur.md/RCS/machConfig.h,v 1.1 88/10/21 17:18:06 mendel Exp Locker: mendel $ SPRITE (Berkeley)
@


1.1
log
@Initial revision
@
text
@d16 1
a16 1
 * $Header: machCCRegs.h,v 1.2 88/08/26 11:55:02 nelson Exp $ SPRITE (Berkeley)
d60 4
a63 18

/*
 * Mach_MemoryBoardSize(boardType)	
 *	Return the size in bytes of a memory board. 
 */

#define	Mach_MemoryBoardSize(boardType) ({\
	int		halfMegs;	\
	switch (boardType) { \
	case MACH_CONFIG_HALF_MEG_BOARD: halfMegs = 1; break; \
	case MACH_CONFIG_2_MEG_BOARD: halfMegs = 4; break; \
	case MACH_CONFIG_8_MEG_BOARD: halfMegs = 16; break; \
	case MACH_CONFIG_16_MEG_BOARD: halfMegs = 32; break; \
	case MACH_CONFIG_32_MEG_BOARD: halfMegs = 64; break; \
	default: panic("Unknown memory board type (%d)\n",boardType); \
	}; \
	(halfMegs * (512 * 1024)); })

@
