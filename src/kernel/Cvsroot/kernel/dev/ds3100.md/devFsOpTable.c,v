head     9.8;
branch   ;
access   ;
symbols  ds3100:9.8 sun3:9.8 sprited:9.4.1 sun4nw:9.6 symm:9.6 spur:9.6 Summer89:9.0;
locks    ; strict;
comment  @ * @;


9.8
date     92.08.13.15.52.38;  author secor;  state Exp;
branches ;
next     9.7;

9.7
date     92.03.20.13.47.59;  author jhh;  state Exp;
branches ;
next     9.6;

9.6
date     91.08.19.14.18.02;  author jhh;  state Exp;
branches ;
next     9.5;

9.5
date     91.08.19.13.50.19;  author jhh;  state Exp;
branches ;
next     9.4;

9.4
date     90.10.19.15.40.18;  author mgbaker;  state Exp;
branches 9.4.1.1;
next     9.3;

9.3
date     90.08.14.18.55.11;  author mgbaker;  state Exp;
branches ;
next     9.2;

9.2
date     90.07.05.17.37.56;  author douglis;  state Exp;
branches ;
next     9.1;

9.1
date     90.01.05.13.17.53;  author ouster;  state Exp;
branches ;
next     9.0;

9.0
date     89.09.12.15.01.14;  author douglis;  state Stable;
branches ;
next     1.2;

1.2
date     89.07.26.20.02.09;  author nelson;  state Exp;
branches ;
next     1.1;

1.1
date     89.07.10.19.51.43;  author nelson;  state Exp;
branches ;
next     ;

9.4.1.1
date     92.03.18.17.57.36;  author kupfer;  state Exp;
branches ;
next     ;


desc
@First code from DECWRL.
@


9.8
log
@Added smem device to devFsOpTable and added files for smem procedures.
@
text
@/* 
 * devFsOpTable.c --
 *
 *	The operation tables for the file system devices.  
 *
 *	Copyright (C) 1989 Digital Equipment Corporation.
 *	Permission to use, copy, modify, and distribute this software and
 *	its documentation for any purpose and without fee is hereby granted,
 *	provided that the above copyright notice appears in all copies.  
 *	Digital Equipment Corporation makes no representations about the
 *	suitability of this software for any purpose.  It is provided "as is"
 *	without express or implied warranty.
 */

#ifndef lint
static char rcsid[] = "$Header: /sprite/src/kernel/Cvsroot/kernel/dev/ds3100.md/devFsOpTable.c,v 9.7 92/03/20 13:47:59 jhh Exp $ SPRITE (Berkeley)";
#endif not lint


#include "sprite.h"
#include "dev.h"
#include "devInt.h"
#include "fs.h"
#include "rawBlockDev.h"
#include "devFsOpTable.h"
#include "devTypes.h"

/*
 * Device specific include files.
 */

#include "devSyslog.h"
#include "devNull.h"
#include "devSmem.h"
#include "devSCSIDisk.h"
#include "devSCSITape.h"
#include "devNet.h"
#include "devBlockDevice.h"
#include "scsiHBADevice.h"
#include "raidExt.h"
#include "tty.h"
#include "graphics.h"

static ReturnStatus NoDevice();
static ReturnStatus NullProc();

#ifdef SERIALB_DEBUG
extern ReturnStatus Dev_serialBOutTrace();
extern ReturnStatus Dev_serialBInTrace();
#endif


/*
 * Device type specific routine table:
 *	This is for the file-like operations as they apply to devices.
 *	DeviceOpen
 *	DeviceRead
 *	DeviceWrite
 *	DeviceIOControl
 *	DeviceClose
 *	DeviceSelect
 *	DeviceMMap
 */

#ifndef lint
DevFsTypeOps devFsOpTable[] = {
    /*
     * Serial lines used to implement terminals.
     */
    {DEV_TERM,       DevTtyOpen, DevTtyRead, DevTtyWrite,
		     DevTtyIOControl, DevTtyClose, DevTtySelect,
		     DEV_NO_ATTACH_PROC, NoDevice, NullProc},
    /*
     * The system error log.  If this is not open then error messages go
     * to the console.
     */
    {DEV_SYSLOG,    Dev_SyslogOpen, Dev_SyslogRead, Dev_SyslogWrite,
		    Dev_SyslogIOControl, Dev_SyslogClose, Dev_SyslogSelect,
		    DEV_NO_ATTACH_PROC, Dev_SyslogReopen, NullProc},
    /*
     * SCSI Worm interface.
     */
    {DEV_SCSI_WORM, NoDevice, NullProc, NullProc,
		    NullProc, NullProc, NullProc, 
		    DEV_NO_ATTACH_PROC, NoDevice, NullProc},
    /*
     * The following device number is unused.
     */
    {DEV_PLACEHOLDER_2, NoDevice, NullProc, NullProc,
		    NullProc, NullProc, NullProc, 
		    DEV_NO_ATTACH_PROC, NoDevice, NullProc},
    /*
     * New SCSI Disk interface.
     */
    {DEV_SCSI_DISK, DevRawBlockDevOpen, DevRawBlockDevRead,
		    DevRawBlockDevWrite, DevRawBlockDevIOControl, 
		    DevRawBlockDevClose, Dev_NullSelect, DevScsiDiskAttach,
		    DevRawBlockDevReopen, NullProc},
    /*
     * SCSI Tape interface.
     */
    {DEV_SCSI_TAPE, DevSCSITapeOpen, DevSCSITapeRead, DevSCSITapeWrite,
		    DevSCSITapeIOControl, DevSCSITapeClose, Dev_NullSelect,
		    DEV_NO_ATTACH_PROC, NoDevice, NullProc},
    /*
     * /dev/null
     */
    {DEV_MEMORY,    NullProc, Dev_NullRead, Dev_NullWrite,
		    Dev_NullIOControl, NullProc, Dev_NullSelect,
		    DEV_NO_ATTACH_PROC, NullProc, NullProc},
    /*
     * Xylogics 450 disk controller.
     */
    {DEV_XYLOGICS, NullProc, Dev_NullRead, 
		   Dev_NullWrite, Dev_NullIOControl, 
		   NullProc, Dev_NullSelect, 
		   DEV_NO_ATTACH_PROC, NullProc, NullProc},
    /*
     * Network devices.  The unit number specifies the ethernet protocol number.
     */
    {DEV_NET,      DevNet_FsOpen, DevNet_FsRead, DevNet_FsWrite, 
		   DevNet_FsIOControl, DevNet_FsClose, DevNet_FsSelect,
		   DEV_NO_ATTACH_PROC, DevNet_FsReopen, NullProc},
    /*
     * Raw SCSI HBA interface.
     */
    {DEV_SCSI_HBA, DevSCSIDeviceOpen, Dev_NullRead, Dev_NullWrite,
                    DevSCSIDeviceIOControl, DevSCSIDeviceClose, Dev_NullSelect,
                    DEV_NO_ATTACH_PROC, NoDevice, NullProc},
    /*
     * RAID device.
     */
    {DEV_RAID, DevRawBlockDevOpen, DevRawBlockDevRead,
                    DevRawBlockDevWrite, DevRawBlockDevIOControl,
                    DevRawBlockDevClose, NullProc, DevRaidAttach,
                    DevRawBlockDevReopen, NullProc},
    /*  
     * Debug device. (useful for debugging RAID device)
     */ 
    {DEV_DEBUG, DevRawBlockDevOpen, DevRawBlockDevRead,
                    DevRawBlockDevWrite, DevRawBlockDevIOControl,
                    DevRawBlockDevClose, NullProc, DevDebugAttach,
                    DevRawBlockDevReopen, NullProc},
    /*
     * The graphics device.
     */
    {DEV_MOUSE, DevGraphicsOpen, DevGraphicsRead, DevGraphicsWrite,
		   DevGraphicsIOControl, DevGraphicsClose, DevGraphicsSelect,
		   DEV_NO_ATTACH_PROC, NoDevice, NullProc}, 
    /*
     * The following device number is unused.
     */
    {DEV_PLACEHOLDER_3, NoDevice, NullProc, NullProc,
		    NullProc, NullProc, NullProc, 
		    DEV_NO_ATTACH_PROC, NoDevice, NullProc},
    /*
     * /dev/smem
     */
    {DEV_SMEM,    NullProc, Dev_SmemRead, Dev_SmemWrite,
		    Dev_SmemIOControl, NullProc, Dev_SmemSelect,
		    DEV_NO_ATTACH_PROC, NullProc, NullProc},
};

static ReturnStatus
NullProc()
{
    return(SUCCESS);
}


static ReturnStatus
NoDevice()
{
    return(FS_INVALID_ARG);
}

#else /*LINT*/

DevFsTypeOps devFsOpTable[1];

#endif /*LINT*/

int devNumDevices = sizeof(devFsOpTable) / sizeof(DevFsTypeOps);

@


9.7
log
@Enabled RAID device.
@
text
@d16 1
a16 1
static char rcsid[] = "$Header: /sprite/src/kernel/Cvsroot/kernel/dev/ds3100.md/devFsOpTable.c,v 9.6 91/08/19 14:18:02 jhh Exp $ SPRITE (Berkeley)";
d34 1
d156 6
@


9.6
log
@screwed up last version
@
text
@d16 1
a16 1
static char rcsid[] = "$Header: /sprite/src/kernel/dev/ds3100.md/RCS/devFsOpTable.c,v 9.5 91/08/19 13:50:19 jhh Exp Locker: jhh $ SPRITE (Berkeley)";
d132 5
a136 6
    {DEV_RAID, NullProc, Dev_NullRead,
	       Dev_NullWrite, Dev_NullIOControl,
	       NullProc, Dev_NullSelect,
	       DEV_NO_ATTACH_PROC, NullProc, NullProc},

    /*
d138 5
a142 6
     */
    {DEV_DEBUG, NullProc, Dev_NullRead,
	       Dev_NullWrite, Dev_NullIOControl,
	       NullProc, Dev_NullSelect,
	       DEV_NO_ATTACH_PROC, NullProc, NullProc},

@


9.5
log
@removed lint
@
text
@d16 1
a16 1
static char rcsid[] = "$Header: /sprite/src/kernel/dev/ds3100.md/RCS/devFsOpTable.c,v 9.4 90/10/19 15:40:18 mgbaker Exp Locker: jhh $ SPRITE (Berkeley)";
a157 3

int devNumDevices = sizeof(devFsOpTable) / sizeof(DevFsTypeOps);

@


9.4
log
@Added place-holder for graphics device number of other machines.
@
text
@d16 1
a16 1
static char rcsid[] = "$Header: /sprite/src/kernel/dev/ds3100.md/RCS/devFsOpTable.c,v 9.3 90/08/14 18:55:11 mgbaker Exp Locker: mgbaker $ SPRITE (Berkeley)";
d64 1
a64 1

d174 9
@


9.4.1.1
log
@Initial branch for Sprite server.
@
text
@d16 1
a16 1
static char rcsid[] = "$Header: /sprite/src/kernel/Cvsroot/kernel/dev/ds3100.md/devFsOpTable.c,v 9.4 90/10/19 15:40:18 mgbaker Exp $ SPRITE (Berkeley)";
@


9.3
log
@Added /dev/fb support.
@
text
@d16 1
a16 1
static char rcsid[] = "$Header: /sprite/src/kernel/dev/ds3100.md/RCS/devFsOpTable.c,v 9.2 90/07/05 17:37:56 douglis Exp $ SPRITE (Berkeley)";
d151 6
@


9.2
log
@fixed syslog reopen callback, which wasn't there before.
@
text
@d16 1
a16 1
static char rcsid[] = "$Header: /sprite/src/kernel/dev/ds3100.md/RCS/devFsOpTable.c,v 9.1 90/01/05 13:17:53 ouster Exp Locker: douglis $ SPRITE (Berkeley)";
d61 1
d71 1
a71 1
		     DEV_NO_ATTACH_PROC, NoDevice},
d78 1
a78 1
		    DEV_NO_ATTACH_PROC, Dev_SyslogReopen},
d84 1
a84 1
		    DEV_NO_ATTACH_PROC, NoDevice},
d90 1
a90 1
		    DEV_NO_ATTACH_PROC, NoDevice},
d97 1
a97 1
		    DevRawBlockDevReopen},
d103 1
a103 1
		    DEV_NO_ATTACH_PROC, NoDevice},
d109 1
a109 1
		    DEV_NO_ATTACH_PROC, NullProc},
d116 1
a116 1
		   DEV_NO_ATTACH_PROC, NullProc},
d122 1
a122 1
		   DEV_NO_ATTACH_PROC, DevNet_FsReopen},
d128 1
a128 1
                    DEV_NO_ATTACH_PROC, NoDevice},
d135 1
a135 1
	       DEV_NO_ATTACH_PROC, NullProc},
d143 1
a143 1
	       DEV_NO_ATTACH_PROC, NullProc},
d150 1
a150 2
		   DEV_NO_ATTACH_PROC, NoDevice}, 

@


9.1
log
@Use new NULL procedures from /dev/null.
@
text
@d16 1
a16 1
static char rcsid[] = "$Header: /sprite/src/kernel/dev/ds3100.md/RCS/devFsOpTable.c,v 1.2 89/07/26 20:02:09 nelson Exp $ SPRITE (Berkeley)";
d77 1
a77 1
		    DEV_NO_ATTACH_PROC},
@


9.0
log
@Changing version numbers.
@
text
@d16 1
a16 1
static char rcsid[] = "$Header: /sprite/src/kernel/dev/ds3100.md/RCS/devFsOpTable.c,v 1.2 89/07/26 20:02:09 nelson Exp Locker: douglis $ SPRITE (Berkeley)";
a42 1
static ReturnStatus NullSelectProc();
d95 1
a95 1
		    DevRawBlockDevClose, NullSelectProc, DevScsiDiskAttach,
d101 1
a101 1
		    DevSCSITapeIOControl, DevSCSITapeClose, NullSelectProc,
d107 2
a108 2
		    NullProc, NullProc, NullSelectProc, DEV_NO_ATTACH_PROC,
		    NullProc},
d113 2
a114 2
		   Dev_NullWrite, NullProc, 
		   NullProc, NullSelectProc, 
d126 1
a126 1
                    DevSCSIDeviceIOControl, DevSCSIDeviceClose, NullSelectProc,
d132 2
a133 2
	       Dev_NullWrite, NullProc,
	       NullProc, NullSelectProc,
d140 2
a141 2
	       Dev_NullWrite, NullProc,
	       NullProc, NullSelectProc,
a167 13


/*ARGSUSED*/
static ReturnStatus
NullSelectProc(devicePtr, inFlags, outFlagsPtr)
    Fs_Device	*devicePtr;	/* Ignored. */
    int		inFlags;	/* FS_READBLE, FS_WRITABLE, FS_EXCEPTION. */
    int		*outFlagsPtr;	/* Copy of inFlags. */
{
    *outFlagsPtr = inFlags;
    return(SUCCESS);
}

@


1.2
log
@Converted over to new tty driver.
@
text
@d16 1
a16 1
static char rcsid[] = "$Header: /sprite/src/kernel/dev/ds3100.md/devFsOpTable.c,v 1.1 89/07/10 19:51:43 nelson Exp $ SPRITE (Berkeley)";
@


1.1
log
@Initial revision
@
text
@d16 1
a16 1
static char rcsid[] = "$Header: devFsOpTable.c,v 1.5 89/06/29 09:49:05 mnelson Exp $ SPRITE (Berkeley)";
d26 1
a26 1
#include "devTypesInt.h"
a31 1
#include "devConsole.h"
d38 4
a41 1
#include "devGraphics.h"
a42 1

d67 1
a67 1
     * The console.  The workstation's display and keyboard.
d69 3
a71 3
    {DEV_CONSOLE,    Dev_ConsoleOpen, Dev_ConsoleRead, Dev_ConsoleWrite,
		     Dev_ConsoleIOControl, Dev_ConsoleClose, Dev_ConsoleSelect,
		     DEV_NO_ATTACH_PROC},
d83 2
a84 2
		    NullProc, NullProc, NullProc, DEV_NO_ATTACH_PROC},

d89 2
a90 4
		    NullProc, NullProc, NullProc, DEV_NO_ATTACH_PROC},
    /*
     * SCSI Disk interface.
     */
d96 2
a97 1
		    DevRawBlockDevClose, NullProc, DevScsiDiskAttach},
d102 2
a103 1
		    DevSCSITapeIOControl, DevSCSITapeClose, NullProc},
d108 2
a109 1
		    NullProc, NullProc, NullSelectProc, DEV_NO_ATTACH_PROC},
d113 4
a116 2
    {DEV_XYLOGICS, NullProc, Dev_NullRead, Dev_NullWrite,
		   NullProc, NullProc, NullSelectProc, DEV_NO_ATTACH_PROC},
d122 23
a144 1
		   DEV_NO_ATTACH_PROC},
d148 1
a148 1
    {DEV_GRAPHICS, DevGraphicsOpen, DevGraphicsRead, DevGraphicsWrite,
d150 1
a150 1
		    DEV_NO_ATTACH_PROC}, 
@
