head     1.2;
branch   ;
access   ;
symbols  ds3100:1.2 sun3:1.2 sun4nw:1.2 symm:1.2 spur:1.2;
locks    ; strict;
comment  @ * @;


1.2
date     91.05.08.16.30.24;  author jhh;  state Exp;
branches ;
next     1.1;

1.1
date     91.03.19.22.38.25;  author jhh;  state Exp;
branches ;
next     ;


desc
@@


1.2
log
@ds5000 port
@
text
@/*
 * devInt.h --
 *
 *	Internal globals and constants needed for the dev module.
 *
 *	Copyright (C) 1989 Digital Equipment Corporation.
 *	Permission to use, copy, modify, and distribute this software and
 *	its documentation for any purpose and without fee is hereby granted,
 *	provided that the above copyright notice appears in all copies.
 *	Digital Equipment Corporation makes no representations about the
 *	suitability of this software for any purpose.  It is provided "as is"
 *	without express or implied warranty.
 *
 * $Header: /sprite/src/kernel/dev/ds3100.md/RCS/devInt.h,v 1.2 89/08/15 19:52:58 rab Exp $ SPRITE (DECWRL)
 */

#ifndef _DEVINT
#define _DEVINT

/*
 * A configuration table that describes the controllers in the system.
 */
typedef struct DevConfigController {
    char *name;		/* Identifying string used in print statements */
    int	 slot;		/* The IO slot that contains the controller. */
    int controllerID;	/* Controller number: 0, 1, 2... */
    ClientData (*initProc)();	/* Initialization procedure */
} DevConfigController;

/*
 * Special valued returned from Controller init procedures indicating
 * the controller doesn't exists.
 */

#define	DEV_NO_CONTROLLER	((ClientData) 0)

/*
 * The controller configuration table.
 */
extern DevConfigController devCntrlr[];
extern int devNumConfigCntrlrs;

#endif /* _DEVINT */
@


1.1
log
@Initial revision
@
text
@d25 1
a25 2
    int address;	/* The address of the controller.  Correct
			 * interpretation of this depends on the space */
a27 1
    int (*intrProc)();	/* Interrupt handler called from autovector */
@
