head     9.2;
branch   ;
access   ;
symbols  ds3100:9.2 sun3:9.2 sun4nw:9.2 symm:9.2 spur:9.2 sprited:9.2.1 Summer89:9.0 newlib:8.0 Summer88:6.0;
locks    ; strict;
comment  @ * @;


9.2
date     91.06.27.12.16.03;  author shirriff;  state Exp;
branches 9.2.1.1;
next     9.1;

9.1
date     90.09.11.14.11.33;  author kupfer;  state Exp;
branches ;
next     9.0;

9.0
date     89.09.12.15.21.55;  author douglis;  state Stable;
branches ;
next     8.1;

8.1
date     89.08.03.22.23.20;  author rab;  state Exp;
branches ;
next     8.0;

8.0
date     88.11.11.18.41.04;  author douglis;  state Stable;
branches ;
next     6.1;

6.1
date     88.10.13.09.07.01;  author mendel;  state Exp;
branches 6.1.1.1;
next     6.0;

6.0
date     88.08.11.12.28.39;  author brent;  state Stable;
branches ;
next     5.1;

5.1
date     87.08.27.10.38.22;  author brent;  state Exp;
branches ;
next     5.0;

5.0
date     87.08.11.10.51.51;  author sprite;  state Exp;
branches ;
next     ;

6.1.1.1
date     88.10.17.14.25.10;  author jhh;  state Exp;
branches ;
next     ;

9.2.1.1
date     91.10.21.21.49.42;  author kupfer;  state Exp;
branches ;
next     ;


desc
@@


9.2
log
@Added copyright.
@
text
@/*
 * trace.h --
 *
 *	Definitions for the generalized tracing facility.
 *
 * Copyright 1991 Regents of the University of California
 * Permission to use, copy, modify, and distribute this
 * software and its documentation for any purpose and without
 * fee is hereby granted, provided that this copyright
 * notice appears in all copies.  The University of California
 * makes no representations about the suitability of this
 * software for any purpose.  It is provided "as is" without
 * express or implied warranty.
 *
 * $Header: /sprite/src/kernel/utils/RCS/trace.h,v 9.1 90/09/11 14:11:33 kupfer Exp Locker: shirriff $ SPRITE (Berkeley)
 */

#ifndef _TRACE
#define _TRACE

#include "spriteTime.h"

/*
 * Information applicable to an entire circular buffer.
 */

typedef struct Trace_Header {
    int numRecords;		/* the number of records in the buffer */
    int currentRecord;		/* which entry is the next to be written */
    int flags;			/* TRACE_INHIBIT, TRACE_NO_TIMES */
    int dataSize;		/* the size of client-specific trace
				 * information corresponding to each record */
    struct Trace_Record *recordArray;  /* pointer to array of trace records */
} Trace_Header;

/*
 * Trace Header Flags:
 *
 *	TRACE_INHIBIT		- Inhibit taking traces, used internally.
 *	TRACE_NO_TIMES		- Don't take time stamps, faster.
 */

#define TRACE_INHIBIT		0x01
#define TRACE_NO_TIMES		0x02

/*
 * Information stored per-record.
 */

typedef struct Trace_Record {
    Time time;			/* time record was last modified */
    int flags;			/* flags used by the Trace module */
    int event;			/* event being traced */
    ClientData *traceData;	/* pointer into corresponding client-specific
				 * record, if it exists */
} Trace_Record;

/*
 * Record Flags:
 *
 *	TRACE_DATA_VALID	- All data for this record is valid.
 *	TRACE_UNUSED		- Indicates that a record is not used yet.
 *	TRACE_DATA_INVALID	- The traceData area has been zeroed because
 *				  the caller passed a NIL pointer for data.
 */

#define TRACE_DATA_VALID	0x00
#define TRACE_UNUSED 		0x01
#define TRACE_DATA_INVALID	0x10

extern void		Trace_Init _ARGS_((Trace_Header *traceHdrPtr,
					   int numRecords, int size,
					   int flags));
extern void		Trace_Insert _ARGS_((Trace_Header *traceHdrPtr,
					     int event, ClientData data));
extern ReturnStatus	Trace_Dump _ARGS_((Trace_Header *traceHdrPtr,
					   int numRecs, Address addr));
extern ReturnStatus	Trace_Print _ARGS_((Trace_Header *traceHdrPtr,
					    int numRecs, int (*printProc)()));

#endif /* _TRACE */
@


9.2.1.1
log
@Initial branch for Sprite server.
@
text
@d15 1
a15 1
 * $Header: /sprite/src/kernel/utils/RCS/trace.h,v 9.2 91/06/27 12:16:03 shirriff Exp $ SPRITE (Berkeley)
@


9.1
log
@Use function prototypes. Lint.
@
text
@d6 8
a13 2
 * Copyright (C) 1986 Regents of the University of California
 * All rights reserved.
d15 1
a15 2
 *
 * $Header: /sprite/src/kernel/utils/RCS/trace.h,v 9.0 89/09/12 15:21:55 douglis Stable Locker: kupfer $ SPRITE (Berkeley)
@


9.0
log
@Changing version numbers.
@
text
@d10 1
a10 1
 * $Header: /sprite/src/kernel/utils/RCS/trace.h,v 8.1 89/08/03 22:23:20 rab Exp Locker: douglis $ SPRITE (Berkeley)
d66 9
a74 2
extern void Trace_Init();	
extern void Trace_Insert();	
@


8.1
log
@*** empty log message ***
@
text
@d10 1
a10 1
 * $Header: /sprite/src/kernel/utils/RCS/trace.h,v 8.0 88/11/11 18:41:04 douglis Stable Locker: rab $ SPRITE (Berkeley)
@


8.0
log
@Changing version numbers.
@
text
@d10 1
a10 1
 * $Header: /sprite/src/kernel/utils/RCS/trace.h,v 6.1 88/10/13 09:07:01 mendel Exp Locker: douglis $ SPRITE (Berkeley)
d69 1
a69 1
#endif _TRACE
@


6.1
log
@Changed include of time.h to spriteTime.h.
@
text
@d10 1
a10 1
 * $Header: trace.h,v 5.1 87/08/27 10:38:22 brent Exp $ SPRITE (Berkeley)
@


6.1.1.1
log
@added unneeded locks
@
text
@d10 1
a10 1
 * $Header: /sprite/src/kernel/utils/RCS/trace.h,v 6.1.1.1 88/10/17 14:18:35 jhh Exp $ SPRITE (Berkeley)
a28 1
    int mutex;			/* lock for trace header */
@


6.0
log
@Changing version numbers.
@
text
@d16 1
a16 1
#include "time.h"
@


5.1
log
@Made the time-stamp part of the traces optional.
@
text
@d10 1
a10 1
 * $Header: trace.h,v 5.0 87/08/11 10:51:51 sprite Exp $ SPRITE (Berkeley)
@


5.0
log
@First Sprite native copy
@
text
@@
