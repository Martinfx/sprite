head     9.4;
branch   ;
access   ;
symbols  ds3100:9.4 sun3:9.4 sun4nw:9.4 symm:9.4 spur:9.4 sprited:9.3.1 Summer89:9.0 newlib:8.0 Summer88:6.0;
locks    ; strict;
comment  @ * @;


9.4
date     91.09.10.18.43.05;  author rab;  state Exp;
branches ;
next     9.3;

9.3
date     91.02.12.14.15.48;  author jhh;  state Exp;
branches 9.3.1.1;
next     9.2;

9.2
date     90.10.02.16.28.53;  author mgbaker;  state Exp;
branches ;
next     9.1;

9.1
date     90.06.27.11.35.02;  author rab;  state Exp;
branches ;
next     9.0;

9.0
date     89.09.12.15.18.48;  author douglis;  state Stable;
branches ;
next     8.0;

8.0
date     88.11.11.18.36.34;  author douglis;  state Stable;
branches ;
next     6.2;

6.2
date     88.10.28.19.23.24;  author mlgray;  state Exp;
branches ;
next     6.1;

6.1
date     88.08.26.18.25.57;  author mlgray;  state Exp;
branches ;
next     6.0;

6.0
date     88.08.11.12.26.02;  author brent;  state Stable;
branches ;
next     1.3;

1.3
date     88.08.05.14.06.35;  author mlgray;  state Exp;
branches ;
next     1.2;

1.2
date     88.08.04.17.51.26;  author mlgray;  state Exp;
branches ;
next     1.1;

1.1
date     88.08.01.17.10.41;  author mlgray;  state Exp;
branches ;
next     ;

9.3.1.1
date     91.10.22.15.56.08;  author kupfer;  state Exp;
branches ;
next     ;


desc
@Doing byte-swapping now.
@


9.4
log
@Fixed lint errors and removed tracing.
@
text
@/*
 * rpcByteSwap.c --
 *
 *	The code to byte swap incoming rcp headers and parameter blocks.
 *
 * Copyright 1988 Regents of the University of California
 * Permission to use, copy, modify, and distribute this
 * software and its documentation for any purpose and without
 * fee is hereby granted, provided that the above copyright
 * notice appear in all copies.  The University of California
 * makes no representations about the suitability of this
 * software for any purpose.  It is provided "as is" without
 * express or implied warranty.
 */

#ifndef lint
static char rcsid[] = "$Header: /sprite/src/kernel/rpc/RCS/rpcByteSwap.c,v 9.3 91/02/12 14:15:48 jhh Exp Locker: rab $ SPRITE (Berkeley)";
#endif /* not lint */


#include <sprite.h>
#include <stdio.h>
#include <net.h>
#include <rpcInt.h>
#include <rpcPacket.h>

/*
 * Global var for testing byte-swapping.  Causes out-going messages to
 * be byte-swapped, so that the receiving machine must byte-swap them if
 * it is of the same sort.
 */
Boolean	rpcTestByteSwap = FALSE;


/*
 *----------------------------------------------------------------------
 *
 * RpcByteSwapBuffer --
 *
 *	Byte swap the given buffer integer-by-integer.
 *	Byte swapping means taking an integer of the form 0x61626364 and
 *	turning it into 0x64636261.
 *
 * Results:
 *	None.
 *
 * Side effects:
 *	The buffer is byte-swapped.
 *
 *----------------------------------------------------------------------
 */
void
RpcByteSwapBuffer(bufferPtr, numInts)
    register int *bufferPtr;
    register int numInts;
{
    register unsigned int in;

#define	LOW_BYTE_MASK		0x000000ff
#define	MIDDLE_LOW_BYTE_MASK	0x0000ff00
#define	MIDDLE_HIGH_BYTE_MASK	0x00ff0000
#define	HIGH_BYTE_MASK		0xff000000

#ifdef lint
    while (numInts > 0) {
	--numInts;
#else	
    while (--numInts >= 0) {
#endif	
	in = *bufferPtr;
	*bufferPtr++ =   ((in << 8)  & MIDDLE_HIGH_BYTE_MASK)
	               | ((in << 24) & HIGH_BYTE_MASK)
		       | ((in >> 8)  & MIDDLE_LOW_BYTE_MASK)
		       | ((in >> 24) & LOW_BYTE_MASK);
    }
    return;
}



/*
 *----------------------------------------------------------------------
 *
 * RpcByteSwapInComing --
 *
 *	Byte swap the in-coming rpc packet header and the following parameter
 *	block, integer-by-integer.  The data block is not byte swapped.
 *	It knows the RPC packet format:
 *	    The Rpc header, which includes the sizes of the next two parts.
 *	    The parameter area.
 *	    The data area.
 *	Byte swapping means taking an integer of the form 0x61626364 and turning
 *	it into 0x64636261.
 *
 * Results:
 *	TRUE if successful, FALSE if not.  Maybe this should require a more
 *	interesting set of return values, but Rpc_Dispatch just drops the
 *	packet if this routine returns FALSE.
 *
 * Side effects:
 *	The header packet structure and the parameter block are byte-swapped.
 *
 *----------------------------------------------------------------------
 */
Boolean
RpcByteSwapInComing(rpcHdrPtr, packetLength)
    RpcHdr	*rpcHdrPtr;		/* The Rpc Header as it sits in the
					 * network's buffer.  The data follows
					 * the header directly. */
    int		packetLength;		/* Length of the network packet. */
{
    int	numInts;
    int	paramSize;

    /*
     * First byte-swap the rpc header itself.  The header had better be an
     * integral number of integers long!
     */
    numInts = sizeof (RpcHdr) / sizeof (int);
    if ((sizeof (RpcHdr) % sizeof (int)) != 0) {
	return FALSE;
    }
    RpcByteSwapBuffer((int *) rpcHdrPtr, numInts);

    /* now that we've got the right values */
    paramSize = rpcHdrPtr->paramSize;

    /*
     * Make sure the parameter block is all there.
     */
    if (packetLength < sizeof(RpcHdr) + rpcHdrPtr->paramSize) {
	printf("RpcByteSwapInComing: SHORT packet %d < %d, ", 
	    packetLength, sizeof(RpcHdr) + rpcHdrPtr->paramSize);
	printf("srv %d clt %d rpc %d\n", rpcHdrPtr->serverID,
		    rpcHdrPtr->clientID, rpcHdrPtr->command);
	return FALSE;
    }
    /*
     * Now byte-swap the parameter block.  If it isn't an integral number of
     * integers long, something is wrong.
     */
    numInts = paramSize / sizeof (int);
    if ((paramSize % sizeof (int)) != 0) {
	printf("RpcByteSwapInComing: bad paramSize %d, ", paramSize);
	printf("srv %d clt %d rpc %d\n", rpcHdrPtr->serverID,
		    rpcHdrPtr->clientID, rpcHdrPtr->command);
	return FALSE;
    }
    /*
     * We don't add on paramOffset here, since the parameter area, even if
     * it's a fragment, immediately follows the rpcHdr for the fragment.
     */
    RpcByteSwapBuffer((int *) (((char *) rpcHdrPtr) + sizeof (RpcHdr)),
	    numInts);

    return TRUE;
}

/*
 *----------------------------------------------------------------------
 *
 * RpcPrintHdr --
 *
 *	Print out fields from the given header.
 *
 * Results:
 *	None.
 *
 * Side effects:
 *	printf is invoked.
 *
 *----------------------------------------------------------------------
 */
void
RpcPrintHdr(rpcHdrPtr)
    RpcHdr	*rpcHdrPtr;		/* The Rpc Header as it sits in the
					 * network's buffer.  The data follows
					 * the header directly. */
{

	printf("\tversion(X): %x\n\tflags(X): %x\n\tclientID(D): %d\n",
	    rpcHdrPtr->version, rpcHdrPtr->flags, rpcHdrPtr->clientID);
        printf("\tcommand(D): %d\n\tparamSize(X): %x\n", rpcHdrPtr->command,
	    rpcHdrPtr->paramSize);
        printf("\tparamOffset(X): %x\n", rpcHdrPtr->paramOffset);
	return;
}

int
RpcSetTestByteSwap()
{
    rpcTestByteSwap = 1;
    return 0;
}

int
RpcUnsetTestByteSwap()
{
    rpcTestByteSwap = 0;
    return 0;
}
@


9.3
log
@Added RPC sanity checking
@
text
@d17 1
a17 1
static char rcsid[] = "$Header: /sprite/src/kernel/rpc/RCS/rpcByteSwap.c,v 9.2 90/10/02 16:28:53 mgbaker Exp Locker: jhh $ SPRITE (Berkeley)";
d64 4
d69 1
@


9.3.1.1
log
@Initial branch for Sprite server.
@
text
@d17 1
a17 1
static char rcsid[] = "$Header: /sprite/src/kernel/rpc/RCS/rpcByteSwap.c,v 9.3 91/02/12 14:15:48 jhh Exp $ SPRITE (Berkeley)";
@


9.2
log
@More prototyping garbage.
@
text
@d17 1
a17 1
static char rcsid[] = "$Header: /sprite/src/kernel/rpc/RCS/rpcByteSwap.c,v 9.1 90/06/27 11:35:02 rab Exp Locker: mgbaker $ SPRITE (Berkeley)";
d101 1
a101 1
RpcByteSwapInComing(rpcHdrPtr)
d105 1
d109 1
a109 1
	
d124 10
d139 3
@


9.1
log
@Sped up rpcByteSwap.
@
text
@d17 1
a17 1
static char rcsid[] = "$Header: /sprite/src/kernel/rpc/RCS/rpcByteSwap.c,v 9.0 89/09/12 15:18:48 douglis Stable Locker: rab $ SPRITE (Berkeley)";
d21 5
a25 4
#include "sprite.h"
#include "net.h"
#include "rpcInt.h"
#include "rpcPacket.h"
@


9.0
log
@Changing version numbers.
@
text
@d17 1
a17 1
static char rcsid[] = "$Header: /sprite/src/kernel/rpc/RCS/rpcByteSwap.c,v 8.0 88/11/11 18:36:34 douglis Stable Locker: douglis $ SPRITE (Berkeley)";
d53 2
a54 2
    int	*bufferPtr;
    int	numInts;
d56 1
a56 33
    int	i;
    int	offendingInt;
    int	fixedInt;
    int	shiftInt;
#   define	LOW_BYTE_MASK		0x000000ff
#   define	MIDDLE_LOW_BYTE_MASK	0x0000ff00
#   define	MIDDLE_HIGH_BYTE_MASK	0x00ff0000
#   define	HIGH_BYTE_MASK		0xff000000

    for (i = 0; i < numInts; i++) {
	/*
	 * First move the middle high byte to the middle low byte.
	 * Then move the middle low byte to the middle high byte.
	 * Then move the high byte to the low, and vice versa.
	 */
	offendingInt = ((int *) bufferPtr)[i];
	fixedInt = 0;

	shiftInt = offendingInt >> 8;
	shiftInt &= MIDDLE_LOW_BYTE_MASK;
	fixedInt |= shiftInt;

	shiftInt = offendingInt << 8;
	shiftInt &= MIDDLE_HIGH_BYTE_MASK;
	fixedInt |= shiftInt;

	shiftInt = offendingInt >> 24;
	shiftInt &= LOW_BYTE_MASK;
	fixedInt |= shiftInt;

	shiftInt = offendingInt << 24;
	shiftInt &= HIGH_BYTE_MASK;
	fixedInt |= shiftInt;
d58 11
a68 1
	((int *) bufferPtr)[i] = fixedInt;
@


8.0
log
@Changing version numbers.
@
text
@d17 1
a17 1
static char rcsid[] = "$Header: /sprite/src/kernel/rpc/RCS/rpcByteSwap.c,v 6.2 88/10/28 19:23:24 mlgray Exp Locker: douglis $ SPRITE (Berkeley)";
@


6.2
log
@Conversion to new C library.
@
text
@d17 1
a17 1
static char rcsid[] = "$Header: /sprite/src/kernel/rpc/RCS/rpcByteSwap.c,v 6.1 88/08/26 18:25:57 mlgray Exp Locker: mlgray $ SPRITE (Berkeley)";
@


6.1
log
@Fixed some lint errors.
@
text
@d17 1
a17 1
static char rcsid[] = "$Header: rpcByteSwap.c,v 6.0 88/08/11 12:26:02 brent Stable $ SPRITE (Berkeley)";
d172 1
a172 1
 *	Sys_Printf is invoked.
d183 1
a183 1
	Sys_Printf("\tversion(X): %x\n\tflags(X): %x\n\tclientID(D): %d\n",
d185 1
a185 1
        Sys_Printf("\tcommand(D): %d\n\tparamSize(X): %x\n", rpcHdrPtr->command,
d187 1
a187 1
        Sys_Printf("\tparamOffset(X): %x\n", rpcHdrPtr->paramOffset);
@


6.0
log
@Changing version numbers.
@
text
@d1 1
a1 1
/* 
d17 2
a18 2
static char rcsid[] = "$Header: rpcByteSwap.c,v 1.3 88/08/05 14:06:35 mlgray Exp $ SPRITE (Berkeley)";
#endif not lint
d44 1
a44 1
 *	None. 
@


1.3
log
@Lint fix.
@
text
@d17 1
a17 1
static char rcsid[] = "$Header: rpcByteSwap.c,v 1.2 88/08/04 17:51:26 mlgray Exp $ SPRITE (Berkeley)";
@


1.2
log
@In preparation for installing.
@
text
@d17 1
a17 1
static char rcsid[] = "$Header: rpcByteSwap.c,v 1.1 88/08/01 17:10:41 mlgray Exp $ SPRITE (Berkeley)";
a59 1
    int	*toSwap;
@


1.1
log
@Initial revision
@
text
@d17 1
a17 1
static char rcsid[] = "$Header: proto.c,v 1.2 88/03/11 08:39:08 ouster Exp $ SPRITE (Berkeley)";
a31 4
/*
 * Should move to rpcInt.h.
 */
extern	Boolean rpcPrintDebug;
a65 10
    if (rpcTestByteSwap && rpcPrintDebug) {
	Sys_Printf("%s %x %s %d\n", "RpcByteSwapBuffer - called with addr(X) =",
	bufferPtr, "numInts(D) =", numInts);
    }
#ifdef NOTDEF
    if (((int) bufferPtr) % 4 != 0) {
	Sys_Panic(SYS_WARNING,
		"RpcByteSwapBuffer: Rpc header not long-word aligned!");
    }
#endif NOTDEF
a192 14
RpcSetPrintDebug()
{
    rpcPrintDebug = 1;
    return 0;
}

int
RpcUnsetPrintDebug()
{
    rpcPrintDebug = 0;
    return 0;
}

int
a204 1
    
@
